{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/pair/PairLocationInput.js\";\nimport React from 'react';\nimport { extractContext, LocationInput } from '@semapps/geo-components';\n\nconst PairLocationInput = props => /*#__PURE__*/React.createElement(LocationInput, Object.assign({\n  mapboxConfig: {\n    access_token: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n    types: ['place', 'address', 'poi'],\n    country: ['fr']\n  },\n  parse: value => ({\n    type: 'pair:PostalAddress',\n    'pair:label': value.place_name,\n    'pair:addressLocality': value.place_type[0] === 'place' ? value.text : extractContext(value.context, 'place'),\n    'pair:addressStreet': value.place_type[0] === 'address' ? [value.address, value.text].join(' ') : undefined,\n    'pair:addressZipCode': extractContext(value.context, 'postcode'),\n    'pair:addressCountry': extractContext(value.context, 'country'),\n    'pair:longitude': value.center[0],\n    'pair:latitude': value.center[1]\n  }),\n  optionText: resource => resource['pair:label']\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}));\n\nexport default PairLocationInput;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/pair/PairLocationInput.js"],"names":["React","extractContext","LocationInput","PairLocationInput","props","access_token","process","env","REACT_APP_MAPBOX_ACCESS_TOKEN","types","country","value","type","place_name","place_type","text","context","address","join","undefined","center","resource"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,yBAA9C;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,iBAC7B,oBAAC,aAAD;AACE,EAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADd;AAEZC,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,KAArB,CAFK;AAGZC,IAAAA,OAAO,EAAE,CAAC,IAAD;AAHG,GADhB;AAME,EAAA,KAAK,EAAEC,KAAK,KAAK;AACfC,IAAAA,IAAI,EAAE,oBADS;AAEf,kBAAcD,KAAK,CAACE,UAFL;AAGf,4BAAwBF,KAAK,CAACG,UAAN,CAAiB,CAAjB,MAAwB,OAAxB,GAAkCH,KAAK,CAACI,IAAxC,GAA+Cd,cAAc,CAACU,KAAK,CAACK,OAAP,EAAgB,OAAhB,CAHtE;AAIf,0BAAsBL,KAAK,CAACG,UAAN,CAAiB,CAAjB,MAAwB,SAAxB,GAAoC,CAACH,KAAK,CAACM,OAAP,EAAgBN,KAAK,CAACI,IAAtB,EAA4BG,IAA5B,CAAiC,GAAjC,CAApC,GAA4EC,SAJnF;AAKf,2BAAuBlB,cAAc,CAACU,KAAK,CAACK,OAAP,EAAgB,UAAhB,CALtB;AAMf,2BAAuBf,cAAc,CAACU,KAAK,CAACK,OAAP,EAAgB,SAAhB,CANtB;AAOf,sBAAkBL,KAAK,CAACS,MAAN,CAAa,CAAb,CAPH;AAQf,qBAAiBT,KAAK,CAACS,MAAN,CAAa,CAAb;AARF,GAAL,CANd;AAgBE,EAAA,UAAU,EAAEC,QAAQ,IAAIA,QAAQ,CAAC,YAAD;AAhBlC,GAiBMjB,KAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAsBA,eAAeD,iBAAf","sourcesContent":["import React from 'react';\nimport { extractContext, LocationInput } from '@semapps/geo-components';\n\nconst PairLocationInput = props => (\n  <LocationInput\n    mapboxConfig={{\n      access_token: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n      types: ['place', 'address', 'poi'],\n      country: ['fr']\n    }}\n    parse={value => ({\n      type: 'pair:PostalAddress',\n      'pair:label': value.place_name,\n      'pair:addressLocality': value.place_type[0] === 'place' ? value.text : extractContext(value.context, 'place'),\n      'pair:addressStreet': value.place_type[0] === 'address' ? [value.address, value.text].join(' ') : undefined,\n      'pair:addressZipCode': extractContext(value.context, 'postcode'),\n      'pair:addressCountry': extractContext(value.context, 'country'),\n      'pair:longitude': value.center[0],\n      'pair:latitude': value.center[1],\n    })}\n    optionText={resource => resource['pair:label']}\n    {...props}\n  />\n);\n\nexport default PairLocationInput;\n"]},"metadata":{},"sourceType":"module"}