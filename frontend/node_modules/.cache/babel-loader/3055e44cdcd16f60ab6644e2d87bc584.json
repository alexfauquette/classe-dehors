{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/layout/SideMenu.js\";\nimport React, { Fragment } from \"react\";\nimport { Drawer, Divider, ListSubheader, makeStyles } from \"@material-ui/core\";\nimport { MenuItemLink } from \"react-admin\";\nconst useStyles = makeStyles(() => ({\n  paper: {\n    paddingTop: 10,\n    minWidth: 200\n  }\n}));\n\nconst SideMenu = ({\n  menuItems,\n  sidebarOpen,\n  setSidebarOpen\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    open: sidebarOpen,\n    classes: {\n      paper: classes.paper\n    },\n    onClose: () => setSidebarOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, menuItems.map(({\n    text,\n    internal,\n    link,\n    children\n  }) => {\n    if (link) {\n      if (internal) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          key: text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Divider, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(MenuItemLink, {\n          key: link,\n          to: link,\n          primaryText: text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          key: text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Divider, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(MenuItemLink, {\n          primaryText: text,\n          key: link,\n          to: {\n            pathname: link\n          },\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }));\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ListSubheader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, text), children.map(({\n        text,\n        internal,\n        link\n      }) => {\n        if (internal) {\n          return /*#__PURE__*/React.createElement(MenuItemLink, {\n            key: link,\n            to: link,\n            primaryText: text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(MenuItemLink, {\n            primaryText: text,\n            key: link,\n            to: {\n              pathname: link\n            },\n            target: \"_blank\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }\n          });\n        }\n      }));\n    }\n  }));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/layout/SideMenu.js"],"names":["React","Fragment","Drawer","Divider","ListSubheader","makeStyles","MenuItemLink","useStyles","paper","paddingTop","minWidth","SideMenu","menuItems","sidebarOpen","setSidebarOpen","classes","map","text","internal","link","children","pathname"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Drawer, Divider, ListSubheader, makeStyles } from \"@material-ui/core\";\nimport { MenuItemLink } from \"react-admin\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    paddingTop: 10,\n    minWidth: 200,\n  },\n}));\n\nconst SideMenu = ({ menuItems, sidebarOpen, setSidebarOpen }) => {\n  const classes = useStyles();\n  return (\n    <Drawer\n      variant=\"temporary\"\n      open={sidebarOpen}\n      classes={{ paper: classes.paper }}\n      onClose={() => setSidebarOpen(false)}\n    >\n      {menuItems.map(({ text, internal, link, children }) => {\n        if (link) {\n          if (internal) {\n            return (\n              <Fragment key={text}>\n                <Divider />\n                <MenuItemLink key={link} to={link} primaryText={text} />\n              </Fragment>\n            );\n          } else {\n            return (\n              <Fragment key={text}>\n                <Divider />\n                <MenuItemLink\n                  primaryText={text}\n                  key={link}\n                  to={{ pathname: link }}\n                  target=\"_blank\"\n                />\n              </Fragment>\n            );\n          }\n        } else {\n          return (\n            <Fragment key={text}>\n              <Divider />\n              <ListSubheader>{text}</ListSubheader>\n\n              {children.map(({ text, internal, link }) => {\n                if (internal) {\n                  return (\n                    <MenuItemLink key={link} to={link} primaryText={text} />\n                  );\n                } else {\n                  return (\n                    <MenuItemLink\n                      primaryText={text}\n                      key={link}\n                      to={{ pathname: link }}\n                      target=\"_blank\"\n                    />\n                  );\n                }\n              })}\n            </Fragment>\n          );\n        }\n      })}\n    </Drawer>\n  );\n};\n\nexport default SideMenu;\n"]},"metadata":{},"sourceType":"module"}