{"ast":null,"code":"import _slicedToArray from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{dataProvider as semanticDataProvider,httpClient}from'@semapps/semantic-data-provider';import ontologies from'./ontologies.json';import*as resources from'../resources';var dataProvider=semanticDataProvider({sparqlEndpoint:process.env.REACT_APP_MIDDLEWARE_URL+'sparql',httpClient:httpClient,resources:Object.fromEntries(Object.entries(resources).map(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];return[k,v.dataModel];})),ontologies:ontologies,jsonContext:process.env.REACT_APP_MIDDLEWARE_URL+'context.json',uploadsContainerUri:process.env.REACT_APP_MIDDLEWARE_URL+'files'});export default dataProvider;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/config/dataProvider.js"],"names":["dataProvider","semanticDataProvider","httpClient","ontologies","resources","sparqlEndpoint","process","env","REACT_APP_MIDDLEWARE_URL","Object","fromEntries","entries","map","k","v","dataModel","jsonContext","uploadsContainerUri"],"mappings":"iKAAA,OAASA,YAAY,GAAIC,CAAAA,oBAAzB,CAA+CC,UAA/C,KAAiE,iCAAjE,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,cAA3B,CAEA,GAAMJ,CAAAA,YAAY,CAAGC,oBAAoB,CAAC,CACxCI,cAAc,CAAEC,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAuC,QADf,CAExCN,UAAU,CAAVA,UAFwC,CAGxCE,SAAS,CAAEK,MAAM,CAACC,WAAP,CAAmBD,MAAM,CAACE,OAAP,CAAeP,SAAf,EAA0BQ,GAA1B,CAA8B,gDAAEC,CAAF,UAAKC,CAAL,gBAAY,CAACD,CAAD,CAAIC,CAAC,CAACC,SAAN,CAAZ,EAA9B,CAAnB,CAH6B,CAIxCZ,UAAU,CAAVA,UAJwC,CAKxCa,WAAW,CAAEV,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAuC,cALZ,CAMxCS,mBAAmB,CAAEX,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAuC,OANpB,CAAD,CAAzC,CASA,cAAeR,CAAAA,YAAf","sourcesContent":["import { dataProvider as semanticDataProvider, httpClient } from '@semapps/semantic-data-provider';\nimport ontologies from './ontologies.json';\nimport * as resources from '../resources';\n\nconst dataProvider = semanticDataProvider({\n  sparqlEndpoint: process.env.REACT_APP_MIDDLEWARE_URL + 'sparql',\n  httpClient,\n  resources: Object.fromEntries(Object.entries(resources).map(([k, v]) => [k, v.dataModel])),\n  ontologies,\n  jsonContext: process.env.REACT_APP_MIDDLEWARE_URL + 'context.json',\n  uploadsContainerUri: process.env.REACT_APP_MIDDLEWARE_URL + 'files'\n});\n\nexport default dataProvider;\n"]},"metadata":{},"sourceType":"module"}