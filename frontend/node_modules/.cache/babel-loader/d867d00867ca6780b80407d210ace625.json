{"ast":null,"code":"import _slicedToArray from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{dataProvider as semanticDataProvider,httpClient}from\"@semapps/semantic-data-provider\";import ontologies from\"./ontologies.json\";import*as resources from\"../resources\";console.log(process.env.REACT_APP_MIDDLEWARE_URL);var dataProvider=semanticDataProvider({sparqlEndpoint:process.env.REACT_APP_MIDDLEWARE_URL+\"sparql\",httpClient:httpClient,resources:Object.fromEntries(Object.entries(resources).map(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];return[k,v.dataModel];})),ontologies:ontologies,jsonContext:process.env.REACT_APP_MIDDLEWARE_URL+\"context.json\",uploadsContainerUri:process.env.REACT_APP_MIDDLEWARE_URL+\"files\"});export default dataProvider;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/config/dataProvider.js"],"names":["dataProvider","semanticDataProvider","httpClient","ontologies","resources","console","log","process","env","REACT_APP_MIDDLEWARE_URL","sparqlEndpoint","Object","fromEntries","entries","map","k","v","dataModel","jsonContext","uploadsContainerUri"],"mappings":"iKAAA,OACEA,YAAY,GAAIC,CAAAA,oBADlB,CAEEC,UAFF,KAGO,iCAHP,CAIA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,cAA3B,CAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,wBAAxB,EACA,GAAMT,CAAAA,YAAY,CAAGC,oBAAoB,CAAC,CACxCS,cAAc,CAAEH,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAuC,QADf,CAExCP,UAAU,CAAVA,UAFwC,CAGxCE,SAAS,CAAEO,MAAM,CAACC,WAAP,CACTD,MAAM,CAACE,OAAP,CAAeT,SAAf,EAA0BU,GAA1B,CAA8B,gDAAEC,CAAF,UAAKC,CAAL,gBAAY,CAACD,CAAD,CAAIC,CAAC,CAACC,SAAN,CAAZ,EAA9B,CADS,CAH6B,CAMxCd,UAAU,CAAVA,UANwC,CAOxCe,WAAW,CAAEX,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAuC,cAPZ,CAQxCU,mBAAmB,CAAEZ,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAuC,OARpB,CAAD,CAAzC,CAWA,cAAeT,CAAAA,YAAf","sourcesContent":["import {\n  dataProvider as semanticDataProvider,\n  httpClient,\n} from \"@semapps/semantic-data-provider\";\nimport ontologies from \"./ontologies.json\";\nimport * as resources from \"../resources\";\n\nconsole.log(process.env.REACT_APP_MIDDLEWARE_URL);\nconst dataProvider = semanticDataProvider({\n  sparqlEndpoint: process.env.REACT_APP_MIDDLEWARE_URL + \"sparql\",\n  httpClient,\n  resources: Object.fromEntries(\n    Object.entries(resources).map(([k, v]) => [k, v.dataModel])\n  ),\n  ontologies,\n  jsonContext: process.env.REACT_APP_MIDDLEWARE_URL + \"context.json\",\n  uploadsContainerUri: process.env.REACT_APP_MIDDLEWARE_URL + \"files\",\n});\n\nexport default dataProvider;\n"]},"metadata":{},"sourceType":"module"}