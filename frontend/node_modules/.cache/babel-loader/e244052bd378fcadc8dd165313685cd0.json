{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventList.js\";\nimport React from \"react\";\nimport { DateField, ReferenceField, TextField } from \"react-admin\";\nimport { Avatar } from \"@material-ui/core\";\nimport { List, SimpleList, ListActions } from \"@semapps/archipelago-layout\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport EventFilterSidebar from \"./EventFilterSidebar\";\n\nconst EventList = props => /*#__PURE__*/React.createElement(List, Object.assign({\n  title: \"Calendrier\",\n  aside: /*#__PURE__*/React.createElement(EventFilterSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }),\n  sort: {\n    field: \"pair:startDate\",\n    order: \"DESC\"\n  },\n  actions: /*#__PURE__*/React.createElement(ListActions, {\n    exporter: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }\n  })\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SimpleList, {\n  primaryText: record => record[\"pair:label\"],\n  secondaryText: record => /*#__PURE__*/React.createElement(ReferenceField, {\n    record: record,\n    reference: \"Organization\",\n    basePath: \"Organization\" // Hack to get access to to Organization data\n    ,\n    source: \"pair:operatedBy\",\n    linkType: \"show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    source: \"pair:label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })),\n  tertiaryText: record => {\n    console.log(record);\n\n    if (record[\"pair:startDate\"] && record[\"pair:endDate\"] && record[\"pair:startDate\"].slice(0, 10) === record[\"pair:endDate\"].slice(0, 10)) {\n      // if same day\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Le\\xA0\", /*#__PURE__*/React.createElement(DateField, {\n        record: record,\n        source: \"pair:startDate\",\n        options: {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }), \"\\xA0de\\xA0\", /*#__PURE__*/React.createElement(DateField, {\n        record: record,\n        source: \"pair:startDate\",\n        options: {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }), \"\\xA0\\xE0\\xA0\", /*#__PURE__*/React.createElement(DateField, {\n        record: record,\n        source: \"pair:endDate\",\n        options: {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Du\\xA0\", /*#__PURE__*/React.createElement(DateField, {\n      record: record,\n      source: \"pair:startDate\",\n      options: {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), \"\\xA0au\\xA0\", /*#__PURE__*/React.createElement(DateField, {\n      record: record,\n      source: \"pair:endDate\",\n      options: {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }));\n  },\n  leftAvatar: () => /*#__PURE__*/React.createElement(Avatar, {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EventIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })),\n  linkType: \"show\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}));\n\nexport default EventList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventList.js"],"names":["React","DateField","ReferenceField","TextField","Avatar","List","SimpleList","ListActions","EventIcon","EventFilterSidebar","EventList","props","field","order","record","console","log","slice","year","month","day","hour","minute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,SAApC,QAAqD,aAArD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,QAA8C,6BAA9C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,iBAChB,oBAAC,IAAD;AACE,EAAA,KAAK,EAAC,YADR;AAEE,EAAA,KAAK,eAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT;AAGE,EAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE,gBAAT;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAHR;AAIE,EAAA,OAAO,eAAE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJX,GAKMF,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAOE,oBAAC,UAAD;AACE,EAAA,WAAW,EAAGG,MAAD,IAAYA,MAAM,CAAC,YAAD,CADjC;AAEE,EAAA,aAAa,EAAGA,MAAD,iBACb,oBAAC,cAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,QAAQ,EAAC,cAHX,CAG0B;AAH1B;AAIE,IAAA,MAAM,EAAC,iBAJT;AAKE,IAAA,QAAQ,EAAC,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAHJ;AAaE,EAAA,YAAY,EAAGA,MAAD,IAAY;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QACEA,MAAM,CAAC,gBAAD,CAAN,IACAA,MAAM,CAAC,cAAD,CADN,IAEAA,MAAM,CAAC,gBAAD,CAAN,CAAyBG,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,MACEH,MAAM,CAAC,cAAD,CAAN,CAAuBG,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,CAJJ,EAKE;AACA;AACA,0BACE,iEAEE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAEH,MADV;AAEE,QAAA,MAAM,EAAC,gBAFT;AAGE,QAAA,OAAO,EAAE;AACPI,UAAAA,IAAI,EAAE,SADC;AAEPC,UAAAA,KAAK,EAAE,SAFA;AAGPC,UAAAA,GAAG,EAAE;AAHE,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,6BAYE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAEN,MADV;AAEE,QAAA,MAAM,EAAC,gBAFT;AAGE,QAAA,OAAO,EAAE;AACPO,UAAAA,IAAI,EAAE,SADC;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,+BAqBE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAER,MADV;AAEE,QAAA,MAAM,EAAC,cAFT;AAGE,QAAA,OAAO,EAAE;AACPI,UAAAA,IAAI,EAAE,SADC;AAEPC,UAAAA,KAAK,EAAE,SAFA;AAGPC,UAAAA,GAAG,EAAE,SAHE;AAIPC,UAAAA,IAAI,EAAE,SAJC;AAKPC,UAAAA,MAAM,EAAE;AALD,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF;AAmCD;;AACD,wBACE,iEAEE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAER,MADV;AAEE,MAAA,MAAM,EAAC,gBAFT;AAGE,MAAA,OAAO,EAAE;AACPI,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,KAAK,EAAE,SAFA;AAGPC,QAAAA,GAAG,EAAE,SAHE;AAIPC,QAAAA,IAAI,EAAE,SAJC;AAKPC,QAAAA,MAAM,EAAE;AALD,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,6BAcE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAER,MADV;AAEE,MAAA,MAAM,EAAC,cAFT;AAGE,MAAA,OAAO,EAAE;AACPI,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,KAAK,EAAE,SAFA;AAGPC,QAAAA,GAAG,EAAE,SAHE;AAIPC,QAAAA,IAAI,EAAE,SAJC;AAKPC,QAAAA,MAAM,EAAE;AALD,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AA4BD,GAtFH;AAuFE,EAAA,UAAU,EAAE,mBACV,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxFJ;AA4FE,EAAA,QAAQ,EAAC,MA5FX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADF;;AAyGA,eAAeZ,SAAf","sourcesContent":["import React from \"react\";\nimport { DateField, ReferenceField, TextField } from \"react-admin\";\nimport { Avatar } from \"@material-ui/core\";\nimport { List, SimpleList, ListActions } from \"@semapps/archipelago-layout\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport EventFilterSidebar from \"./EventFilterSidebar\";\n\nconst EventList = (props) => (\n  <List\n    title=\"Calendrier\"\n    aside={<EventFilterSidebar />}\n    sort={{ field: \"pair:startDate\", order: \"DESC\" }}\n    actions={<ListActions exporter={false} />}\n    {...props}\n  >\n    <SimpleList\n      primaryText={(record) => record[\"pair:label\"]}\n      secondaryText={(record) => (\n        <ReferenceField\n          record={record}\n          reference=\"Organization\"\n          basePath=\"Organization\" // Hack to get access to to Organization data\n          source=\"pair:operatedBy\"\n          linkType=\"show\"\n        >\n          <TextField source=\"pair:label\" />\n        </ReferenceField>\n      )}\n      tertiaryText={(record) => {\n        console.log(record);\n        if (\n          record[\"pair:startDate\"] &&\n          record[\"pair:endDate\"] &&\n          record[\"pair:startDate\"].slice(0, 10) ===\n            record[\"pair:endDate\"].slice(0, 10)\n        ) {\n          // if same day\n          return (\n            <>\n              Le&nbsp;\n              <DateField\n                record={record}\n                source=\"pair:startDate\"\n                options={{\n                  year: \"numeric\",\n                  month: \"2-digit\",\n                  day: \"2-digit\",\n                }}\n              />\n              &nbsp;de&nbsp;\n              <DateField\n                record={record}\n                source=\"pair:startDate\"\n                options={{\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                }}\n              />\n              &nbsp;à&nbsp;\n              <DateField\n                record={record}\n                source=\"pair:endDate\"\n                options={{\n                  year: \"numeric\",\n                  month: \"2-digit\",\n                  day: \"2-digit\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                }}\n              />\n            </>\n          );\n        }\n        return (\n          <>\n            Du&nbsp;\n            <DateField\n              record={record}\n              source=\"pair:startDate\"\n              options={{\n                year: \"numeric\",\n                month: \"2-digit\",\n                day: \"2-digit\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              }}\n            />\n            &nbsp;au&nbsp;\n            <DateField\n              record={record}\n              source=\"pair:endDate\"\n              options={{\n                year: \"numeric\",\n                month: \"2-digit\",\n                day: \"2-digit\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              }}\n            />\n          </>\n        );\n      }}\n      leftAvatar={() => (\n        <Avatar width=\"100%\">\n          <EventIcon />\n        </Avatar>\n      )}\n      linkType=\"show\"\n    />\n  </List>\n);\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}