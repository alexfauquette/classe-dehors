{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceForm.js\";\nimport React from \"react\";\nimport { SimpleForm, TextInput, required, useInput } from \"react-admin\";\nimport RAMarkdownInput from \"ra-input-markdown\";\nimport PairLocationInput from \"../../pair/PairLocationInput\";\n\nconst validatePlaceForm = values => {\n  const errors = {};\n  console.log(values[\"pair:hasPostalAddress\"]);\n\n  if (!values[\"pair:hasPostalAddress\"]) {\n    errors[\"pair:hasPostalAddress\"] = \"The firstName is required\";\n    errors[\"pair:label\"] = \"The firstName is required\";\n    errors[\"pair:description\"] = \"The firstName is required\";\n  }\n\n  return errors;\n};\n\nconst MarkdownInput = props => {\n  const {\n    input: {\n      name,\n      onChange,\n      ...rest\n    },\n    meta: {\n      touched,\n      error\n    },\n    isRequired\n  } = useInput(props);\n  return /*#__PURE__*/React.createElement(MarkdownInput, Object.assign({\n    name: name,\n    label: props.label,\n    onChange: onChange,\n    error: !!(touched && error),\n    helperText: touched && error,\n    required: isRequired\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport const PlaceForm = ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(SimpleForm, Object.assign({}, rest, {\n  redirect: \"show\",\n  validate: validatePlaceForm,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(PairLocationInput, {\n  source: \"pair:hasPostalAddress\",\n  fullWidth: true,\n  validate: [required()],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"pair:label\",\n  fullWidth: true,\n  error: \"aaa\",\n  helperText: \"eee\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(MarkdownInput, Object.assign({}, rest, {\n  multiline: true,\n  source: \"pair:description\",\n  defaultValue: \"test\",\n  fullWidth: true,\n  validate: [required()],\n  validation: {\n    required: true\n  },\n  error: \"aaa\",\n  helperText: \"eee\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n})));\nexport default PlaceForm;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceForm.js"],"names":["React","SimpleForm","TextInput","required","useInput","RAMarkdownInput","PairLocationInput","validatePlaceForm","values","errors","console","log","MarkdownInput","props","input","name","onChange","rest","meta","touched","error","isRequired","label","PlaceForm","mode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,QAA1C,QAA0D,aAA1D;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;AAEA,MAAMC,iBAAiB,GAAIC,MAAD,IAAY;AACpC,QAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAAC,uBAAD,CAAlB;;AACA,MAAI,CAACA,MAAM,CAAC,uBAAD,CAAX,EAAsC;AACpCC,IAAAA,MAAM,CAAC,uBAAD,CAAN,GAAkC,2BAAlC;AACAA,IAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,2BAAvB;AACAA,IAAAA,MAAM,CAAC,kBAAD,CAAN,GAA6B,2BAA7B;AACD;;AACD,SAAOA,MAAP;AACD,CATD;;AAWA,MAAMG,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkB,SAAGC;AAArB,KADH;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAFF;AAGJC,IAAAA;AAHI,MAIFjB,QAAQ,CAACS,KAAD,CAJZ;AAKA,sBACE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACS,KAFf;AAGE,IAAA,QAAQ,EAAEN,QAHZ;AAIE,IAAA,KAAK,EAAE,CAAC,EAAEG,OAAO,IAAIC,KAAb,CAJV;AAKE,IAAA,UAAU,EAAED,OAAO,IAAIC,KALzB;AAME,IAAA,QAAQ,EAAEC;AANZ,KAOMJ,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAWD,CAjBD;;AAkBA,OAAO,MAAMM,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQ,KAAGP;AAAX,CAAD,kBACvB,oBAAC,UAAD,oBAAgBA,IAAhB;AAAsB,EAAA,QAAQ,EAAC,MAA/B;AAAsC,EAAA,QAAQ,EAAEV,iBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,iBAAD;AACE,EAAA,MAAM,EAAC,uBADT;AAEE,EAAA,SAAS,MAFX;AAGE,EAAA,QAAQ,EAAE,CAACJ,QAAQ,EAAT,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAME,oBAAC,SAAD;AAAW,EAAA,MAAM,EAAC,YAAlB;AAA+B,EAAA,SAAS,MAAxC;AAAyC,EAAA,KAAK,EAAE,KAAhD;AAAuD,EAAA,UAAU,EAAE,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,eAOE,oBAAC,aAAD,oBACMc,IADN;AAEE,EAAA,SAAS,MAFX;AAGE,EAAA,MAAM,EAAC,kBAHT;AAIE,EAAA,YAAY,EAAC,MAJf;AAKE,EAAA,SAAS,MALX;AAME,EAAA,QAAQ,EAAE,CAACd,QAAQ,EAAT,CANZ;AAOE,EAAA,UAAU,EAAE;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAPd;AAQE,EAAA,KAAK,EAAE,KART;AASE,EAAA,UAAU,EAAE,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPF,CADK;AAsBP,eAAeoB,SAAf","sourcesContent":["import React from \"react\";\nimport { SimpleForm, TextInput, required, useInput } from \"react-admin\";\nimport RAMarkdownInput from \"ra-input-markdown\";\nimport PairLocationInput from \"../../pair/PairLocationInput\";\n\nconst validatePlaceForm = (values) => {\n  const errors = {};\n  console.log(values[\"pair:hasPostalAddress\"]);\n  if (!values[\"pair:hasPostalAddress\"]) {\n    errors[\"pair:hasPostalAddress\"] = \"The firstName is required\";\n    errors[\"pair:label\"] = \"The firstName is required\";\n    errors[\"pair:description\"] = \"The firstName is required\";\n  }\n  return errors;\n};\n\nconst MarkdownInput = (props) => {\n  const {\n    input: { name, onChange, ...rest },\n    meta: { touched, error },\n    isRequired,\n  } = useInput(props);\n  return (\n    <MarkdownInput\n      name={name}\n      label={props.label}\n      onChange={onChange}\n      error={!!(touched && error)}\n      helperText={touched && error}\n      required={isRequired}\n      {...rest}\n    />\n  );\n};\nexport const PlaceForm = ({ mode, ...rest }) => (\n  <SimpleForm {...rest} redirect=\"show\" validate={validatePlaceForm}>\n    <PairLocationInput\n      source=\"pair:hasPostalAddress\"\n      fullWidth\n      validate={[required()]}\n    />\n    <TextInput source=\"pair:label\" fullWidth error={\"aaa\"} helperText={\"eee\"} />\n    <MarkdownInput\n      {...rest}\n      multiline\n      source=\"pair:description\"\n      defaultValue=\"test\"\n      fullWidth\n      validate={[required()]}\n      validation={{ required: true }}\n      error={\"aaa\"}\n      helperText={\"eee\"}\n    />\n  </SimpleForm>\n);\n\nexport default PlaceForm;\n"]},"metadata":{},"sourceType":"module"}