{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/contact/ContactDialog.js\";\nimport React from 'react';\nimport { Button, useNotify, required } from 'react-admin';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, makeStyles, TextField } from '@material-ui/core';\nimport { Form, Field } from 'react-final-form';\nimport SendIcon from '@material-ui/icons/Send';\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 8\n  },\n  actions: {\n    padding: 15\n  },\n  addForm: {\n    paddingTop: 0\n  },\n  listForm: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingRight: 0,\n    maxHeight: 210\n  }\n}));\n\nconst FinalFormTextField = ({\n  input: {\n    name,\n    onChange,\n    value,\n    ...restInput\n  },\n  meta,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextField, Object.assign({}, rest, {\n  name: name,\n  helperText: meta.touched ? meta.error : undefined,\n  error: meta.error && meta.touched,\n  inputProps: restInput,\n  onChange: onChange,\n  value: value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}));\n\nconst ContactDialog = ({\n  user,\n  emailPredicate,\n  open,\n  onClose\n}) => {\n  const classes = useStyles();\n  const notify = useNotify();\n\n  const onSubmit = async values => {\n    const result = await fetch(process.env.REACT_APP_MIDDLEWARE_URL + '_mailer/contact-user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userUri: user['@id'] || user.id,\n        emailPredicate,\n        ...values\n      })\n    });\n\n    if (result.ok) {\n      onClose();\n      notify('Votre message a bien été envoyé', 'success');\n    } else {\n      notify('Erreur lors de votre envoi de message', 'error');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      form,\n      submitting,\n      pristine\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      fullWidth: true,\n      open: open,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Contacter \", user['pair:label']), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.addForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"name\",\n      component: FinalFormTextField,\n      label: \"Votre nom\",\n      variant: \"filled\",\n      margin: \"dense\",\n      fullWidth: true,\n      validate: required('Champ requis'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      component: FinalFormTextField,\n      label: \"Votre adresse mail\",\n      variant: \"filled\",\n      margin: \"dense\",\n      fullWidth: true,\n      validate: required('Champ requis'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: FinalFormTextField,\n      label: \"Objet\",\n      variant: \"filled\",\n      margin: \"dense\",\n      fullWidth: true,\n      validate: required('Champ requis'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"content\",\n      component: FinalFormTextField,\n      label: \"Message\",\n      variant: \"filled\",\n      margin: \"dense\",\n      fullWidth: true,\n      multiline: true,\n      rows: 7,\n      validate: required('Champ requis'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      className: classes.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"ra.action.close\",\n      variant: \"text\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      label: \"Envoyer\",\n      variant: \"contained\",\n      endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 82\n        }\n      }),\n      onClick: () => form.submit(),\n      disabled: submitting || pristine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ContactDialog;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/contact/ContactDialog.js"],"names":["React","Button","useNotify","required","Dialog","DialogTitle","DialogContent","DialogActions","makeStyles","TextField","Form","Field","SendIcon","useStyles","title","paddingBottom","actions","padding","addForm","paddingTop","listForm","paddingRight","maxHeight","FinalFormTextField","input","name","onChange","value","restInput","meta","rest","touched","error","undefined","ContactDialog","user","emailPredicate","open","onClose","classes","notify","onSubmit","values","result","fetch","process","env","REACT_APP_MIDDLEWARE_URL","method","headers","body","JSON","stringify","userUri","id","ok","handleSubmit","form","submitting","pristine","submit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, useNotify, required } from 'react-admin';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, makeStyles, TextField } from '@material-ui/core';\nimport { Form, Field } from 'react-final-form';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 8\n  },\n  actions: {\n    padding: 15\n  },\n  addForm: {\n    paddingTop: 0\n  },\n  listForm: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingRight: 0,\n    maxHeight: 210\n  }\n}));\n\nconst FinalFormTextField = ({ input: { name, onChange, value, ...restInput }, meta, ...rest }) => (\n  <TextField\n    {...rest}\n    name={name}\n    helperText={meta.touched ? meta.error : undefined}\n    error={meta.error && meta.touched}\n    inputProps={restInput}\n    onChange={onChange}\n    value={value}\n  />\n);\n\nconst ContactDialog = ({ user, emailPredicate, open, onClose }) => {\n  const classes = useStyles();\n  const notify = useNotify();\n\n  const onSubmit = async values => {\n    const result = await fetch(process.env.REACT_APP_MIDDLEWARE_URL + '_mailer/contact-user', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userUri: user['@id'] || user.id, emailPredicate, ...values })\n    });\n\n    if( result.ok ) {\n      onClose();\n      notify('Votre message a bien été envoyé', 'success');\n    } else {\n      notify('Erreur lors de votre envoi de message', 'error');\n    }\n  };\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      render={({ handleSubmit, form, submitting, pristine }) => (\n        <form onSubmit={handleSubmit}>\n          <Dialog fullWidth open={open} onClose={onClose}>\n            <DialogTitle className={classes.title}>Contacter {user['pair:label']}</DialogTitle>\n            <DialogContent className={classes.addForm}>\n              <Field name=\"name\" component={FinalFormTextField} label=\"Votre nom\" variant=\"filled\" margin=\"dense\" fullWidth validate={required('Champ requis')} />\n              <Field name=\"email\" component={FinalFormTextField} label=\"Votre adresse mail\" variant=\"filled\" margin=\"dense\" fullWidth validate={required('Champ requis')} />\n              <Field name=\"title\" component={FinalFormTextField} label=\"Objet\" variant=\"filled\" margin=\"dense\" fullWidth validate={required('Champ requis')} />\n              <Field name=\"content\" component={FinalFormTextField} label=\"Message\" variant=\"filled\" margin=\"dense\" fullWidth multiline rows={7} validate={required('Champ requis')} />\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n              <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n              <Button type=\"submit\" label=\"Envoyer\" variant=\"contained\" endIcon={<SendIcon />} onClick={() => form.submit()} disabled={submitting || pristine} />\n            </DialogActions>\n          </Dialog>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default ContactDialog;\n"]},"metadata":{},"sourceType":"module"}