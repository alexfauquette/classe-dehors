{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/pair/PairLocationInput.js\";\nimport React from \"react\";\nimport { extractContext, LocationInput } from \"@semapps/geo-components\";\n\nconst PairLocationInput = props => /*#__PURE__*/React.createElement(LocationInput, Object.assign({\n  mapboxConfig: {\n    access_token: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n    types: [\"place\", \"address\", \"poi\"],\n    country: [\"fr\"]\n  },\n  parse: value => ({\n    type: \"pair:PostalAddress\",\n    \"pair:label\": value.place_name,\n    \"pair:addressLocality\": value.place_type[0] === \"place\" ? value.text : extractContext(value.context, \"place\"),\n    \"pair:addressStreet\": value.place_type[0] === \"address\" ? [value.address, value.text].join(\" \") : undefined,\n    \"pair:addressZipCode\": extractContext(value.context, \"postcode\"),\n    \"pair:addressCountry\": extractContext(value.context, \"country\"),\n    \"pair:longitude\": value.center[0],\n    \"pair:latitude\": value.center[1]\n  }),\n  optionText: resource => resource[\"pair:label\"]\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}));\n\nexport default PairLocationInput;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/pair/PairLocationInput.js"],"names":["React","extractContext","LocationInput","PairLocationInput","props","access_token","process","env","REACT_APP_MAPBOX_ACCESS_TOKEN","types","country","value","type","place_name","place_type","text","context","address","join","undefined","center","resource"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,yBAA9C;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,iBACxB,oBAAC,aAAD;AACE,EAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADd;AAEZC,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,KAArB,CAFK;AAGZC,IAAAA,OAAO,EAAE,CAAC,IAAD;AAHG,GADhB;AAME,EAAA,KAAK,EAAGC,KAAD,KAAY;AACjBC,IAAAA,IAAI,EAAE,oBADW;AAEjB,kBAAcD,KAAK,CAACE,UAFH;AAGjB,4BACEF,KAAK,CAACG,UAAN,CAAiB,CAAjB,MAAwB,OAAxB,GACIH,KAAK,CAACI,IADV,GAEId,cAAc,CAACU,KAAK,CAACK,OAAP,EAAgB,OAAhB,CANH;AAOjB,0BACEL,KAAK,CAACG,UAAN,CAAiB,CAAjB,MAAwB,SAAxB,GACI,CAACH,KAAK,CAACM,OAAP,EAAgBN,KAAK,CAACI,IAAtB,EAA4BG,IAA5B,CAAiC,GAAjC,CADJ,GAEIC,SAVW;AAWjB,2BAAuBlB,cAAc,CAACU,KAAK,CAACK,OAAP,EAAgB,UAAhB,CAXpB;AAYjB,2BAAuBf,cAAc,CAACU,KAAK,CAACK,OAAP,EAAgB,SAAhB,CAZpB;AAajB,sBAAkBL,KAAK,CAACS,MAAN,CAAa,CAAb,CAbD;AAcjB,qBAAiBT,KAAK,CAACS,MAAN,CAAa,CAAb;AAdA,GAAZ,CANT;AAsBE,EAAA,UAAU,EAAGC,QAAD,IAAcA,QAAQ,CAAC,YAAD;AAtBpC,GAuBMjB,KAvBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AA4BA,eAAeD,iBAAf","sourcesContent":["import React from \"react\";\nimport { extractContext, LocationInput } from \"@semapps/geo-components\";\n\nconst PairLocationInput = (props) => (\n  <LocationInput\n    mapboxConfig={{\n      access_token: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n      types: [\"place\", \"address\", \"poi\"],\n      country: [\"fr\"],\n    }}\n    parse={(value) => ({\n      type: \"pair:PostalAddress\",\n      \"pair:label\": value.place_name,\n      \"pair:addressLocality\":\n        value.place_type[0] === \"place\"\n          ? value.text\n          : extractContext(value.context, \"place\"),\n      \"pair:addressStreet\":\n        value.place_type[0] === \"address\"\n          ? [value.address, value.text].join(\" \")\n          : undefined,\n      \"pair:addressZipCode\": extractContext(value.context, \"postcode\"),\n      \"pair:addressCountry\": extractContext(value.context, \"country\"),\n      \"pair:longitude\": value.center[0],\n      \"pair:latitude\": value.center[1],\n    })}\n    optionText={(resource) => resource[\"pair:label\"]}\n    {...props}\n  />\n);\n\nexport default PairLocationInput;\n"]},"metadata":{},"sourceType":"module"}