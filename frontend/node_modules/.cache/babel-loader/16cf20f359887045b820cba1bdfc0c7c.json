{"ast":null,"code":"import React from'react';import{extractContext,LocationInput}from'@semapps/geo-components';var PairLocationInput=function PairLocationInput(props){return/*#__PURE__*/React.createElement(LocationInput,Object.assign({mapboxConfig:{access_token:process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,types:['place','address'],country:['fr','be','ch']},parse:function parse(value){return{type:'pair:PostalAddress','pair:label':value.place_name,'pair:addressLocality':value.place_type[0]==='place'?value.text:extractContext(value.context,'place'),'pair:addressStreet':value.place_type[0]==='address'?[value.address,value.text].join(' '):undefined,'pair:addressZipCode':extractContext(value.context,'postcode'),'pair:addressCountry':extractContext(value.context,'country'),'pair:longitude':value.center[0],'pair:latitude':value.center[1]};},optionText:function optionText(resource){return resource['pair:label'];}},props));};export default PairLocationInput;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/pair/PairLocationInput.js"],"names":["React","extractContext","LocationInput","PairLocationInput","props","access_token","process","env","REACT_APP_MAPBOX_ACCESS_TOKEN","types","country","value","type","place_name","place_type","text","context","address","join","undefined","center","resource"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,CAAyBC,aAAzB,KAA8C,yBAA9C,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,KAAK,qBAC7B,oBAAC,aAAD,gBACE,YAAY,CAAE,CACZC,YAAY,CAAEC,OAAO,CAACC,GAAR,CAAYC,6BADd,CAEZC,KAAK,CAAE,CAAC,OAAD,CAAU,SAAV,CAFK,CAGZC,OAAO,CAAE,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAHG,CADhB,CAME,KAAK,CAAE,eAAAC,KAAK,QAAK,CACfC,IAAI,CAAE,oBADS,CAEf,aAAcD,KAAK,CAACE,UAFL,CAGf,uBAAwBF,KAAK,CAACG,UAAN,CAAiB,CAAjB,IAAwB,OAAxB,CAAkCH,KAAK,CAACI,IAAxC,CAA+Cd,cAAc,CAACU,KAAK,CAACK,OAAP,CAAgB,OAAhB,CAHtE,CAIf,qBAAsBL,KAAK,CAACG,UAAN,CAAiB,CAAjB,IAAwB,SAAxB,CAAoC,CAACH,KAAK,CAACM,OAAP,CAAgBN,KAAK,CAACI,IAAtB,EAA4BG,IAA5B,CAAiC,GAAjC,CAApC,CAA4EC,SAJnF,CAKf,sBAAuBlB,cAAc,CAACU,KAAK,CAACK,OAAP,CAAgB,UAAhB,CALtB,CAMf,sBAAuBf,cAAc,CAACU,KAAK,CAACK,OAAP,CAAgB,SAAhB,CANtB,CAOf,iBAAkBL,KAAK,CAACS,MAAN,CAAa,CAAb,CAPH,CAQf,gBAAiBT,KAAK,CAACS,MAAN,CAAa,CAAb,CARF,CAAL,EANd,CAgBE,UAAU,CAAE,oBAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAAC,YAAD,CAAZ,EAhBtB,EAiBMjB,KAjBN,EAD6B,EAA/B,CAsBA,cAAeD,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport { extractContext, LocationInput } from '@semapps/geo-components';\n\nconst PairLocationInput = props => (\n  <LocationInput\n    mapboxConfig={{\n      access_token: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n      types: ['place', 'address'],\n      country: ['fr', 'be', 'ch']\n    }}\n    parse={value => ({\n      type: 'pair:PostalAddress',\n      'pair:label': value.place_name,\n      'pair:addressLocality': value.place_type[0] === 'place' ? value.text : extractContext(value.context, 'place'),\n      'pair:addressStreet': value.place_type[0] === 'address' ? [value.address, value.text].join(' ') : undefined,\n      'pair:addressZipCode': extractContext(value.context, 'postcode'),\n      'pair:addressCountry': extractContext(value.context, 'country'),\n      'pair:longitude': value.center[0],\n      'pair:latitude': value.center[1],\n    })}\n    optionText={resource => resource['pair:label']}\n    {...props}\n  />\n);\n\nexport default PairLocationInput;\n"]},"metadata":{},"sourceType":"module"}