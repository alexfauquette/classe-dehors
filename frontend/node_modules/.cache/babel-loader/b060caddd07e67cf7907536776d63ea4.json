{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventForm.js\";\nimport React from \"react\";\nimport { required, SimpleForm, TextInput, SelectInput } from \"react-admin\";\nimport MarkdownInput from \"../../markdown/MarkdownInput\";\nimport { DateTimeInput } from \"@semapps/date-components\";\nimport frLocale from \"date-fns/locale/fr\";\nimport { eventType, organizerType } from \"constants.js\";\n\nconst urlValidation = value => {\n  if (value && !value.startsWith(\"http://\") && !value.startsWith(\"https://\")) {\n    return \"Veuillez entrer une adresse valide\";\n  }\n\n  return undefined;\n};\n\nconst EventForm = props => /*#__PURE__*/React.createElement(SimpleForm, Object.assign({}, props, {\n  redirect: \"show\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"pair:label\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SelectInput, {\n  source: \"pair:hasType\",\n  validate: required(),\n  choices: eventType,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SelectInput, {\n  source: \"cd:organizerTypee\",\n  validate: required(),\n  choices: organizerType,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"cd:organizerName\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(MarkdownInput, {\n  multiline: true,\n  source: \"pair:description\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(DateTimeInput, {\n  source: \"pair:startDate\",\n  options: {\n    format: \"dd/MM/yyyy à HH:mm\",\n    ampm: false\n  },\n  providerOptions: {\n    locale: frLocale\n  },\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(DateTimeInput, {\n  source: \"pair:endDate\",\n  options: {\n    format: \"dd/MM/yyyy à HH:mm\",\n    ampm: false\n  },\n  providerOptions: {\n    locale: frLocale\n  },\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"cd:registrationPage\",\n  validate: urlValidation,\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"cd:meetingPage\",\n  validate: urlValidation,\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"cd:documentedAt\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }\n}));\n\nexport default EventForm;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventForm.js"],"names":["React","required","SimpleForm","TextInput","SelectInput","MarkdownInput","DateTimeInput","frLocale","eventType","organizerType","urlValidation","value","startsWith","undefined","EventForm","props","format","ampm","locale"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { required, SimpleForm, TextInput, SelectInput } from \"react-admin\";\nimport MarkdownInput from \"../../markdown/MarkdownInput\";\nimport { DateTimeInput } from \"@semapps/date-components\";\nimport frLocale from \"date-fns/locale/fr\";\nimport { eventType, organizerType } from \"constants.js\";\n\nconst urlValidation = (value) => {\n  if (value && !value.startsWith(\"http://\") && !value.startsWith(\"https://\")) {\n    return \"Veuillez entrer une adresse valide\";\n  }\n  return undefined;\n};\n\nconst EventForm = (props) => (\n  <SimpleForm {...props} redirect=\"show\">\n    <TextInput source=\"pair:label\" validate={required()} fullWidth />\n    <SelectInput\n      source=\"pair:hasType\"\n      validate={required()}\n      choices={eventType}\n    />\n    <SelectInput\n      source=\"cd:organizerTypee\"\n      validate={required()}\n      choices={organizerType}\n    />\n    <TextInput source=\"cd:organizerName\" fullWidth />\n\n    <MarkdownInput multiline source=\"pair:description\" fullWidth />\n    <DateTimeInput\n      source=\"pair:startDate\"\n      options={{\n        format: \"dd/MM/yyyy à HH:mm\",\n        ampm: false,\n      }}\n      providerOptions={{\n        locale: frLocale,\n      }}\n      fullWidth\n    />\n    <DateTimeInput\n      source=\"pair:endDate\"\n      options={{\n        format: \"dd/MM/yyyy à HH:mm\",\n        ampm: false,\n      }}\n      providerOptions={{\n        locale: frLocale,\n      }}\n      fullWidth\n    />\n    <TextInput\n      source=\"cd:registrationPage\"\n      validate={urlValidation}\n      fullWidth\n    />\n    <TextInput source=\"cd:meetingPage\" validate={urlValidation} fullWidth />\n    <TextInput source=\"cd:documentedAt\" fullWidth />\n  </SimpleForm>\n);\n\nexport default EventForm;\n"]},"metadata":{},"sourceType":"module"}