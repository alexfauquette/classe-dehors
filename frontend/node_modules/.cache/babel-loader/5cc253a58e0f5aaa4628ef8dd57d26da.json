{"ast":null,"code":"import { dataProvider as semanticDataProvider, httpClient } from \"@semapps/semantic-data-provider\";\nimport ontologies from \"./ontologies.json\";\nimport * as resources from \"../resources\";\nconsole.log(process.env.REACT_APP_MIDDLEWARE_URL);\nconst dataProvider = semanticDataProvider({\n  sparqlEndpoint: process.env.REACT_APP_MIDDLEWARE_URL + \"sparql\",\n  httpClient,\n  resources: Object.fromEntries(Object.entries(resources).map(([k, v]) => [k, v.dataModel])),\n  ontologies,\n  jsonContext: process.env.REACT_APP_MIDDLEWARE_URL + \"context.json\",\n  uploadsContainerUri: process.env.REACT_APP_MIDDLEWARE_URL + \"files\"\n});\nexport default dataProvider;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/config/dataProvider.js"],"names":["dataProvider","semanticDataProvider","httpClient","ontologies","resources","console","log","process","env","REACT_APP_MIDDLEWARE_URL","sparqlEndpoint","Object","fromEntries","entries","map","k","v","dataModel","jsonContext","uploadsContainerUri"],"mappings":"AAAA,SACEA,YAAY,IAAIC,oBADlB,EAEEC,UAFF,QAGO,iCAHP;AAIA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,wBAAxB;AACA,MAAMT,YAAY,GAAGC,oBAAoB,CAAC;AACxCS,EAAAA,cAAc,EAAEH,OAAO,CAACC,GAAR,CAAYC,wBAAZ,GAAuC,QADf;AAExCP,EAAAA,UAFwC;AAGxCE,EAAAA,SAAS,EAAEO,MAAM,CAACC,WAAP,CACTD,MAAM,CAACE,OAAP,CAAeT,SAAf,EAA0BU,GAA1B,CAA8B,CAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD,KAAY,CAACD,CAAD,EAAIC,CAAC,CAACC,SAAN,CAA1C,CADS,CAH6B;AAMxCd,EAAAA,UANwC;AAOxCe,EAAAA,WAAW,EAAEX,OAAO,CAACC,GAAR,CAAYC,wBAAZ,GAAuC,cAPZ;AAQxCU,EAAAA,mBAAmB,EAAEZ,OAAO,CAACC,GAAR,CAAYC,wBAAZ,GAAuC;AARpB,CAAD,CAAzC;AAWA,eAAeT,YAAf","sourcesContent":["import {\n  dataProvider as semanticDataProvider,\n  httpClient,\n} from \"@semapps/semantic-data-provider\";\nimport ontologies from \"./ontologies.json\";\nimport * as resources from \"../resources\";\n\nconsole.log(process.env.REACT_APP_MIDDLEWARE_URL);\nconst dataProvider = semanticDataProvider({\n  sparqlEndpoint: process.env.REACT_APP_MIDDLEWARE_URL + \"sparql\",\n  httpClient,\n  resources: Object.fromEntries(\n    Object.entries(resources).map(([k, v]) => [k, v.dataModel])\n  ),\n  ontologies,\n  jsonContext: process.env.REACT_APP_MIDDLEWARE_URL + \"context.json\",\n  uploadsContainerUri: process.env.REACT_APP_MIDDLEWARE_URL + \"files\",\n});\n\nexport default dataProvider;\n"]},"metadata":{},"sourceType":"module"}