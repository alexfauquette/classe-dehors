{"ast":null,"code":"var _this = this;\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useField } from \"react-final-form\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nvar styles = {};\n\nvar MarkdownInput = function (_a) {\n  var name = _a.name;\n  var _b = useField(name).input,\n      value = _b.value,\n      onChange = _b.onChange;\n\n  var _c = useState(\"\"),\n      value = _c[0],\n      setValue = _c[1];\n\n  var _d = useState(\"write\"),\n      tab = _d[0],\n      setTab = _d[1];\n\n  useEffect(function () {\n    setValue(value);\n  }, []);\n  var converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n\n  var handleValueChange = function (value) {\n    setValue(value);\n    onChange(value);\n  };\n\n  return React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"ra-input-mde\"\n  }, React.createElement(ReactMde, {\n    onChange: function (value) {\n      return handleValueChange(value);\n    },\n    onTabChange: function (tab) {\n      return setTab(tab);\n    },\n    value: value,\n    generateMarkdownPreview: function (markdown) {\n      return Promise.resolve(converter.makeHtml(markdown));\n    },\n    selectedTab: _this.state.tab\n  }));\n}; // const MarkDownInputWithField = addField(withStyles(styles)(MarkdownInput));\n// MarkDownInputWithField.defaultProps = {\n//   addLabel: true,\n//   fullWidth: true,\n// };\n\n\nexport default MarkdownInput;","map":{"version":3,"sources":["/home/alexandre/dev/ra-input-markdown/esm/index.js"],"names":["_this","React","useState","useEffect","ReactMde","Showdown","FormControl","useField","styles","MarkdownInput","_a","name","_b","input","value","onChange","_c","setValue","_d","tab","setTab","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","handleValueChange","createElement","fullWidth","className","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml","selectedTab","state"],"mappings":"AAAA,IAAIA,KAAK,GAAG,IAAZ;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,4CAAP;AACA,IAAIC,MAAM,GAAG,EAAb;;AACA,IAAIC,aAAa,GAAG,UAAUC,EAAV,EAAc;AAC9B,MAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;AACA,MAAIC,EAAE,GAAGL,QAAQ,CAACI,IAAD,CAAR,CAAeE,KAAxB;AAAA,MAA+BC,KAAK,GAAGF,EAAE,CAACE,KAA1C;AAAA,MAAiDC,QAAQ,GAAGH,EAAE,CAACG,QAA/D;;AACA,MAAIC,EAAE,GAAGd,QAAQ,CAAC,EAAD,CAAjB;AAAA,MAAuBY,KAAK,GAAGE,EAAE,CAAC,CAAD,CAAjC;AAAA,MAAsCC,QAAQ,GAAGD,EAAE,CAAC,CAAD,CAAnD;;AACA,MAAIE,EAAE,GAAGhB,QAAQ,CAAC,OAAD,CAAjB;AAAA,MAA4BiB,GAAG,GAAGD,EAAE,CAAC,CAAD,CAApC;AAAA,MAAyCE,MAAM,GAAGF,EAAE,CAAC,CAAD,CAApD;;AACAf,EAAAA,SAAS,CAAC,YAAY;AAClBc,IAAAA,QAAQ,CAACH,KAAD,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAIO,SAAS,GAAG,IAAIhB,QAAQ,CAACiB,SAAb,CAAuB;AACnCC,IAAAA,MAAM,EAAE,IAD2B;AAEnCC,IAAAA,kBAAkB,EAAE,IAFe;AAGnCC,IAAAA,aAAa,EAAE,IAHoB;AAInCC,IAAAA,SAAS,EAAE;AAJwB,GAAvB,CAAhB;;AAMA,MAAIC,iBAAiB,GAAG,UAAUb,KAAV,EAAiB;AACrCG,IAAAA,QAAQ,CAACH,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAHD;;AAIA,SAAQb,KAAK,CAAC2B,aAAN,CAAoBtB,WAApB,EAAiC;AAAEuB,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,SAAS,EAAE;AAA9B,GAAjC,EACJ7B,KAAK,CAAC2B,aAAN,CAAoBxB,QAApB,EAA8B;AAAEW,IAAAA,QAAQ,EAAE,UAAUD,KAAV,EAAiB;AAAE,aAAOa,iBAAiB,CAACb,KAAD,CAAxB;AAAkC,KAAjE;AAAmEiB,IAAAA,WAAW,EAAE,UAAUZ,GAAV,EAAe;AAAE,aAAOC,MAAM,CAACD,GAAD,CAAb;AAAqB,KAAtH;AAAwHL,IAAAA,KAAK,EAAEA,KAA/H;AAAsIkB,IAAAA,uBAAuB,EAAE,UAAUC,QAAV,EAAoB;AACzM,aAAOC,OAAO,CAACC,OAAR,CAAgBd,SAAS,CAACe,QAAV,CAAmBH,QAAnB,CAAhB,CAAP;AACH,KAFyB;AAEvBI,IAAAA,WAAW,EAAErC,KAAK,CAACsC,KAAN,CAAYnB;AAFF,GAA9B,CADI,CAAR;AAIH,CAtBD,C,CAuBA;AACA;AACA;AACA;AACA;;;AACA,eAAeV,aAAf","sourcesContent":["var _this = this;\nimport React, { useState, useEffect } from \"react\";\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useField } from \"react-final-form\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nvar styles = {};\nvar MarkdownInput = function (_a) {\n    var name = _a.name;\n    var _b = useField(name).input, value = _b.value, onChange = _b.onChange;\n    var _c = useState(\"\"), value = _c[0], setValue = _c[1];\n    var _d = useState(\"write\"), tab = _d[0], setTab = _d[1];\n    useEffect(function () {\n        setValue(value);\n    }, []);\n    var converter = new Showdown.Converter({\n        tables: true,\n        simplifiedAutoLink: true,\n        strikethrough: true,\n        tasklists: true,\n    });\n    var handleValueChange = function (value) {\n        setValue(value);\n        onChange(value);\n    };\n    return (React.createElement(FormControl, { fullWidth: true, className: \"ra-input-mde\" },\n        React.createElement(ReactMde, { onChange: function (value) { return handleValueChange(value); }, onTabChange: function (tab) { return setTab(tab); }, value: value, generateMarkdownPreview: function (markdown) {\n                return Promise.resolve(converter.makeHtml(markdown));\n            }, selectedTab: _this.state.tab })));\n};\n// const MarkDownInputWithField = addField(withStyles(styles)(MarkdownInput));\n// MarkDownInputWithField.defaultProps = {\n//   addLabel: true,\n//   fullWidth: true,\n// };\nexport default MarkdownInput;\n"]},"metadata":{},"sourceType":"module"}