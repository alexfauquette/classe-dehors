{"ast":null,"code":"import _objectWithoutProperties from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{SimpleForm,TextInput,SelectInput,Toolbar,required}from'react-admin';import MarkdownInput from'ra-input-markdown';import{LargeLabel}from\"@semapps/archipelago-layout\";import{ReferenceInput}from'@semapps/semantic-data-provider';import{teachingLevel,structureType}from'../../constants';import ReferenceQuickCreateInput from\"../../pair/ReferenceQuickCreateInput\";import PairLocationInput from\"../../pair/PairLocationInput\";export var PersonForm=function PersonForm(_ref){var mode=_ref.mode,rest=_objectWithoutProperties(_ref,[\"mode\"]);return/*#__PURE__*/React.createElement(SimpleForm,Object.assign({},rest,{redirect:\"show\",toolbar:/*#__PURE__*/React.createElement(Toolbar,{alwaysEnableSaveButton:true})// Always enable save as there are problems with ReferenceQuickCreateInput\n}),/*#__PURE__*/React.createElement(TextInput,{source:\"pair:label\",validate:required(),fullWidth:true}),/*#__PURE__*/React.createElement(ReferenceInput,{reference:\"Type\",source:\"pair:hasType\",filter:{a:'pair:AgentType'}},/*#__PURE__*/React.createElement(SelectInput,{optionText:\"pair:label\"})),/*#__PURE__*/React.createElement(SelectInput,{source:\"cd:teachingLevel\",choices:teachingLevel}),/*#__PURE__*/React.createElement(LargeLabel,null,\"Structure\"),/*#__PURE__*/React.createElement(SelectInput,{source:\"cd:structureType\",choices:structureType}),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:structureName\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:structureLocality\",fullWidth:true}),/*#__PURE__*/React.createElement(LargeLabel,null,\"Pratique\"),/*#__PURE__*/React.createElement(ReferenceQuickCreateInput,{reference:\"Place\",source:\"pair:hasLocation\",selectOptionText:\"pair:label\",perPage:1000},/*#__PURE__*/React.createElement(PairLocationInput,{label:\"Adresse\",source:\"pair:hasPostalAddress\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{label:\"Nom\",source:\"pair:label\",validate:required(),fullWidth:true}),/*#__PURE__*/React.createElement(MarkdownInput,{label:\"Description\",source:\"pair:description\",multiline:true,fullWidth:true})),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:practiceTime\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:practiceFrequency\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:practiceSubjects\",fullWidth:true}),/*#__PURE__*/React.createElement(LargeLabel,null,\"Communaut\\xE9\"),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:skills\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{source:\"pair:webPage\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:needs\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{source:\"cd:comments\",fullWidth:true}),/*#__PURE__*/React.createElement(LargeLabel,null,\"Contact\"),mode==='create'&&/*#__PURE__*/React.createElement(TextInput,{source:\"pair:e-mail\",helperText:\"Votre adresse mail n'appara\\xEEtra pas publiquement. On pourra vous \\xE9crire via un formulaire de contact.\",fullWidth:true}),/*#__PURE__*/React.createElement(TextInput,{source:\"pair:aboutPage\",fullWidth:true}));};export default PersonForm;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Person/PersonForm.js"],"names":["React","SimpleForm","TextInput","SelectInput","Toolbar","required","MarkdownInput","LargeLabel","ReferenceInput","teachingLevel","structureType","ReferenceQuickCreateInput","PairLocationInput","PersonForm","mode","rest","a"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SimpleForm, TextInput, SelectInput, Toolbar, required } from 'react-admin';\nimport MarkdownInput from 'ra-input-markdown';\nimport { LargeLabel } from \"@semapps/archipelago-layout\";\nimport { ReferenceInput } from '@semapps/semantic-data-provider';\nimport { teachingLevel, structureType } from '../../constants';\nimport ReferenceQuickCreateInput from \"../../pair/ReferenceQuickCreateInput\";\nimport PairLocationInput from \"../../pair/PairLocationInput\";\n\nexport const PersonForm = ({ mode, ...rest }) => (\n  <SimpleForm\n    {...rest}\n    redirect=\"show\"\n    toolbar={<Toolbar alwaysEnableSaveButton />} // Always enable save as there are problems with ReferenceQuickCreateInput\n  >\n    <TextInput source=\"pair:label\" validate={required()} fullWidth />\n    <ReferenceInput reference=\"Type\" source=\"pair:hasType\" filter={{ a: 'pair:AgentType' }}>\n      <SelectInput optionText=\"pair:label\" />\n    </ReferenceInput>\n    <SelectInput source=\"cd:teachingLevel\" choices={teachingLevel} />\n    {/* <TextInput source=\"cd:subjects\" fullWidth /> */}\n    <LargeLabel>Structure</LargeLabel>\n    <SelectInput source=\"cd:structureType\" choices={structureType} />\n    <TextInput source=\"cd:structureName\" fullWidth />\n    <TextInput source=\"cd:structureLocality\" fullWidth />\n    <LargeLabel>Pratique</LargeLabel>\n    <ReferenceQuickCreateInput reference=\"Place\" source=\"pair:hasLocation\" selectOptionText=\"pair:label\" perPage={1000}>\n      <PairLocationInput label=\"Adresse\" source=\"pair:hasPostalAddress\" fullWidth />\n      <TextInput label=\"Nom\" source=\"pair:label\" validate={required()} fullWidth />\n      <MarkdownInput label=\"Description\" source=\"pair:description\" multiline fullWidth />\n    </ReferenceQuickCreateInput>\n    <TextInput source=\"cd:practiceTime\" fullWidth />\n    <TextInput source=\"cd:practiceFrequency\" fullWidth />\n    <TextInput source=\"cd:practiceSubjects\" fullWidth />\n    <LargeLabel>Communauté</LargeLabel>\n    <TextInput source=\"cd:skills\" fullWidth />\n    <TextInput source=\"pair:webPage\" fullWidth />\n    <TextInput source=\"cd:needs\" fullWidth />\n    <TextInput source=\"cd:comments\" fullWidth />\n    <LargeLabel>Contact</LargeLabel>\n    {mode === 'create' && <TextInput source=\"pair:e-mail\" helperText=\"Votre adresse mail n'apparaîtra pas publiquement. On pourra vous écrire via un formulaire de contact.\" fullWidth />}\n    <TextInput source=\"pair:aboutPage\" fullWidth />\n  </SimpleForm>\n);\n\nexport default PersonForm;\n"]},"metadata":{},"sourceType":"module"}