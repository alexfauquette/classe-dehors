{"ast":null,"code":"/**\n * A Node.js wrapper for the Matomo (http://matomo.org) tracking HTTP API\n * https://github.com/matomo-org/matomo-nodejs-tracker\n *\n * @author  Frederic Hemberger, Matomo Team\n * @license MIT\n */\n'use strict';\n\nvar assert = require('assert');\n\nvar events = require('events');\n\nvar util = require('util');\n\nvar qs = require('querystring');\n\nvar url = require('url');\n/**\n * @constructor\n * @param {Number} siteId     Id of the site you want to track\n * @param {String} trackerUrl URL of your Matomo instance\n * @param {Boolean} [true] noURLValidation Set to true if the `piwik.php` has been renamed\n */\n\n\nfunction MatomoTracker(siteId, trackerUrl, noURLValidation) {\n  if (!(this instanceof MatomoTracker)) {\n    return new MatomoTracker(siteId, trackerUrl, noURLValidation);\n  }\n\n  events.EventEmitter.call(this);\n  assert.ok(siteId && (typeof siteId === 'number' || typeof siteId === 'string'), 'Matomo siteId required.');\n  assert.ok(trackerUrl && typeof trackerUrl === 'string', 'Matomo tracker URL required, e.g. http://example.com/matomo.php');\n\n  if (!noURLValidation) {\n    assert.ok(trackerUrl.endsWith('matomo.php') || trackerUrl.endsWith('piwik.php'), 'A tracker URL must end with \"matomo.php\" or \"piwik.php\"');\n  }\n\n  this.siteId = siteId;\n  this.trackerUrl = trackerUrl; // Use either HTTPS or HTTP agent according to Matomo tracker URL\n\n  this.agent = require(trackerUrl.startsWith('https') ? 'https' : 'http');\n}\n\nutil.inherits(MatomoTracker, events.EventEmitter);\n/**\n * Executes the call to the Matomo tracking API\n *\n * For a list of tracking option parameters see\n * https://developer.matomo.org/api-reference/tracking-api\n *\n * @param {(String|Object)} options URL to track or options (must contain URL as well)\n */\n\nMatomoTracker.prototype.track = function track(options) {\n  var hasErrorListeners = this.listeners('error').length;\n\n  if (typeof options === 'string') {\n    options = {\n      url: options\n    };\n  } // Set mandatory options\n\n\n  options = options || {};\n  options.idsite = this.siteId;\n  options.rec = 1;\n  assert.ok(options.url, 'URL to be tracked must be specified.');\n  var requestUrl = this.trackerUrl + '?' + qs.stringify(options);\n  var self = this;\n  var req = this.agent.get(requestUrl, function (res) {\n    // Check HTTP statuscode for 200 and 30x\n    if (!/^(20[04]|30[12478])$/.test(res.statusCode)) {\n      if (hasErrorListeners) {\n        self.emit('error', res.statusCode);\n      }\n    }\n  });\n  req.on('error', function (err) {\n    hasErrorListeners && self.emit('error', err.message);\n  });\n  req.end();\n};\n\nMatomoTracker.prototype.trackBulk = function trackBulk(events, callback) {\n  var _this = this;\n\n  var hasErrorListeners = this.listeners('error').length;\n  assert.ok(events && events.length > 0, 'Events require at least one.');\n  assert.ok(this.siteId !== undefined && this.siteId !== null, 'siteId must be specified.');\n  var body = JSON.stringify({\n    requests: events.map(function (query) {\n      query.idsite = _this.siteId;\n      query.rec = 1;\n      return '?' + qs.stringify(query);\n    })\n  });\n  var uri = url.parse(this.trackerUrl);\n  var requestOptions = {\n    protocol: uri.protocol,\n    hostname: uri.hostname,\n    port: uri.port,\n    path: uri.path,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': Buffer.byteLength(body)\n    }\n  };\n  var req = this.agent.request(requestOptions, function (res) {\n    if (!/^(20[04]|30[12478])$/.test(res.statusCode)) {\n      if (hasErrorListeners) {\n        _this.emit('error', res.statusCode);\n      }\n    }\n\n    var data = [];\n    res.on('data', function (chunk) {\n      data.push(chunk);\n    });\n    res.on('end', function () {\n      data = Buffer.concat(data).toString();\n      typeof callback === 'function' && callback(data);\n    });\n  });\n  req.on('error', function (err) {\n    hasErrorListeners && _this.emit('error', err.message);\n  });\n  req.write(body);\n  req.end();\n};\n\nmodule.exports = MatomoTracker;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/node_modules/matomo-tracker/index.js"],"names":["assert","require","events","util","qs","url","MatomoTracker","siteId","trackerUrl","noURLValidation","EventEmitter","call","ok","endsWith","agent","startsWith","inherits","prototype","track","options","hasErrorListeners","listeners","length","idsite","rec","requestUrl","stringify","self","req","get","res","test","statusCode","emit","on","err","message","end","trackBulk","callback","undefined","body","JSON","requests","map","query","uri","parse","requestOptions","protocol","hostname","port","path","method","headers","Buffer","byteLength","request","data","chunk","push","concat","toString","write","module","exports"],"mappings":"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","sourcesContent":["/**\n * A Node.js wrapper for the Matomo (http://matomo.org) tracking HTTP API\n * https://github.com/matomo-org/matomo-nodejs-tracker\n *\n * @author  Frederic Hemberger, Matomo Team\n * @license MIT\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst events = require('events');\nconst util = require('util');\nconst qs = require('querystring');\nconst url = require('url');\n\n\n/**\n * @constructor\n * @param {Number} siteId     Id of the site you want to track\n * @param {String} trackerUrl URL of your Matomo instance\n * @param {Boolean} [true] noURLValidation Set to true if the `piwik.php` has been renamed\n */\nfunction MatomoTracker (siteId, trackerUrl, noURLValidation) {\n  if (!(this instanceof MatomoTracker)) {\n    return new MatomoTracker(siteId, trackerUrl, noURLValidation);\n  }\n  events.EventEmitter.call(this);\n\n  assert.ok(siteId && (typeof siteId === 'number' || typeof siteId === 'string'), 'Matomo siteId required.');\n  assert.ok(trackerUrl && typeof trackerUrl === 'string', 'Matomo tracker URL required, e.g. http://example.com/matomo.php');\n  if (!noURLValidation) {\n    assert.ok(trackerUrl.endsWith('matomo.php') || trackerUrl.endsWith('piwik.php'), 'A tracker URL must end with \"matomo.php\" or \"piwik.php\"');\n  }\n\n  this.siteId = siteId;\n  this.trackerUrl = trackerUrl;\n\n  // Use either HTTPS or HTTP agent according to Matomo tracker URL\n  this.agent = require(trackerUrl.startsWith('https') ? 'https' : 'http');\n}\n\nutil.inherits(MatomoTracker, events.EventEmitter);\n\n\n/**\n * Executes the call to the Matomo tracking API\n *\n * For a list of tracking option parameters see\n * https://developer.matomo.org/api-reference/tracking-api\n *\n * @param {(String|Object)} options URL to track or options (must contain URL as well)\n */\nMatomoTracker.prototype.track = function track (options) {\n  var hasErrorListeners = this.listeners('error').length;\n\n  if (typeof options === 'string') {\n    options = {\n      url: options\n    };\n  }\n\n  // Set mandatory options\n  options = options || {};\n  options.idsite = this.siteId;\n  options.rec = 1;\n\n  assert.ok(options.url, 'URL to be tracked must be specified.');\n\n  var requestUrl = this.trackerUrl + '?' + qs.stringify(options);\n  var self = this;\n  var req = this.agent.get(requestUrl, function (res) {\n    // Check HTTP statuscode for 200 and 30x\n    if (!/^(20[04]|30[12478])$/.test(res.statusCode)) {\n      if (hasErrorListeners) {\n        self.emit('error', res.statusCode);\n      }\n    }\n  });\n\n  req.on('error', function (err) {\n    hasErrorListeners && self.emit('error', err.message);\n  });\n\n  req.end();\n};\n\n\nMatomoTracker.prototype.trackBulk = function trackBulk (events, callback) {\n  var hasErrorListeners = this.listeners('error').length;\n\n  assert.ok(events && (events.length > 0), 'Events require at least one.');\n  assert.ok(this.siteId !== undefined && this.siteId !== null, 'siteId must be specified.');\n\n  var body = JSON.stringify({\n    requests: events.map(query => {\n      query.idsite = this.siteId;\n      query.rec = 1;\n      return '?' + qs.stringify(query);\n    })\n  });\n\n  var uri = url.parse(this.trackerUrl);\n\n  const requestOptions = {\n    protocol: uri.protocol,\n    hostname: uri.hostname,\n    port: uri.port,\n    path: uri.path,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': Buffer.byteLength(body),\n    }\n  };\n\n  const req = this.agent.request(requestOptions, res => {\n    if (!/^(20[04]|30[12478])$/.test(res.statusCode)) {\n      if (hasErrorListeners) {\n        this.emit('error', res.statusCode);\n      }\n    }\n\n    let data = [];\n\n    res.on('data', chunk => {\n      data.push(chunk);\n    });\n\n    res.on('end', () => {\n      data = Buffer.concat(data).toString();\n      typeof callback === 'function' && callback(data);\n    });\n  });\n\n  req.on('error', (err) => {\n      hasErrorListeners && this.emit('error', err.message);\n    }\n  );\n\n  req.write(body);\n  req.end();\n};\n\nmodule.exports = MatomoTracker;\n"]},"metadata":{},"sourceType":"script"}