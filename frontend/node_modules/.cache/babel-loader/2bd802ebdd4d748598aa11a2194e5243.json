{"ast":null,"code":"import _toConsumableArray from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import{useTranslate,getFieldLabelTranslationArgs,useShowContext}from'react-admin';import{Box,Typography}from'@material-ui/core';import{LargeLabel}from'@semapps/archipelago-layout';var SubList=function SubList(_ref){var children=_ref.children,label=_ref.label;var translate=useTranslate();var _useShowContext=useShowContext(),basePath=_useShowContext.basePath,loaded=_useShowContext.loaded,record=_useShowContext.record,resource=_useShowContext.resource;if(!loaded)return null;return/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(LargeLabel,null,label),React.Children.map(children,function(field){return field&&record[field.props.source]&&React.isValidElement(field)?/*#__PURE__*/React.createElement(\"div\",{key:field.props.source},field.props.addLabel?/*#__PURE__*/React.createElement(Typography,{paragraph:true},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},translate.apply(void 0,_toConsumableArray(getFieldLabelTranslationArgs({label:field.props.label,resource:resource,source:field.props.source}))),/*#__PURE__*/React.createElement(\"br\",null)),React.cloneElement(field,{record:record,resource:resource,basePath:basePath})):typeof field.type==='string'?field:React.cloneElement(field,{record:record,resource:resource,basePath:basePath})):null;}));};export default SubList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/layout/SubList.js"],"names":["React","useTranslate","getFieldLabelTranslationArgs","useShowContext","Box","Typography","LargeLabel","SubList","children","label","translate","basePath","loaded","record","resource","Children","map","field","props","source","isValidElement","addLabel","cloneElement","type"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,CAAuBC,4BAAvB,CAAqDC,cAArD,KAA2E,aAA3E,CACA,OAASC,GAAT,CAAcC,UAAd,KAAgC,mBAAhC,CACA,OAASC,UAAT,KAA2B,6BAA3B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAyB,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,KAAY,MAAZA,KAAY,CACvC,GAAMC,CAAAA,SAAS,CAAGT,YAAY,EAA9B,CADuC,oBAEQE,cAAc,EAFtB,CAE/BQ,QAF+B,iBAE/BA,QAF+B,CAErBC,MAFqB,iBAErBA,MAFqB,CAEbC,MAFa,iBAEbA,MAFa,CAELC,QAFK,iBAELA,QAFK,CAGvC,GAAI,CAACF,MAAL,CAAa,MAAO,KAAP,CAEb,mBACE,oBAAC,GAAD,mBACE,oBAAC,UAAD,MAAaH,KAAb,CADF,CAEGT,KAAK,CAACe,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,CAA6B,SAAAS,KAAK,QACjCA,CAAAA,KAAK,EAAIJ,MAAM,CAACI,KAAK,CAACC,KAAN,CAAYC,MAAb,CAAf,EAAuCnB,KAAK,CAACoB,cAAN,CAAqBH,KAArB,CAAvC,cACE,2BAAK,GAAG,CAAEA,KAAK,CAACC,KAAN,CAAYC,MAAtB,EACGF,KAAK,CAACC,KAAN,CAAYG,QAAZ,cACC,oBAAC,UAAD,EAAY,SAAS,KAArB,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,EACGX,SAAS,MAAT,2BACIR,4BAA4B,CAAC,CAC9BO,KAAK,CAAEQ,KAAK,CAACC,KAAN,CAAYT,KADW,CAE9BK,QAAQ,CAARA,QAF8B,CAG9BK,MAAM,CAAEF,KAAK,CAACC,KAAN,CAAYC,MAHU,CAAD,CADhC,EADH,cAQE,8BARF,CADF,CAWGnB,KAAK,CAACsB,YAAN,CAAmBL,KAAnB,CAA0B,CACzBJ,MAAM,CAANA,MADyB,CAEzBC,QAAQ,CAARA,QAFyB,CAGzBH,QAAQ,CAARA,QAHyB,CAA1B,CAXH,CADD,CAkBG,MAAOM,CAAAA,KAAK,CAACM,IAAb,GAAsB,QAAtB,CACFN,KADE,CAGFjB,KAAK,CAACsB,YAAN,CAAmBL,KAAnB,CAA0B,CACxBJ,MAAM,CAANA,MADwB,CAExBC,QAAQ,CAARA,QAFwB,CAGxBH,QAAQ,CAARA,QAHwB,CAA1B,CAtBJ,CADF,CA8BI,IA/B6B,EAAlC,CAFH,CADF,CAsCD,CA3CD,CA6CA,cAAeJ,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { useTranslate, getFieldLabelTranslationArgs, useShowContext } from 'react-admin';\nimport { Box, Typography } from '@material-ui/core';\nimport { LargeLabel } from '@semapps/archipelago-layout';\n\nconst SubList = ({ children, label }) => {\n  const translate = useTranslate();\n  const { basePath, loaded, record, resource } = useShowContext();\n  if (!loaded) return null;\n\n  return (\n    <Box>\n      <LargeLabel>{label}</LargeLabel>\n      {React.Children.map(children, field =>\n        field && record[field.props.source] && React.isValidElement(field) ? (\n          <div key={field.props.source}>\n            {field.props.addLabel ? (\n              <Typography paragraph>\n                <Typography variant=\"h6\">\n                  {translate(\n                    ...getFieldLabelTranslationArgs({\n                      label: field.props.label,\n                      resource,\n                      source: field.props.source\n                    })\n                  )}\n                  <br />\n                </Typography>\n                {React.cloneElement(field, {\n                  record,\n                  resource,\n                  basePath\n                })}\n              </Typography>\n            ) : typeof field.type === 'string' ? (\n              field\n            ) : (\n              React.cloneElement(field, {\n                record,\n                resource,\n                basePath\n              })\n            )}\n          </div>\n        ) : null\n      )}\n    </Box>\n  );\n};\n\nexport default SubList;\n"]},"metadata":{},"sourceType":"module"}