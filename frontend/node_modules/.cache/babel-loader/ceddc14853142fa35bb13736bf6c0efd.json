{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceList.js\";\nimport React from \"react\";\nimport { MultiViewsList, SimpleList } from \"@semapps/archipelago-layout\";\nimport { MapList } from \"@semapps/geo-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\n\nconst PlaceList = props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MarkdownIntroduction, {\n  pageId: \"place-introduction\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(MultiViewsList, Object.assign({\n  views: {\n    map: {\n      label: \"Carte\",\n      icon: MapIcon,\n      perPage: 500,\n      pagination: false,\n      list: /*#__PURE__*/React.createElement(MapList, {\n        latitude: record => {\n          var _record$pairHasPosta;\n\n          return record === null || record === void 0 ? void 0 : (_record$pairHasPosta = record[\"pair:hasPostalAddress\"]) === null || _record$pairHasPosta === void 0 ? void 0 : _record$pairHasPosta[\"pair:latitude\"];\n        },\n        longitude: record => {\n          var _record$pairHasPosta2;\n\n          return record === null || record === void 0 ? void 0 : (_record$pairHasPosta2 = record[\"pair:hasPostalAddress\"]) === null || _record$pairHasPosta2 === void 0 ? void 0 : _record$pairHasPosta2[\"pair:longitude\"];\n        },\n        label: record => record === null || record === void 0 ? void 0 : record[\"pair:label\"],\n        description: record => {\n          var _record$pairHasPosta3;\n\n          return record === null || record === void 0 ? void 0 : (_record$pairHasPosta3 = record[\"pair:hasPostalAddress\"]) === null || _record$pairHasPosta3 === void 0 ? void 0 : _record$pairHasPosta3[\"pair:label\"];\n        },\n        scrollWheelZoom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      })\n    },\n    list: {\n      label: \"Liste\",\n      icon: ListIcon,\n      sort: {\n        field: \"pair:label\",\n        order: \"DESC\"\n      },\n      perPage: 25,\n      list: /*#__PURE__*/React.createElement(SimpleList, {\n        primaryText: record => record[\"pair:label\"],\n        secondaryText: record => {\n          var _record$pairHasPosta4;\n\n          return (_record$pairHasPosta4 = record[\"pair:hasPostalAddress\"]) === null || _record$pairHasPosta4 === void 0 ? void 0 : _record$pairHasPosta4[\"pair:label\"];\n        },\n        leftAvatar: () => /*#__PURE__*/React.createElement(Avatar, {\n          width: \"100%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(PlaceIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }\n        })),\n        linkType: \"show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      })\n    }\n  }\n}, props, {\n  actions: [],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n})));\n\nexport default PlaceList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceList.js"],"names":["React","MultiViewsList","SimpleList","MapList","Avatar","MapIcon","ListIcon","PlaceIcon","MarkdownIntroduction","PlaceList","props","map","label","icon","perPage","pagination","list","record","sort","field","order"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,6BAA3C;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,iBAChB,uDACE,oBAAC,oBAAD;AAAsB,EAAA,MAAM,EAAC,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,cAAD;AACE,EAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,IAAI,EAAER,OAFH;AAGHS,MAAAA,OAAO,EAAE,GAHN;AAIHC,MAAAA,UAAU,EAAE,KAJT;AAKHC,MAAAA,IAAI,eACF,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAGC,MAAD;AAAA;;AAAA,iBACRA,MADQ,aACRA,MADQ,+CACRA,MAAM,CAAG,uBAAH,CADE,yDACR,qBAAoC,eAApC,CADQ;AAAA,SADZ;AAIE,QAAA,SAAS,EAAGA,MAAD;AAAA;;AAAA,iBACTA,MADS,aACTA,MADS,gDACTA,MAAM,CAAG,uBAAH,CADG,0DACT,sBAAoC,gBAApC,CADS;AAAA,SAJb;AAOE,QAAA,KAAK,EAAGA,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAG,YAAH,CAP3B;AAQE,QAAA,WAAW,EAAGA,MAAD;AAAA;;AAAA,iBACXA,MADW,aACXA,MADW,gDACXA,MAAM,CAAG,uBAAH,CADK,0DACX,sBAAoC,YAApC,CADW;AAAA,SARf;AAWE,QAAA,eAAe,MAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANC,KADA;AAsBLD,IAAAA,IAAI,EAAE;AACJJ,MAAAA,KAAK,EAAE,OADH;AAEJC,MAAAA,IAAI,EAAEP,QAFF;AAGJY,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAHF;AAIJN,MAAAA,OAAO,EAAE,EAJL;AAKJE,MAAAA,IAAI,eACF,oBAAC,UAAD;AACE,QAAA,WAAW,EAAGC,MAAD,IAAYA,MAAM,CAAC,YAAD,CADjC;AAEE,QAAA,aAAa,EAAGA,MAAD;AAAA;;AAAA,0CACbA,MAAM,CAAC,uBAAD,CADO,0DACb,sBAAkC,YAAlC,CADa;AAAA,SAFjB;AAKE,QAAA,UAAU,EAAE,mBACV,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CANJ;AAUE,QAAA,QAAQ,EAAC,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANE;AAtBD;AADT,GA4CMP,KA5CN;AA6CE,EAAA,OAAO,EAAE,EA7CX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFF,CADF;;AAqDA,eAAeD,SAAf","sourcesContent":["import React from \"react\";\nimport { MultiViewsList, SimpleList } from \"@semapps/archipelago-layout\";\nimport { MapList } from \"@semapps/geo-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\n\nconst PlaceList = (props) => (\n  <>\n    <MarkdownIntroduction pageId=\"place-introduction\" />\n    <MultiViewsList\n      views={{\n        map: {\n          label: \"Carte\",\n          icon: MapIcon,\n          perPage: 500,\n          pagination: false,\n          list: (\n            <MapList\n              latitude={(record) =>\n                record?.[\"pair:hasPostalAddress\"]?.[\"pair:latitude\"]\n              }\n              longitude={(record) =>\n                record?.[\"pair:hasPostalAddress\"]?.[\"pair:longitude\"]\n              }\n              label={(record) => record?.[\"pair:label\"]}\n              description={(record) =>\n                record?.[\"pair:hasPostalAddress\"]?.[\"pair:label\"]\n              }\n              scrollWheelZoom\n            />\n          ),\n        },\n        list: {\n          label: \"Liste\",\n          icon: ListIcon,\n          sort: { field: \"pair:label\", order: \"DESC\" },\n          perPage: 25,\n          list: (\n            <SimpleList\n              primaryText={(record) => record[\"pair:label\"]}\n              secondaryText={(record) =>\n                record[\"pair:hasPostalAddress\"]?.[\"pair:label\"]\n              }\n              leftAvatar={() => (\n                <Avatar width=\"100%\">\n                  <PlaceIcon />\n                </Avatar>\n              )}\n              linkType=\"show\"\n            />\n          ),\n        },\n      }}\n      {...props}\n      actions={[]}\n    />\n  </>\n);\n\nexport default PlaceList;\n"]},"metadata":{},"sourceType":"module"}