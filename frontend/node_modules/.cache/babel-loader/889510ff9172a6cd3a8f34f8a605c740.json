{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/layout/AppBar.js\";\nimport React from \"react\";\nimport { Container, Box, Grid, makeStyles, Typography, AppBar as MuiAppBar, useMediaQuery, IconButton, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    position: \"relative\",\n    padding: 10,\n    height: 65,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 50\n    }\n  },\n  logo: {\n    width: 48,\n    height: 48,\n    verticalAlign: \"middle\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 32,\n      height: 32\n    }\n  },\n  logoArea: {\n    padding: 12,\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: 5\n    }\n  },\n  logoText: {\n    fontFamily: \"Helvetica\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: theme.palette.common.white,\n    // verticalAlign: 'middle',\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 18\n    }\n  },\n  openButton: {\n    padding: 5,\n    float: \"right\"\n  },\n  menuLink: {\n    textDecoration: \"none\"\n  },\n  menuText: {\n    fontFamily: \"Helvetica\",\n    fontSize: 18,\n    textAlign: \"center\",\n    lineHeight: 1,\n    color: theme.palette.common.white\n  },\n  subMenu: {\n    cursor: \"pointer\"\n  }\n}));\n\nconst InternalMenuLink = ({\n  text,\n  link,\n  classes\n}) => /*#__PURE__*/React.createElement(Grid, {\n  item: true,\n  sm: 2,\n  key: text,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Box, {\n  display: \"flex\",\n  height: 48,\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: link,\n  className: classes && classes.menuLink,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }\n}, \">\", /*#__PURE__*/React.createElement(Typography, {\n  className: classes && classes.menuText,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }\n}, text.split(\"\\n\").map((item, key) => /*#__PURE__*/React.createElement(React.Fragment, {\n  key: key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }\n}, item, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 15\n  }\n}))))), \"//\", \" \"), \"//\", \" \");\n\nconst ExternalMenuLink = ({\n  text,\n  link,\n  classes\n}) => /*#__PURE__*/React.createElement(Grid, {\n  item: true,\n  sm: 2,\n  key: text,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Box, {\n  display: \"flex\",\n  height: 48,\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: link,\n  target: \"_blank\",\n  className: classes && classes.menuLink,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }\n}, \">\", /*#__PURE__*/React.createElement(Typography, {\n  className: classes && classes.menuText,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }\n}, text.split(\"\\n\").map((item, key) => /*#__PURE__*/React.createElement(React.Fragment, {\n  key: key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 13\n  }\n}, item, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 15\n  }\n}))))), \"//\", \" \"), \"//\", \" \");\n\nconst AppBar = ({\n  menuItems,\n  setSidebarOpen\n}) => {\n  const classes = useStyles();\n  const xs = useMediaQuery(theme => theme.breakpoints.down(\"xs\"));\n  const [anchorMenuEl, setMenuAnchorEl] = React.useState(null);\n  const open = Boolean(anchorMenuEl);\n\n  const handleMenuClick = event => {\n    console.log(event.currentTarget);\n    setMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  return /*#__PURE__*/React.createElement(MuiAppBar, {\n    position: \"sticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 10,\n    className: classes.logoArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: classes.menuLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.logoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Classe Dehors\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    xs: 2,\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, xs ? /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: () => setSidebarOpen(true),\n    className: classes.openButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, menuItems.map(({\n    text,\n    internal,\n    link,\n    children\n  }) => {\n    if (link) {\n      if (internal) {\n        return /*#__PURE__*/React.createElement(InternalMenuLink, {\n          text,\n          link,\n          classes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 30\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(ExternalMenuLink, {\n          text,\n          link,\n          classes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 30\n          }\n        });\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        key: text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        display: \"flex\",\n        height: 48,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        className: classes.subMenu,\n        onClick: handleMenuClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        className: classes.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }\n      }, text.split(\"\\n\").map((item, key) => /*#__PURE__*/React.createElement(React.Fragment, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, item, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 35\n        }\n      })))))), /*#__PURE__*/React.createElement(Menu, {\n        anchorEl: anchorMenuEl,\n        open: open,\n        onClose: handleMenuClose,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        transformOrigin: {\n          vertical: \"top\",\n          horizontal: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, children.map(({\n        text,\n        internal,\n        link\n      }) => /*#__PURE__*/React.createElement(MenuItem, {\n        onClick: handleMenuClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, internal ? /*#__PURE__*/React.createElement(InternalMenuLink, {\n        text,\n        link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(ExternalMenuLink, {\n        text,\n        link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 33\n        }\n      })))));\n    }\n  }))))));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/layout/AppBar.js"],"names":["React","Container","Box","Grid","makeStyles","Typography","AppBar","MuiAppBar","useMediaQuery","IconButton","Menu","MenuItem","Button","MenuIcon","Link","useStyles","theme","header","position","padding","height","breakpoints","down","logo","width","verticalAlign","logoArea","logoText","fontFamily","fontSize","fontWeight","color","palette","common","white","openButton","float","menuLink","textDecoration","menuText","textAlign","lineHeight","subMenu","cursor","InternalMenuLink","text","link","classes","split","map","item","key","ExternalMenuLink","menuItems","setSidebarOpen","xs","anchorMenuEl","setMenuAnchorEl","useState","open","Boolean","handleMenuClick","event","console","log","currentTarget","handleMenuClose","internal","children","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Box,\n  Grid,\n  makeStyles,\n  Typography,\n  AppBar as MuiAppBar,\n  useMediaQuery,\n  IconButton,\n  Menu,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    position: \"relative\",\n    padding: 10,\n    height: 65,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 50,\n    },\n  },\n  logo: {\n    width: 48,\n    height: 48,\n    verticalAlign: \"middle\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 32,\n      height: 32,\n    },\n  },\n  logoArea: {\n    padding: 12,\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: 5,\n    },\n  },\n  logoText: {\n    fontFamily: \"Helvetica\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: theme.palette.common.white,\n    // verticalAlign: 'middle',\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 18,\n    },\n  },\n  openButton: {\n    padding: 5,\n    float: \"right\",\n  },\n  menuLink: {\n    textDecoration: \"none\",\n  },\n  menuText: {\n    fontFamily: \"Helvetica\",\n    fontSize: 18,\n    textAlign: \"center\",\n    lineHeight: 1,\n    color: theme.palette.common.white,\n  },\n  subMenu: {\n    cursor: \"pointer\",\n  },\n}));\n\nconst InternalMenuLink = ({ text, link, classes }) => (\n  <Grid item sm={2} key={text}>\n    <Box display=\"flex\" height={48} alignItems=\"center\" justifyContent=\"center\">\n      <Link to={link} className={classes && classes.menuLink}>\n        >\n        <Typography className={classes && classes.menuText}>\n          {text.split(\"\\n\").map((item, key) => (\n            <React.Fragment key={key}>\n              {item}\n              <br />\n            </React.Fragment>\n          ))}\n        </Typography>\n      </Link>\n      //{\" \"}\n    </Box>\n    //{\" \"}\n  </Grid>\n);\n\nconst ExternalMenuLink = ({ text, link, classes }) => (\n  <Grid item sm={2} key={text}>\n    <Box display=\"flex\" height={48} alignItems=\"center\" justifyContent=\"center\">\n      <a href={link} target=\"_blank\" className={classes && classes.menuLink}>\n        >\n        <Typography className={classes && classes.menuText}>\n          {text.split(\"\\n\").map((item, key) => (\n            <React.Fragment key={key}>\n              {item}\n              <br />\n            </React.Fragment>\n          ))}\n        </Typography>\n      </a>\n      //{\" \"}\n    </Box>\n    //{\" \"}\n  </Grid>\n);\n\nconst AppBar = ({ menuItems, setSidebarOpen }) => {\n  const classes = useStyles();\n  const xs = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\n\n  const [anchorMenuEl, setMenuAnchorEl] = React.useState(null);\n  const open = Boolean(anchorMenuEl);\n  const handleMenuClick = (event) => {\n    console.log(event.currentTarget);\n    setMenuAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  return (\n    <MuiAppBar position=\"sticky\">\n      <Container maxWidth=\"lg\" className={classes.header}>\n        <Grid container>\n          <Grid item sm={4} xs={10} className={classes.logoArea}>\n            <Link to=\"/\" className={classes.menuLink}>\n              {/*<img src={process.env.PUBLIC_URL + '/colibris-blanc.png'} alt=\"Colibris\" className={classes.logo} />*/}\n              <span className={classes.logoText}>Classe Dehors</span>\n            </Link>\n          </Grid>\n          <Grid item sm={8} xs={2} align=\"right\">\n            {xs ? (\n              <IconButton\n                color=\"inherit\"\n                onClick={() => setSidebarOpen(true)}\n                className={classes.openButton}\n              >\n                <MenuIcon />\n              </IconButton>\n            ) : (\n              <Grid container>\n                {menuItems.map(({ text, internal, link, children }) => {\n                  if (link) {\n                    if (internal) {\n                      return <InternalMenuLink {...{ text, link, classes }} />;\n                    } else {\n                      return <ExternalMenuLink {...{ text, link, classes }} />;\n                    }\n                  } else {\n                    return (\n                      <>\n                        <Grid item sm={2} key={text}>\n                          <Box\n                            display=\"flex\"\n                            height={48}\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                            className={classes.subMenu}\n                            onClick={handleMenuClick}\n                          >\n                            <Typography className={classes.menuText}>\n                              {text.split(\"\\n\").map((item, key) => (\n                                <React.Fragment key={key}>\n                                  {item}\n                                  <br />\n                                </React.Fragment>\n                              ))}\n                            </Typography>\n                          </Box>\n                        </Grid>\n                        <Menu\n                          anchorEl={anchorMenuEl}\n                          open={open}\n                          onClose={handleMenuClose}\n                          anchorOrigin={{\n                            vertical: \"bottom\",\n                            horizontal: \"left\",\n                          }}\n                          transformOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"left\",\n                          }}\n                        >\n                          {children.map(({ text, internal, link }) => (\n                            <MenuItem onClick={handleMenuClose}>\n                              {internal ? (\n                                <InternalMenuLink {...{ text, link }} />\n                              ) : (\n                                <ExternalMenuLink {...{ text, link }} />\n                              )}\n                            </MenuItem>\n                          ))}\n                        </Menu>\n                      </>\n                    );\n                  }\n                })}\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </MuiAppBar>\n  );\n};\n\nexport default AppBar;\n"]},"metadata":{},"sourceType":"module"}