{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Person/PersonShow.js\";\nimport React from \"react\";\nimport { TextField, SelectField, UrlField, FunctionField } from \"react-admin\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Hero, Show, SeparatedListField } from \"@semapps/archipelago-layout\";\nimport { ReferenceField, ReferenceArrayField } from \"@semapps/semantic-data-provider\";\nimport PersonTitle from \"./PersonTitle\";\nimport { teachingLevel, structureType } from \"../../constants\";\nimport SubList from \"../../layout/SubList\";\nimport ContactField from \"../../contact/ContactField\";\n\nconst TeachingLevelField = ({\n  record\n}) => {\n  // rener a list of Chip for teaching levels\n  if (!record[\"cd:teachingLevel\"]) {\n    return null;\n  }\n\n  const array = typeof record[\"cd:teachingLevel\"] === \"string\" ? [record[\"cd:teachingLevel\"]] : record[\"cd:teachingLevel\"];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, teachingLevel.filter(({\n    id\n  }) => array.includes(id)).map(({\n    id,\n    name\n  }) => /*#__PURE__*/React.createElement(Chip, {\n    key: id,\n    label: name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst PersonShow = props => /*#__PURE__*/React.createElement(Show, Object.assign({\n  title: /*#__PURE__*/React.createElement(PersonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  })\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Hero, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"pair:label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ReferenceArrayField, {\n  reference: \"Type\",\n  source: \"pair:hasType\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(SeparatedListField, {\n  linkType: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"pair:label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }\n}))), /*#__PURE__*/React.createElement(FunctionField, {\n  source: \"cd:teachingLevel\",\n  render: record => /*#__PURE__*/React.createElement(TeachingLevelField, {\n    record: record,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ContactField, {\n  source: \"pair:e-mail\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(UrlField, {\n  source: \"pair:aboutPage\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(SubList, {\n  label: \"Structure\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(SelectField, {\n  source: \"cd:structureType\",\n  choices: structureType,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:structureName\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:structureLocality\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(SubList, {\n  label: \"Pratique\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(ReferenceField, {\n  reference: \"Place\",\n  source: \"pair:hasLocation\",\n  linkType: \"show\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"pair:label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }\n})), /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:practiceTime\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:practiceFrequency\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:practiceSubjects\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(SubList, {\n  label: \"Communaut\\xE9\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:skills\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(UrlField, {\n  source: \"pair:webPage\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:needs\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"cd:comments\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }\n}))));\n\nexport default PersonShow;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Person/PersonShow.js"],"names":["React","TextField","SelectField","UrlField","FunctionField","Chip","Hero","Show","SeparatedListField","ReferenceField","ReferenceArrayField","PersonTitle","teachingLevel","structureType","SubList","ContactField","TeachingLevelField","record","array","filter","id","includes","map","name","PersonShow","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TextField, SelectField, UrlField, FunctionField } from \"react-admin\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Hero, Show, SeparatedListField } from \"@semapps/archipelago-layout\";\nimport {\n  ReferenceField,\n  ReferenceArrayField,\n} from \"@semapps/semantic-data-provider\";\nimport PersonTitle from \"./PersonTitle\";\nimport { teachingLevel, structureType } from \"../../constants\";\nimport SubList from \"../../layout/SubList\";\nimport ContactField from \"../../contact/ContactField\";\n\nconst TeachingLevelField = ({ record }) => {\n  // rener a list of Chip for teaching levels\n  if (!record[\"cd:teachingLevel\"]) {\n    return null;\n  }\n  const array =\n    typeof record[\"cd:teachingLevel\"] === \"string\"\n      ? [record[\"cd:teachingLevel\"]]\n      : record[\"cd:teachingLevel\"];\n\n  return (\n    <>\n      {teachingLevel\n        .filter(({ id }) => array.includes(id))\n        .map(({ id, name }) => (\n          <Chip key={id} label={name} variant=\"outlined\" />\n        ))}\n    </>\n  );\n};\n\nconst PersonShow = (props) => (\n  <Show title={<PersonTitle />} {...props}>\n    <>\n      <Hero>\n        <TextField source=\"pair:label\" />\n        <ReferenceArrayField reference=\"Type\" source=\"pair:hasType\">\n          <SeparatedListField linkType={false}>\n            <TextField source=\"pair:label\" />\n          </SeparatedListField>\n        </ReferenceArrayField>\n        <FunctionField\n          source=\"cd:teachingLevel\"\n          render={(record) => <TeachingLevelField record={record} />}\n        />\n        <ContactField source=\"pair:e-mail\" />\n        <UrlField source=\"pair:aboutPage\" />\n      </Hero>\n      <SubList label=\"Structure\">\n        <SelectField source=\"cd:structureType\" choices={structureType} />\n        <TextField source=\"cd:structureName\" />\n        <TextField source=\"cd:structureLocality\" />\n      </SubList>\n      <SubList label=\"Pratique\">\n        <ReferenceField\n          reference=\"Place\"\n          source=\"pair:hasLocation\"\n          linkType=\"show\"\n        >\n          <TextField source=\"pair:label\" />\n        </ReferenceField>\n        <TextField source=\"cd:practiceTime\" fullWidth />\n        <TextField source=\"cd:practiceFrequency\" fullWidth />\n        <TextField source=\"cd:practiceSubjects\" fullWidth />\n      </SubList>\n      <SubList label=\"Communauté\">\n        <TextField source=\"cd:skills\" fullWidth />\n        <UrlField source=\"pair:webPage\" fullWidth />\n        <TextField source=\"cd:needs\" fullWidth />\n        <TextField source=\"cd:comments\" fullWidth />\n      </SubList>\n      {/*<MainList>*/}\n      {/*  <ReferenceArrayField reference=\"Document\" source=\"pair:offers\">*/}\n      {/*    <Datagrid rowClick=\"show\">*/}\n      {/*      <TextField source=\"pair:label\" />*/}\n      {/*      <TextField source=\"pair:webPage\" />*/}\n      {/*      <ShowButton />*/}\n      {/*      <EditButton />*/}\n      {/*    </Datagrid>*/}\n      {/*  </ReferenceArrayField>*/}\n      {/*</MainList>*/}\n    </>\n  </Show>\n);\n\nexport default PersonShow;\n"]},"metadata":{},"sourceType":"module"}