{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventForm.js\";\nimport React from 'react';\nimport { required, SimpleForm, TextInput } from 'react-admin';\nimport MarkdownInput from '../../markdown/MarkdownInput';\nimport { DateTimeInput } from '@semapps/date-components';\nimport frLocale from \"date-fns/locale/fr\";\nimport ReferenceQuickCreateInput from \"../../pair/ReferenceQuickCreateInput\";\n\nconst urlValidation = value => {\n  if (value && !value.startsWith('http://') && !value.startsWith('https://')) {\n    return 'Veuillez entrer une adresse valide';\n  }\n\n  return undefined;\n};\n\nconst EventForm = props => /*#__PURE__*/React.createElement(SimpleForm, Object.assign({}, props, {\n  redirect: \"show\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"pair:label\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(ReferenceQuickCreateInput, {\n  reference: \"Organization\",\n  source: \"pair:operatedBy\",\n  selectOptionText: \"pair:label\",\n  perPage: 1000,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  label: \"Nom\",\n  source: \"pair:label\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  label: \"Lien vers le site de l'organisation\",\n  source: \"pair:webPage\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(MarkdownInput, {\n  multiline: true,\n  label: \"Lien vers le site de l'organisation\",\n  source: \"pair:description\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(MarkdownInput, {\n  multiline: true,\n  source: \"pair:description\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(DateTimeInput, {\n  source: \"pair:startDate\",\n  options: {\n    format: 'dd/MM/yyyy à HH:mm',\n    ampm: false\n  },\n  providerOptions: {\n    locale: frLocale\n  },\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(DateTimeInput, {\n  source: \"pair:endDate\",\n  options: {\n    format: 'dd/MM/yyyy à HH:mm',\n    ampm: false\n  },\n  providerOptions: {\n    locale: frLocale\n  },\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"cd:registrationPage\",\n  validate: urlValidation,\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"cd:meetingPage\",\n  validate: urlValidation,\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }\n}));\n\nexport default EventForm;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventForm.js"],"names":["React","required","SimpleForm","TextInput","MarkdownInput","DateTimeInput","frLocale","ReferenceQuickCreateInput","urlValidation","value","startsWith","undefined","EventForm","props","format","ampm","locale"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { required, SimpleForm, TextInput } from 'react-admin';\nimport MarkdownInput from '../../markdown/MarkdownInput';\nimport { DateTimeInput } from '@semapps/date-components';\nimport frLocale from \"date-fns/locale/fr\";\nimport ReferenceQuickCreateInput from \"../../pair/ReferenceQuickCreateInput\";\n\nconst urlValidation = (value) => {\n  if (value && !value.startsWith('http://') && !value.startsWith('https://')) {\n    return 'Veuillez entrer une adresse valide';\n  }\n  return undefined;\n};\n\nconst EventForm = props => (\n  <SimpleForm {...props} redirect=\"show\">\n    <TextInput source=\"pair:label\" validate={required()} fullWidth />\n    <ReferenceQuickCreateInput\n      reference=\"Organization\"\n      source=\"pair:operatedBy\"\n      selectOptionText=\"pair:label\"\n      perPage={1000}\n    >\n      <TextInput\n        label=\"Nom\"\n        source=\"pair:label\"\n        validate={required()}\n        fullWidth\n      />\n      <TextInput\n        label=\"Lien vers le site de l'organisation\"\n        source=\"pair:webPage\"\n        fullWidth\n      />\n      <MarkdownInput\n        multiline\n        label=\"Lien vers le site de l'organisation\"\n        source=\"pair:description\"\n        fullWidth\n      />\n    </ReferenceQuickCreateInput>\n    <MarkdownInput multiline source=\"pair:description\" fullWidth />\n    <DateTimeInput\n      source=\"pair:startDate\"\n      options={{\n        format: 'dd/MM/yyyy à HH:mm',\n        ampm: false\n      }}\n      providerOptions={{\n        locale: frLocale\n      }}\n      fullWidth\n    />\n    <DateTimeInput\n      source=\"pair:endDate\"\n      options={{\n        format: 'dd/MM/yyyy à HH:mm',\n        ampm: false\n      }}\n      providerOptions={{\n        locale: frLocale\n      }}\n      fullWidth\n    />\n    <TextInput source=\"cd:registrationPage\" validate={urlValidation} fullWidth />\n    <TextInput source=\"cd:meetingPage\" validate={urlValidation} fullWidth />\n  </SimpleForm>\n);\n\nexport default EventForm;\n"]},"metadata":{},"sourceType":"module"}