{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar ClassNames_1 = require(\"../util/ClassNames\");\n\nvar TextAreaCaretPosition_1 = require(\"../util/TextAreaCaretPosition\");\n\nvar InsertTextAtPosition_1 = require(\"../util/InsertTextAtPosition\");\n\nvar Math_1 = require(\"../util/Math\");\n\nvar SuggestionsDropdown_1 = require(\"./SuggestionsDropdown\");\n\nvar TextArea =\n/** @class */\nfunction (_super) {\n  __extends(TextArea, _super);\n\n  function TextArea(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.currentLoadSuggestionsPromise = Promise.resolve(undefined);\n    /**\n     * suggestionsPromiseIndex exists as a means to cancel what happens when the suggestions promise finishes loading.\n     *\n     * When the user is searching for suggestions, there is a promise that, when resolved, causes a re-render.\n     * However, in case there is another promise to be resolved after the current one, it does not make sense to re-render\n     * only to re-render again after the next one is complete.\n     *\n     * When there is a promise loading and the user cancels the suggestion, you don't want the status to go back to \"active\"\n     * when the promise resolves.\n     *\n     * suggestionsPromiseIndex increments every time the mentions query\n     */\n\n    _this.suggestionsPromiseIndex = 0;\n\n    _this.getTextArea = function () {\n      return _this.props.refObject.current;\n    };\n\n    _this.handleOnChange = function (event) {\n      var onChange = _this.props.onChange;\n      onChange(event.target.value);\n    };\n\n    _this.handleBlur = function () {\n      var mention = _this.state.mention;\n\n      if (mention) {\n        _this.setState({\n          mention: {\n            status: \"inactive\",\n            suggestions: []\n          }\n        });\n      }\n    };\n\n    _this.startLoadingSuggestions = function (text) {\n      var promiseIndex = ++_this.suggestionsPromiseIndex;\n      var loadSuggestions = _this.props.loadSuggestions;\n      _this.currentLoadSuggestionsPromise = _this.currentLoadSuggestionsPromise.then(function () {\n        return loadSuggestions(text, _this.state.mention.triggeredBy);\n      }).then(function (suggestions) {\n        if (_this.state.mention.status === \"inactive\") {\n          // This means this promise resolved too late when the status has already been set to inactice\n          return;\n        } else if (_this.suggestionsPromiseIndex === promiseIndex) {\n          if (!suggestions || !suggestions.length) {\n            _this.setState({\n              mention: {\n                status: \"inactive\",\n                suggestions: []\n              }\n            });\n          } else {\n            _this.setState({\n              mention: __assign(__assign({}, _this.state.mention), {\n                status: \"active\",\n                suggestions: suggestions,\n                focusIndex: 0\n              })\n            });\n          }\n\n          _this.suggestionsPromiseIndex = 0;\n        }\n\n        return Promise.resolve();\n      });\n    };\n\n    _this.loadEmptySuggestion = function (target, key) {\n      var caret = TextAreaCaretPosition_1.getCaretCoordinates(target, key);\n\n      _this.startLoadingSuggestions(\"\");\n\n      _this.setState({\n        mention: {\n          status: \"loading\",\n          startPosition: target.selectionStart + 1,\n          caret: caret,\n          suggestions: [],\n          triggeredBy: key\n        }\n      });\n    };\n\n    _this.handleSuggestionSelected = function (index) {\n      var mention = _this.state.mention;\n      _this.getTextArea().selectionStart = mention.startPosition - 1;\n\n      var textForInsert = _this.props.value.substr(_this.getTextArea().selectionStart, _this.getTextArea().selectionEnd - _this.getTextArea().selectionStart);\n\n      InsertTextAtPosition_1.insertText(_this.getTextArea(), mention.suggestions[index].value + \" \");\n\n      _this.setState({\n        mention: {\n          status: \"inactive\",\n          suggestions: []\n        }\n      });\n    };\n\n    _this.handleKeyDown = function (event) {\n      if (_this.props.onPossibleKeyCommand) {\n        var handled = _this.props.onPossibleKeyCommand(event);\n\n        if (handled) {\n          event.preventDefault(); // If the keydown resulted in a command being executed, we will just close the suggestions if they are open.\n          // Resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n          // when they finish loading.\n          // TODO: The code below is duplicate, we need to clean this up\n\n          _this.suggestionsPromiseIndex = 0;\n\n          _this.setState({\n            mention: {\n              status: \"inactive\",\n              suggestions: []\n            }\n          });\n\n          return;\n        }\n      }\n\n      if (!_this.suggestionsEnabled()) {\n        return;\n      }\n\n      var key = event.key,\n          shiftKey = event.shiftKey,\n          currentTarget = event.currentTarget;\n      var selectionStart = currentTarget.selectionStart;\n      var mention = _this.state.mention;\n\n      switch (mention.status) {\n        case \"loading\":\n        case \"active\":\n          if (key === \"Escape\" || key === \"Backspace\" && selectionStart <= _this.state.mention.startPosition) {\n            // resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n            // when they finish loading.\n            _this.suggestionsPromiseIndex = 0;\n\n            _this.setState({\n              mention: {\n                status: \"inactive\",\n                suggestions: []\n              }\n            });\n          } else if (mention.status === \"active\" && (key === \"ArrowUp\" || key === \"ArrowDown\") && !shiftKey) {\n            event.preventDefault();\n            var focusDelta = key === \"ArrowUp\" ? -1 : 1;\n\n            _this.setState({\n              mention: __assign(__assign({}, mention), {\n                focusIndex: Math_1.mod(mention.focusIndex + focusDelta, mention.suggestions.length)\n              })\n            });\n          } else if (key === \"Enter\" && mention.status === \"active\" && mention.suggestions.length) {\n            event.preventDefault();\n\n            _this.handleSuggestionSelected(mention.focusIndex);\n          }\n\n          break;\n\n        default: // Ignore\n\n      }\n    };\n\n    _this.handleKeyUp = function (event) {\n      var key = event.key;\n      var mention = _this.state.mention;\n      var _a = _this.props,\n          suggestionTriggerCharacters = _a.suggestionTriggerCharacters,\n          value = _a.value;\n\n      switch (mention.status) {\n        case \"loading\":\n        case \"active\":\n          if (key === \"Backspace\") {\n            var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition);\n\n            _this.startLoadingSuggestions(searchText);\n\n            if (mention.status !== \"loading\") {\n              _this.setState({\n                mention: __assign(__assign({}, _this.state.mention), {\n                  status: \"loading\"\n                })\n              });\n            }\n          }\n\n          break;\n\n        case \"inactive\":\n          if (key === \"Backspace\") {\n            var prevChar = value.charAt(_this.getTextArea().selectionStart - 1);\n            var isAtMention = suggestionTriggerCharacters.includes(value.charAt(_this.getTextArea().selectionStart - 1));\n\n            if (isAtMention) {\n              _this.loadEmptySuggestion(event.currentTarget, prevChar);\n            }\n          }\n\n          break;\n\n        default: // Ignore\n\n      }\n    };\n\n    _this.handleKeyPress = function (event) {\n      var _a = _this.props,\n          suggestionTriggerCharacters = _a.suggestionTriggerCharacters,\n          value = _a.value;\n      var mention = _this.state.mention;\n      var key = event.key;\n\n      switch (mention.status) {\n        case \"loading\":\n        case \"active\":\n          if (key === \" \") {\n            _this.setState({\n              mention: __assign(__assign({}, _this.state.mention), {\n                status: \"inactive\"\n              })\n            });\n\n            return;\n          }\n\n          var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition) + key; // In this case, the mentions box was open but the user typed something else\n\n          _this.startLoadingSuggestions(searchText);\n\n          if (mention.status !== \"loading\") {\n            _this.setState({\n              mention: __assign(__assign({}, _this.state.mention), {\n                status: \"loading\"\n              })\n            });\n          }\n\n          break;\n\n        case \"inactive\":\n          if (suggestionTriggerCharacters.indexOf(event.key) === -1 || !/\\s|\\(|\\[|^.{0}$/.test(value.charAt(_this.getTextArea().selectionStart - 1))) {\n            return;\n          }\n\n          _this.loadEmptySuggestion(event.currentTarget, event.key);\n\n          break;\n      }\n    };\n\n    _this.state = {\n      mention: {\n        status: \"inactive\",\n        suggestions: []\n      }\n    };\n    return _this;\n  }\n\n  TextArea.prototype.suggestionsEnabled = function () {\n    return this.props.suggestionTriggerCharacters && this.props.suggestionTriggerCharacters.length && this.props.loadSuggestions;\n  };\n\n  TextArea.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        classes = _a.classes,\n        readOnly = _a.readOnly,\n        textAreaProps = _a.textAreaProps,\n        height = _a.height,\n        value = _a.value,\n        suggestionTriggerCharacters = _a.suggestionTriggerCharacters,\n        loadSuggestions = _a.loadSuggestions,\n        suggestionsDropdownClasses = _a.suggestionsDropdownClasses,\n        textAreaComponent = _a.textAreaComponent,\n        onPaste = _a.onPaste;\n    var suggestionsEnabled = suggestionTriggerCharacters && suggestionTriggerCharacters.length && loadSuggestions;\n    var mention = this.state.mention;\n    var TextAreaComponent = textAreaComponent || \"textarea\";\n    return React.createElement(\"div\", {\n      className: \"mde-textarea-wrapper\"\n    }, React.createElement(TextAreaComponent, __assign({\n      className: ClassNames_1.classNames(\"mde-text\", classes),\n      style: {\n        height: height\n      },\n      ref: this.props.refObject,\n      readOnly: readOnly,\n      value: value,\n      \"data-testid\": \"text-area\"\n    }, textAreaProps, {\n      onChange: function (event) {\n        var _a, _b, _c;\n\n        (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onChange) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n\n        _this.handleOnChange(event);\n      },\n      onBlur: function (event) {\n        var _a, _b, _c;\n\n        if (suggestionsEnabled) {\n          (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onBlur) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n\n          _this.handleBlur();\n        }\n      },\n      onKeyDown: function (event) {\n        var _a, _b, _c;\n\n        (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onKeyDown) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n\n        _this.handleKeyDown(event);\n      },\n      onKeyUp: function (event) {\n        var _a, _b, _c;\n\n        if (suggestionsEnabled) {\n          (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onKeyUp) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n\n          _this.handleKeyUp(event);\n        }\n      },\n      onKeyPress: function (event) {\n        var _a, _b, _c;\n\n        if (suggestionsEnabled) {\n          (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onKeyPress) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n\n          _this.handleKeyPress(event);\n        }\n      },\n      onPaste: function (event) {\n        var _a, _b, _c;\n\n        (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onPaste) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n        onPaste(event);\n      }\n    })), mention.status === \"active\" && mention.suggestions.length && React.createElement(SuggestionsDropdown_1.SuggestionsDropdown, {\n      classes: suggestionsDropdownClasses,\n      caret: mention.caret,\n      suggestions: mention.suggestions,\n      onSuggestionSelected: this.handleSuggestionSelected,\n      focusIndex: mention.focusIndex,\n      textAreaRef: this.props.refObject\n    }));\n  };\n\n  return TextArea;\n}(React.Component);\n\nexports.TextArea = TextArea;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/node_modules/ra-input-markdown/node_modules/react-mde/lib/js/components/TextArea.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","defineProperty","exports","value","React","require","ClassNames_1","TextAreaCaretPosition_1","InsertTextAtPosition_1","Math_1","SuggestionsDropdown_1","TextArea","_super","props","_this","currentLoadSuggestionsPromise","Promise","resolve","undefined","suggestionsPromiseIndex","getTextArea","refObject","current","handleOnChange","event","onChange","target","handleBlur","mention","state","setState","status","suggestions","startLoadingSuggestions","text","promiseIndex","loadSuggestions","then","triggeredBy","focusIndex","loadEmptySuggestion","key","caret","getCaretCoordinates","startPosition","selectionStart","handleSuggestionSelected","index","textForInsert","substr","selectionEnd","insertText","handleKeyDown","onPossibleKeyCommand","handled","preventDefault","suggestionsEnabled","shiftKey","currentTarget","focusDelta","mod","handleKeyUp","_a","suggestionTriggerCharacters","searchText","prevChar","charAt","isAtMention","includes","handleKeyPress","indexOf","test","render","classes","readOnly","textAreaProps","height","suggestionsDropdownClasses","textAreaComponent","onPaste","TextAreaComponent","createElement","className","classNames","style","ref","_b","_c","onBlur","onKeyDown","onKeyUp","onKeyPress","SuggestionsDropdown","onSuggestionSelected","textAreaRef","Component"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar ClassNames_1 = require(\"../util/ClassNames\");\nvar TextAreaCaretPosition_1 = require(\"../util/TextAreaCaretPosition\");\nvar InsertTextAtPosition_1 = require(\"../util/InsertTextAtPosition\");\nvar Math_1 = require(\"../util/Math\");\nvar SuggestionsDropdown_1 = require(\"./SuggestionsDropdown\");\nvar TextArea = /** @class */ (function (_super) {\n    __extends(TextArea, _super);\n    function TextArea(props) {\n        var _this = _super.call(this, props) || this;\n        _this.currentLoadSuggestionsPromise = Promise.resolve(undefined);\n        /**\n         * suggestionsPromiseIndex exists as a means to cancel what happens when the suggestions promise finishes loading.\n         *\n         * When the user is searching for suggestions, there is a promise that, when resolved, causes a re-render.\n         * However, in case there is another promise to be resolved after the current one, it does not make sense to re-render\n         * only to re-render again after the next one is complete.\n         *\n         * When there is a promise loading and the user cancels the suggestion, you don't want the status to go back to \"active\"\n         * when the promise resolves.\n         *\n         * suggestionsPromiseIndex increments every time the mentions query\n         */\n        _this.suggestionsPromiseIndex = 0;\n        _this.getTextArea = function () {\n            return _this.props.refObject.current;\n        };\n        _this.handleOnChange = function (event) {\n            var onChange = _this.props.onChange;\n            onChange(event.target.value);\n        };\n        _this.handleBlur = function () {\n            var mention = _this.state.mention;\n            if (mention) {\n                _this.setState({ mention: { status: \"inactive\", suggestions: [] } });\n            }\n        };\n        _this.startLoadingSuggestions = function (text) {\n            var promiseIndex = ++_this.suggestionsPromiseIndex;\n            var loadSuggestions = _this.props.loadSuggestions;\n            _this.currentLoadSuggestionsPromise = _this.currentLoadSuggestionsPromise\n                .then(function () { return loadSuggestions(text, _this.state.mention.triggeredBy); })\n                .then(function (suggestions) {\n                if (_this.state.mention.status === \"inactive\") {\n                    // This means this promise resolved too late when the status has already been set to inactice\n                    return;\n                }\n                else if (_this.suggestionsPromiseIndex === promiseIndex) {\n                    if (!suggestions || !suggestions.length) {\n                        _this.setState({\n                            mention: {\n                                status: \"inactive\",\n                                suggestions: []\n                            }\n                        });\n                    }\n                    else {\n                        _this.setState({\n                            mention: __assign(__assign({}, _this.state.mention), { status: \"active\", suggestions: suggestions, focusIndex: 0 })\n                        });\n                    }\n                    _this.suggestionsPromiseIndex = 0;\n                }\n                return Promise.resolve();\n            });\n        };\n        _this.loadEmptySuggestion = function (target, key) {\n            var caret = TextAreaCaretPosition_1.getCaretCoordinates(target, key);\n            _this.startLoadingSuggestions(\"\");\n            _this.setState({\n                mention: {\n                    status: \"loading\",\n                    startPosition: target.selectionStart + 1,\n                    caret: caret,\n                    suggestions: [],\n                    triggeredBy: key\n                }\n            });\n        };\n        _this.handleSuggestionSelected = function (index) {\n            var mention = _this.state.mention;\n            _this.getTextArea().selectionStart = mention.startPosition - 1;\n            var textForInsert = _this.props.value.substr(_this.getTextArea().selectionStart, _this.getTextArea().selectionEnd - _this.getTextArea().selectionStart);\n            InsertTextAtPosition_1.insertText(_this.getTextArea(), mention.suggestions[index].value + \" \");\n            _this.setState({\n                mention: {\n                    status: \"inactive\",\n                    suggestions: []\n                }\n            });\n        };\n        _this.handleKeyDown = function (event) {\n            if (_this.props.onPossibleKeyCommand) {\n                var handled = _this.props.onPossibleKeyCommand(event);\n                if (handled) {\n                    event.preventDefault();\n                    // If the keydown resulted in a command being executed, we will just close the suggestions if they are open.\n                    // Resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n                    // when they finish loading.\n                    // TODO: The code below is duplicate, we need to clean this up\n                    _this.suggestionsPromiseIndex = 0;\n                    _this.setState({\n                        mention: {\n                            status: \"inactive\",\n                            suggestions: []\n                        }\n                    });\n                    return;\n                }\n            }\n            if (!_this.suggestionsEnabled()) {\n                return;\n            }\n            var key = event.key, shiftKey = event.shiftKey, currentTarget = event.currentTarget;\n            var selectionStart = currentTarget.selectionStart;\n            var mention = _this.state.mention;\n            switch (mention.status) {\n                case \"loading\":\n                case \"active\":\n                    if (key === \"Escape\" ||\n                        (key === \"Backspace\" &&\n                            selectionStart <= _this.state.mention.startPosition)) {\n                        // resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n                        // when they finish loading.\n                        _this.suggestionsPromiseIndex = 0;\n                        _this.setState({\n                            mention: {\n                                status: \"inactive\",\n                                suggestions: []\n                            }\n                        });\n                    }\n                    else if (mention.status === \"active\" &&\n                        (key === \"ArrowUp\" || key === \"ArrowDown\") &&\n                        !shiftKey) {\n                        event.preventDefault();\n                        var focusDelta = key === \"ArrowUp\" ? -1 : 1;\n                        _this.setState({\n                            mention: __assign(__assign({}, mention), { focusIndex: Math_1.mod(mention.focusIndex + focusDelta, mention.suggestions.length) })\n                        });\n                    }\n                    else if (key === \"Enter\" &&\n                        mention.status === \"active\" &&\n                        mention.suggestions.length) {\n                        event.preventDefault();\n                        _this.handleSuggestionSelected(mention.focusIndex);\n                    }\n                    break;\n                default:\n                // Ignore\n            }\n        };\n        _this.handleKeyUp = function (event) {\n            var key = event.key;\n            var mention = _this.state.mention;\n            var _a = _this.props, suggestionTriggerCharacters = _a.suggestionTriggerCharacters, value = _a.value;\n            switch (mention.status) {\n                case \"loading\":\n                case \"active\":\n                    if (key === \"Backspace\") {\n                        var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition);\n                        _this.startLoadingSuggestions(searchText);\n                        if (mention.status !== \"loading\") {\n                            _this.setState({\n                                mention: __assign(__assign({}, _this.state.mention), { status: \"loading\" })\n                            });\n                        }\n                    }\n                    break;\n                case \"inactive\":\n                    if (key === \"Backspace\") {\n                        var prevChar = value.charAt(_this.getTextArea().selectionStart - 1);\n                        var isAtMention = suggestionTriggerCharacters.includes(value.charAt(_this.getTextArea().selectionStart - 1));\n                        if (isAtMention) {\n                            _this.loadEmptySuggestion(event.currentTarget, prevChar);\n                        }\n                    }\n                    break;\n                default:\n                // Ignore\n            }\n        };\n        _this.handleKeyPress = function (event) {\n            var _a = _this.props, suggestionTriggerCharacters = _a.suggestionTriggerCharacters, value = _a.value;\n            var mention = _this.state.mention;\n            var key = event.key;\n            switch (mention.status) {\n                case \"loading\":\n                case \"active\":\n                    if (key === \" \") {\n                        _this.setState({\n                            mention: __assign(__assign({}, _this.state.mention), { status: \"inactive\" })\n                        });\n                        return;\n                    }\n                    var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition) + key;\n                    // In this case, the mentions box was open but the user typed something else\n                    _this.startLoadingSuggestions(searchText);\n                    if (mention.status !== \"loading\") {\n                        _this.setState({\n                            mention: __assign(__assign({}, _this.state.mention), { status: \"loading\" })\n                        });\n                    }\n                    break;\n                case \"inactive\":\n                    if (suggestionTriggerCharacters.indexOf(event.key) === -1 ||\n                        !/\\s|\\(|\\[|^.{0}$/.test(value.charAt(_this.getTextArea().selectionStart - 1))) {\n                        return;\n                    }\n                    _this.loadEmptySuggestion(event.currentTarget, event.key);\n                    break;\n            }\n        };\n        _this.state = { mention: { status: \"inactive\", suggestions: [] } };\n        return _this;\n    }\n    TextArea.prototype.suggestionsEnabled = function () {\n        return (this.props.suggestionTriggerCharacters &&\n            this.props.suggestionTriggerCharacters.length &&\n            this.props.loadSuggestions);\n    };\n    TextArea.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, classes = _a.classes, readOnly = _a.readOnly, textAreaProps = _a.textAreaProps, height = _a.height, value = _a.value, suggestionTriggerCharacters = _a.suggestionTriggerCharacters, loadSuggestions = _a.loadSuggestions, suggestionsDropdownClasses = _a.suggestionsDropdownClasses, textAreaComponent = _a.textAreaComponent, onPaste = _a.onPaste;\n        var suggestionsEnabled = suggestionTriggerCharacters &&\n            suggestionTriggerCharacters.length &&\n            loadSuggestions;\n        var mention = this.state.mention;\n        var TextAreaComponent = (textAreaComponent ||\n            \"textarea\");\n        return (React.createElement(\"div\", { className: \"mde-textarea-wrapper\" },\n            React.createElement(TextAreaComponent, __assign({ className: ClassNames_1.classNames(\"mde-text\", classes), style: { height: height }, ref: this.props.refObject, readOnly: readOnly, value: value, \"data-testid\": \"text-area\" }, textAreaProps, { onChange: function (event) {\n                    var _a, _b, _c;\n                    (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onChange) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n                    _this.handleOnChange(event);\n                }, onBlur: function (event) {\n                    var _a, _b, _c;\n                    if (suggestionsEnabled) {\n                        (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onBlur) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n                        _this.handleBlur();\n                    }\n                }, onKeyDown: function (event) {\n                    var _a, _b, _c;\n                    (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onKeyDown) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n                    _this.handleKeyDown(event);\n                }, onKeyUp: function (event) {\n                    var _a, _b, _c;\n                    if (suggestionsEnabled) {\n                        (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onKeyUp) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n                        _this.handleKeyUp(event);\n                    }\n                }, onKeyPress: function (event) {\n                    var _a, _b, _c;\n                    if (suggestionsEnabled) {\n                        (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onKeyPress) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n                        _this.handleKeyPress(event);\n                    }\n                }, onPaste: function (event) {\n                    var _a, _b, _c;\n                    (_c = (_a = textAreaProps) === null || _a === void 0 ? void 0 : (_b = _a).onPaste) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n                    onPaste(event);\n                } })),\n            mention.status === \"active\" && mention.suggestions.length && (React.createElement(SuggestionsDropdown_1.SuggestionsDropdown, { classes: suggestionsDropdownClasses, caret: mention.caret, suggestions: mention.suggestions, onSuggestionSelected: this.handleSuggestionSelected, focusIndex: mention.focusIndex, textAreaRef: this.props.refObject }))));\n    };\n    return TextArea;\n}(React.Component));\nexports.TextArea = TextArea;\n"]},"metadata":{},"sourceType":"script"}