{"ast":null,"code":"import React from\"react\";import{Show,MarkdownField,MainList,SimpleList}from\"@semapps/archipelago-layout\";import{Avatar,makeStyles,Button}from\"@material-ui/core\";import MapIcon from\"@material-ui/icons/Map\";import{MapField}from\"@semapps/geo-components\";import{ReferenceArrayField}from\"@semapps/semantic-data-provider\";import PlaceTitle from\"./PlaceTitle\";import PersonIcon from\"@material-ui/icons/Person\";import{Link}from\"react-router-dom\";var useStyles=makeStyles(function(theme){return{card:{paddingTop:0},backButtonContainer:{textAlign:\"right\"}};});var PlaceShow=function PlaceShow(props){var classes=useStyles();return/*#__PURE__*/React.createElement(Show,Object.assign({title:/*#__PURE__*/React.createElement(PlaceTitle,null),classes:{card:classes.card}},props),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MainList,null,/*#__PURE__*/React.createElement(ReferenceArrayField,{reference:\"Person\",source:\"pair:locationOf\"},/*#__PURE__*/React.createElement(SimpleList,{primaryText:function primaryText(record){return record===null||record===void 0?void 0:record[\"pair:label\"];},leftAvatar:function leftAvatar(){return/*#__PURE__*/React.createElement(Avatar,{width:\"100%\"},/*#__PURE__*/React.createElement(PersonIcon,null));},linkType:\"show\"})),/*#__PURE__*/React.createElement(MapField,{source:\"pair:hasPostalAddress\",address:function address(record){var _record$pairHasPosta;return record===null||record===void 0?void 0:(_record$pairHasPosta=record[\"pair:hasPostalAddress\"])===null||_record$pairHasPosta===void 0?void 0:_record$pairHasPosta[\"pair:label\"];},latitude:function latitude(record){var _record$pairHasPosta2;return record===null||record===void 0?void 0:(_record$pairHasPosta2=record[\"pair:hasPostalAddress\"])===null||_record$pairHasPosta2===void 0?void 0:_record$pairHasPosta2[\"pair:latitude\"];},longitude:function longitude(record){var _record$pairHasPosta3;return record===null||record===void 0?void 0:(_record$pairHasPosta3=record[\"pair:hasPostalAddress\"])===null||_record$pairHasPosta3===void 0?void 0:_record$pairHasPosta3[\"pair:longitude\"];}}),/*#__PURE__*/React.createElement(MarkdownField,{source:\"pair:description\",addLabel:true})),/*#__PURE__*/React.createElement(\"div\",{className:classes.backButtonContainer},/*#__PURE__*/React.createElement(Link,{to:\"/Place\"},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",endIcon:/*#__PURE__*/React.createElement(MapIcon,null)},\"Retour sur la carte\")))));};export default PlaceShow;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceShow.js"],"names":["React","Show","MarkdownField","MainList","SimpleList","Avatar","makeStyles","Button","MapIcon","MapField","ReferenceArrayField","PlaceTitle","PersonIcon","Link","useStyles","theme","card","paddingTop","backButtonContainer","textAlign","PlaceShow","props","classes","record"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,IADF,CAEEC,aAFF,CAGEC,QAHF,CAIEC,UAJF,KAKO,6BALP,CAMA,OAASC,MAAT,CAAiBC,UAAjB,CAA6BC,MAA7B,KAA2C,mBAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAASC,QAAT,KAAyB,yBAAzB,CACA,OAASC,mBAAT,KAAoC,iCAApC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAAC,SAACS,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,UAAU,CAAE,CADR,CADiC,CAIvCC,mBAAmB,CAAE,CACnBC,SAAS,CAAE,OADQ,CAJkB,CAAZ,EAAD,CAA5B,CASA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,mBACE,oBAAC,IAAD,gBAAM,KAAK,cAAE,oBAAC,UAAD,MAAb,CAA6B,OAAO,CAAE,CAAEE,IAAI,CAAEM,OAAO,CAACN,IAAhB,CAAtC,EAAkEK,KAAlE,eACE,qDACE,oBAAC,QAAD,mBACE,oBAAC,mBAAD,EAAqB,SAAS,CAAC,QAA/B,CAAwC,MAAM,CAAC,iBAA/C,eACE,oBAAC,UAAD,EACE,WAAW,CAAE,qBAACE,MAAD,QAAYA,CAAAA,MAAZ,SAAYA,MAAZ,iBAAYA,MAAM,CAAG,YAAH,CAAlB,EADf,CAEE,UAAU,CAAE,yCACV,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,eACE,oBAAC,UAAD,MADF,CADU,EAFd,CAOE,QAAQ,CAAC,MAPX,EADF,CADF,cAYE,oBAAC,QAAD,EACE,MAAM,CAAC,uBADT,CAEE,OAAO,CAAE,iBAACA,MAAD,iCACPA,CAAAA,MADO,SACPA,MADO,uCACPA,MAAM,CAAG,uBAAH,CADC,+CACP,qBAAoC,YAApC,CADO,EAFX,CAKE,QAAQ,CAAE,kBAACA,MAAD,kCACRA,CAAAA,MADQ,SACRA,MADQ,wCACRA,MAAM,CAAG,uBAAH,CADE,gDACR,sBAAoC,eAApC,CADQ,EALZ,CAQE,SAAS,CAAE,mBAACA,MAAD,kCACTA,CAAAA,MADS,SACTA,MADS,wCACTA,MAAM,CAAG,uBAAH,CADG,gDACT,sBAAoC,gBAApC,CADS,EARb,EAZF,cAyBE,oBAAC,aAAD,EAAe,MAAM,CAAC,kBAAtB,CAAyC,QAAQ,KAAjD,EAzBF,CADF,cA4BE,2BAAK,SAAS,CAAED,OAAO,CAACJ,mBAAxB,eACE,oBAAC,IAAD,EAAM,EAAE,CAAC,QAAT,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,OAAO,cAAE,oBAAC,OAAD,MAArD,wBADF,CADF,CA5BF,CADF,CADF,CAwCD,CA1CD,CA4CA,cAAeE,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport {\n  Show,\n  MarkdownField,\n  MainList,\n  SimpleList,\n} from \"@semapps/archipelago-layout\";\nimport { Avatar, makeStyles, Button } from \"@material-ui/core\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport { MapField } from \"@semapps/geo-components\";\nimport { ReferenceArrayField } from \"@semapps/semantic-data-provider\";\nimport PlaceTitle from \"./PlaceTitle\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    paddingTop: 0,\n  },\n  backButtonContainer: {\n    textAlign: \"right\",\n  },\n}));\n\nconst PlaceShow = (props) => {\n  const classes = useStyles();\n  return (\n    <Show title={<PlaceTitle />} classes={{ card: classes.card }} {...props}>\n      <>\n        <MainList>\n          <ReferenceArrayField reference=\"Person\" source=\"pair:locationOf\">\n            <SimpleList\n              primaryText={(record) => record?.[\"pair:label\"]}\n              leftAvatar={() => (\n                <Avatar width=\"100%\">\n                  <PersonIcon />\n                </Avatar>\n              )}\n              linkType=\"show\"\n            />\n          </ReferenceArrayField>\n          <MapField\n            source=\"pair:hasPostalAddress\"\n            address={(record) =>\n              record?.[\"pair:hasPostalAddress\"]?.[\"pair:label\"]\n            }\n            latitude={(record) =>\n              record?.[\"pair:hasPostalAddress\"]?.[\"pair:latitude\"]\n            }\n            longitude={(record) =>\n              record?.[\"pair:hasPostalAddress\"]?.[\"pair:longitude\"]\n            }\n          />\n\n          <MarkdownField source=\"pair:description\" addLabel />\n        </MainList>\n        <div className={classes.backButtonContainer}>\n          <Link to=\"/Place\">\n            <Button variant=\"contained\" color=\"primary\" endIcon={<MapIcon />}>\n              Retour sur la carte\n            </Button>\n          </Link>\n        </div>\n      </>\n    </Show>\n  );\n};\n\nexport default PlaceShow;\n"]},"metadata":{},"sourceType":"module"}