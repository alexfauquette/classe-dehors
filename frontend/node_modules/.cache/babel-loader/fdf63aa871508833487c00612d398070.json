{"ast":null,"code":"(function (root) {\n  'use strict';\n  /**\n   * charMap\n   * @type {Object}\n   */\n\n  var charMap = {\n    // latin\n    'À': 'A',\n    'Á': 'A',\n    'Â': 'A',\n    'Ã': 'A',\n    'Ä': 'Ae',\n    'Å': 'A',\n    'Æ': 'AE',\n    'Ç': 'C',\n    'È': 'E',\n    'É': 'E',\n    'Ê': 'E',\n    'Ë': 'E',\n    'Ì': 'I',\n    'Í': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ð': 'D',\n    'Ñ': 'N',\n    'Ò': 'O',\n    'Ó': 'O',\n    'Ô': 'O',\n    'Õ': 'O',\n    'Ö': 'Oe',\n    'Ő': 'O',\n    'Ø': 'O',\n    'Ù': 'U',\n    'Ú': 'U',\n    'Û': 'U',\n    'Ü': 'Ue',\n    'Ű': 'U',\n    'Ý': 'Y',\n    'Þ': 'TH',\n    'ß': 'ss',\n    'à': 'a',\n    'á': 'a',\n    'â': 'a',\n    'ã': 'a',\n    'ä': 'ae',\n    'å': 'a',\n    'æ': 'ae',\n    'ç': 'c',\n    'è': 'e',\n    'é': 'e',\n    'ê': 'e',\n    'ë': 'e',\n    'ì': 'i',\n    'í': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ð': 'd',\n    'ñ': 'n',\n    'ò': 'o',\n    'ó': 'o',\n    'ô': 'o',\n    'õ': 'o',\n    'ö': 'oe',\n    'ő': 'o',\n    'ø': 'o',\n    'ù': 'u',\n    'ú': 'u',\n    'û': 'u',\n    'ü': 'ue',\n    'ű': 'u',\n    'ý': 'y',\n    'þ': 'th',\n    'ÿ': 'y',\n    'ẞ': 'SS',\n    // language specific\n    // Arabic\n    'ا': 'a',\n    'أ': 'a',\n    'إ': 'i',\n    'آ': 'aa',\n    'ؤ': 'u',\n    'ئ': 'e',\n    'ء': 'a',\n    'ب': 'b',\n    'ت': 't',\n    'ث': 'th',\n    'ج': 'j',\n    'ح': 'h',\n    'خ': 'kh',\n    'د': 'd',\n    'ذ': 'th',\n    'ر': 'r',\n    'ز': 'z',\n    'س': 's',\n    'ش': 'sh',\n    'ص': 's',\n    'ض': 'dh',\n    'ط': 't',\n    'ظ': 'z',\n    'ع': 'a',\n    'غ': 'gh',\n    'ف': 'f',\n    'ق': 'q',\n    'ك': 'k',\n    'ل': 'l',\n    'م': 'm',\n    'ن': 'n',\n    'ه': 'h',\n    'و': 'w',\n    'ي': 'y',\n    'ى': 'a',\n    'ة': 'h',\n    'ﻻ': 'la',\n    'ﻷ': 'laa',\n    'ﻹ': 'lai',\n    'ﻵ': 'laa',\n    // Persian additional characters than Arabic\n    'گ': 'g',\n    'چ': 'ch',\n    'پ': 'p',\n    'ژ': 'zh',\n    'ک': 'k',\n    'ی': 'y',\n    // Arabic diactrics\n    'َ': 'a',\n    'ً': 'an',\n    'ِ': 'e',\n    'ٍ': 'en',\n    'ُ': 'u',\n    'ٌ': 'on',\n    'ْ': '',\n    // Arabic numbers\n    '٠': '0',\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    // Persian numbers\n    '۰': '0',\n    '۱': '1',\n    '۲': '2',\n    '۳': '3',\n    '۴': '4',\n    '۵': '5',\n    '۶': '6',\n    '۷': '7',\n    '۸': '8',\n    '۹': '9',\n    // Burmese consonants\n    'က': 'k',\n    'ခ': 'kh',\n    'ဂ': 'g',\n    'ဃ': 'ga',\n    'င': 'ng',\n    'စ': 's',\n    'ဆ': 'sa',\n    'ဇ': 'z',\n    'စျ': 'za',\n    'ည': 'ny',\n    'ဋ': 't',\n    'ဌ': 'ta',\n    'ဍ': 'd',\n    'ဎ': 'da',\n    'ဏ': 'na',\n    'တ': 't',\n    'ထ': 'ta',\n    'ဒ': 'd',\n    'ဓ': 'da',\n    'န': 'n',\n    'ပ': 'p',\n    'ဖ': 'pa',\n    'ဗ': 'b',\n    'ဘ': 'ba',\n    'မ': 'm',\n    'ယ': 'y',\n    'ရ': 'ya',\n    'လ': 'l',\n    'ဝ': 'w',\n    'သ': 'th',\n    'ဟ': 'h',\n    'ဠ': 'la',\n    'အ': 'a',\n    // consonant character combos\n    'ြ': 'y',\n    'ျ': 'ya',\n    'ွ': 'w',\n    'ြွ': 'yw',\n    'ျွ': 'ywa',\n    'ှ': 'h',\n    // independent vowels\n    'ဧ': 'e',\n    '၏': '-e',\n    'ဣ': 'i',\n    'ဤ': '-i',\n    'ဉ': 'u',\n    'ဦ': '-u',\n    'ဩ': 'aw',\n    'သြော': 'aw',\n    'ဪ': 'aw',\n    // numbers\n    '၀': '0',\n    '၁': '1',\n    '၂': '2',\n    '၃': '3',\n    '၄': '4',\n    '၅': '5',\n    '၆': '6',\n    '၇': '7',\n    '၈': '8',\n    '၉': '9',\n    // virama and tone marks which are silent in transliteration\n    '္': '',\n    '့': '',\n    'း': '',\n    // Czech\n    'č': 'c',\n    'ď': 'd',\n    'ě': 'e',\n    'ň': 'n',\n    'ř': 'r',\n    'š': 's',\n    'ť': 't',\n    'ů': 'u',\n    'ž': 'z',\n    'Č': 'C',\n    'Ď': 'D',\n    'Ě': 'E',\n    'Ň': 'N',\n    'Ř': 'R',\n    'Š': 'S',\n    'Ť': 'T',\n    'Ů': 'U',\n    'Ž': 'Z',\n    // Dhivehi\n    'ހ': 'h',\n    'ށ': 'sh',\n    'ނ': 'n',\n    'ރ': 'r',\n    'ބ': 'b',\n    'ޅ': 'lh',\n    'ކ': 'k',\n    'އ': 'a',\n    'ވ': 'v',\n    'މ': 'm',\n    'ފ': 'f',\n    'ދ': 'dh',\n    'ތ': 'th',\n    'ލ': 'l',\n    'ގ': 'g',\n    'ޏ': 'gn',\n    'ސ': 's',\n    'ޑ': 'd',\n    'ޒ': 'z',\n    'ޓ': 't',\n    'ޔ': 'y',\n    'ޕ': 'p',\n    'ޖ': 'j',\n    'ޗ': 'ch',\n    'ޘ': 'tt',\n    'ޙ': 'hh',\n    'ޚ': 'kh',\n    'ޛ': 'th',\n    'ޜ': 'z',\n    'ޝ': 'sh',\n    'ޞ': 's',\n    'ޟ': 'd',\n    'ޠ': 't',\n    'ޡ': 'z',\n    'ޢ': 'a',\n    'ޣ': 'gh',\n    'ޤ': 'q',\n    'ޥ': 'w',\n    'ަ': 'a',\n    'ާ': 'aa',\n    'ި': 'i',\n    'ީ': 'ee',\n    'ު': 'u',\n    'ޫ': 'oo',\n    'ެ': 'e',\n    'ޭ': 'ey',\n    'ޮ': 'o',\n    'ޯ': 'oa',\n    'ް': '',\n    // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\n    // National system (2002)\n    'ა': 'a',\n    'ბ': 'b',\n    'გ': 'g',\n    'დ': 'd',\n    'ე': 'e',\n    'ვ': 'v',\n    'ზ': 'z',\n    'თ': 't',\n    'ი': 'i',\n    'კ': 'k',\n    'ლ': 'l',\n    'მ': 'm',\n    'ნ': 'n',\n    'ო': 'o',\n    'პ': 'p',\n    'ჟ': 'zh',\n    'რ': 'r',\n    'ს': 's',\n    'ტ': 't',\n    'უ': 'u',\n    'ფ': 'p',\n    'ქ': 'k',\n    'ღ': 'gh',\n    'ყ': 'q',\n    'შ': 'sh',\n    'ჩ': 'ch',\n    'ც': 'ts',\n    'ძ': 'dz',\n    'წ': 'ts',\n    'ჭ': 'ch',\n    'ხ': 'kh',\n    'ჯ': 'j',\n    'ჰ': 'h',\n    // Greek\n    'α': 'a',\n    'β': 'v',\n    'γ': 'g',\n    'δ': 'd',\n    'ε': 'e',\n    'ζ': 'z',\n    'η': 'i',\n    'θ': 'th',\n    'ι': 'i',\n    'κ': 'k',\n    'λ': 'l',\n    'μ': 'm',\n    'ν': 'n',\n    'ξ': 'ks',\n    'ο': 'o',\n    'π': 'p',\n    'ρ': 'r',\n    'σ': 's',\n    'τ': 't',\n    'υ': 'y',\n    'φ': 'f',\n    'χ': 'x',\n    'ψ': 'ps',\n    'ω': 'o',\n    'ά': 'a',\n    'έ': 'e',\n    'ί': 'i',\n    'ό': 'o',\n    'ύ': 'y',\n    'ή': 'i',\n    'ώ': 'o',\n    'ς': 's',\n    'ϊ': 'i',\n    'ΰ': 'y',\n    'ϋ': 'y',\n    'ΐ': 'i',\n    'Α': 'A',\n    'Β': 'B',\n    'Γ': 'G',\n    'Δ': 'D',\n    'Ε': 'E',\n    'Ζ': 'Z',\n    'Η': 'I',\n    'Θ': 'TH',\n    'Ι': 'I',\n    'Κ': 'K',\n    'Λ': 'L',\n    'Μ': 'M',\n    'Ν': 'N',\n    'Ξ': 'KS',\n    'Ο': 'O',\n    'Π': 'P',\n    'Ρ': 'R',\n    'Σ': 'S',\n    'Τ': 'T',\n    'Υ': 'Y',\n    'Φ': 'F',\n    'Χ': 'X',\n    'Ψ': 'PS',\n    'Ω': 'O',\n    'Ά': 'A',\n    'Έ': 'E',\n    'Ί': 'I',\n    'Ό': 'O',\n    'Ύ': 'Y',\n    'Ή': 'I',\n    'Ώ': 'O',\n    'Ϊ': 'I',\n    'Ϋ': 'Y',\n    // Latvian\n    'ā': 'a',\n    // 'č': 'c', // duplicate\n    'ē': 'e',\n    'ģ': 'g',\n    'ī': 'i',\n    'ķ': 'k',\n    'ļ': 'l',\n    'ņ': 'n',\n    // 'š': 's', // duplicate\n    'ū': 'u',\n    // 'ž': 'z', // duplicate\n    'Ā': 'A',\n    // 'Č': 'C', // duplicate\n    'Ē': 'E',\n    'Ģ': 'G',\n    'Ī': 'I',\n    'Ķ': 'k',\n    'Ļ': 'L',\n    'Ņ': 'N',\n    // 'Š': 'S', // duplicate\n    'Ū': 'U',\n    // 'Ž': 'Z', // duplicate\n    // Macedonian\n    'Ќ': 'Kj',\n    'ќ': 'kj',\n    'Љ': 'Lj',\n    'љ': 'lj',\n    'Њ': 'Nj',\n    'њ': 'nj',\n    'Тс': 'Ts',\n    'тс': 'ts',\n    // Polish\n    'ą': 'a',\n    'ć': 'c',\n    'ę': 'e',\n    'ł': 'l',\n    'ń': 'n',\n    // 'ó': 'o', // duplicate\n    'ś': 's',\n    'ź': 'z',\n    'ż': 'z',\n    'Ą': 'A',\n    'Ć': 'C',\n    'Ę': 'E',\n    'Ł': 'L',\n    'Ń': 'N',\n    'Ś': 'S',\n    'Ź': 'Z',\n    'Ż': 'Z',\n    // Ukranian\n    'Є': 'Ye',\n    'І': 'I',\n    'Ї': 'Yi',\n    'Ґ': 'G',\n    'є': 'ye',\n    'і': 'i',\n    'ї': 'yi',\n    'ґ': 'g',\n    // Romanian\n    'ă': 'a',\n    'Ă': 'A',\n    'ș': 's',\n    'Ș': 'S',\n    // 'ş': 's', // duplicate\n    // 'Ş': 'S', // duplicate\n    'ț': 't',\n    'Ț': 'T',\n    'ţ': 't',\n    'Ţ': 'T',\n    // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\n    // ICAO\n    'а': 'a',\n    'б': 'b',\n    'в': 'v',\n    'г': 'g',\n    'д': 'd',\n    'е': 'e',\n    'ё': 'yo',\n    'ж': 'zh',\n    'з': 'z',\n    'и': 'i',\n    'й': 'i',\n    'к': 'k',\n    'л': 'l',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'p',\n    'р': 'r',\n    'с': 's',\n    'т': 't',\n    'у': 'u',\n    'ф': 'f',\n    'х': 'kh',\n    'ц': 'c',\n    'ч': 'ch',\n    'ш': 'sh',\n    'щ': 'sh',\n    'ъ': '',\n    'ы': 'y',\n    'ь': '',\n    'э': 'e',\n    'ю': 'yu',\n    'я': 'ya',\n    'А': 'A',\n    'Б': 'B',\n    'В': 'V',\n    'Г': 'G',\n    'Д': 'D',\n    'Е': 'E',\n    'Ё': 'Yo',\n    'Ж': 'Zh',\n    'З': 'Z',\n    'И': 'I',\n    'Й': 'I',\n    'К': 'K',\n    'Л': 'L',\n    'М': 'M',\n    'Н': 'N',\n    'О': 'O',\n    'П': 'P',\n    'Р': 'R',\n    'С': 'S',\n    'Т': 'T',\n    'У': 'U',\n    'Ф': 'F',\n    'Х': 'Kh',\n    'Ц': 'C',\n    'Ч': 'Ch',\n    'Ш': 'Sh',\n    'Щ': 'Sh',\n    'Ъ': '',\n    'Ы': 'Y',\n    'Ь': '',\n    'Э': 'E',\n    'Ю': 'Yu',\n    'Я': 'Ya',\n    // Serbian\n    'ђ': 'dj',\n    'ј': 'j',\n    // 'љ': 'lj',  // duplicate\n    // 'њ': 'nj', // duplicate\n    'ћ': 'c',\n    'џ': 'dz',\n    'Ђ': 'Dj',\n    'Ј': 'j',\n    // 'Љ': 'Lj', // duplicate\n    // 'Њ': 'Nj', // duplicate\n    'Ћ': 'C',\n    'Џ': 'Dz',\n    // Slovak\n    'ľ': 'l',\n    'ĺ': 'l',\n    'ŕ': 'r',\n    'Ľ': 'L',\n    'Ĺ': 'L',\n    'Ŕ': 'R',\n    // Turkish\n    'ş': 's',\n    'Ş': 'S',\n    'ı': 'i',\n    'İ': 'I',\n    // 'ç': 'c', // duplicate\n    // 'Ç': 'C', // duplicate\n    // 'ü': 'u', // duplicate, see langCharMap\n    // 'Ü': 'U', // duplicate, see langCharMap\n    // 'ö': 'o', // duplicate, see langCharMap\n    // 'Ö': 'O', // duplicate, see langCharMap\n    'ğ': 'g',\n    'Ğ': 'G',\n    // Vietnamese\n    'ả': 'a',\n    'Ả': 'A',\n    'ẳ': 'a',\n    'Ẳ': 'A',\n    'ẩ': 'a',\n    'Ẩ': 'A',\n    'đ': 'd',\n    'Đ': 'D',\n    'ẹ': 'e',\n    'Ẹ': 'E',\n    'ẽ': 'e',\n    'Ẽ': 'E',\n    'ẻ': 'e',\n    'Ẻ': 'E',\n    'ế': 'e',\n    'Ế': 'E',\n    'ề': 'e',\n    'Ề': 'E',\n    'ệ': 'e',\n    'Ệ': 'E',\n    'ễ': 'e',\n    'Ễ': 'E',\n    'ể': 'e',\n    'Ể': 'E',\n    'ỏ': 'o',\n    'ọ': 'o',\n    'Ọ': 'o',\n    'ố': 'o',\n    'Ố': 'O',\n    'ồ': 'o',\n    'Ồ': 'O',\n    'ổ': 'o',\n    'Ổ': 'O',\n    'ộ': 'o',\n    'Ộ': 'O',\n    'ỗ': 'o',\n    'Ỗ': 'O',\n    'ơ': 'o',\n    'Ơ': 'O',\n    'ớ': 'o',\n    'Ớ': 'O',\n    'ờ': 'o',\n    'Ờ': 'O',\n    'ợ': 'o',\n    'Ợ': 'O',\n    'ỡ': 'o',\n    'Ỡ': 'O',\n    'Ở': 'o',\n    'ở': 'o',\n    'ị': 'i',\n    'Ị': 'I',\n    'ĩ': 'i',\n    'Ĩ': 'I',\n    'ỉ': 'i',\n    'Ỉ': 'i',\n    'ủ': 'u',\n    'Ủ': 'U',\n    'ụ': 'u',\n    'Ụ': 'U',\n    'ũ': 'u',\n    'Ũ': 'U',\n    'ư': 'u',\n    'Ư': 'U',\n    'ứ': 'u',\n    'Ứ': 'U',\n    'ừ': 'u',\n    'Ừ': 'U',\n    'ự': 'u',\n    'Ự': 'U',\n    'ữ': 'u',\n    'Ữ': 'U',\n    'ử': 'u',\n    'Ử': 'ư',\n    'ỷ': 'y',\n    'Ỷ': 'y',\n    'ỳ': 'y',\n    'Ỳ': 'Y',\n    'ỵ': 'y',\n    'Ỵ': 'Y',\n    'ỹ': 'y',\n    'Ỹ': 'Y',\n    'ạ': 'a',\n    'Ạ': 'A',\n    'ấ': 'a',\n    'Ấ': 'A',\n    'ầ': 'a',\n    'Ầ': 'A',\n    'ậ': 'a',\n    'Ậ': 'A',\n    'ẫ': 'a',\n    'Ẫ': 'A',\n    // 'ă': 'a', // duplicate\n    // 'Ă': 'A', // duplicate\n    'ắ': 'a',\n    'Ắ': 'A',\n    'ằ': 'a',\n    'Ằ': 'A',\n    'ặ': 'a',\n    'Ặ': 'A',\n    'ẵ': 'a',\n    'Ẵ': 'A',\n    \"⓪\": \"0\",\n    \"①\": \"1\",\n    \"②\": \"2\",\n    \"③\": \"3\",\n    \"④\": \"4\",\n    \"⑤\": \"5\",\n    \"⑥\": \"6\",\n    \"⑦\": \"7\",\n    \"⑧\": \"8\",\n    \"⑨\": \"9\",\n    \"⑩\": \"10\",\n    \"⑪\": \"11\",\n    \"⑫\": \"12\",\n    \"⑬\": \"13\",\n    \"⑭\": \"14\",\n    \"⑮\": \"15\",\n    \"⑯\": \"16\",\n    \"⑰\": \"17\",\n    \"⑱\": \"18\",\n    \"⑲\": \"18\",\n    \"⑳\": \"18\",\n    \"⓵\": \"1\",\n    \"⓶\": \"2\",\n    \"⓷\": \"3\",\n    \"⓸\": \"4\",\n    \"⓹\": \"5\",\n    \"⓺\": \"6\",\n    \"⓻\": \"7\",\n    \"⓼\": \"8\",\n    \"⓽\": \"9\",\n    \"⓾\": \"10\",\n    \"⓿\": \"0\",\n    \"⓫\": \"11\",\n    \"⓬\": \"12\",\n    \"⓭\": \"13\",\n    \"⓮\": \"14\",\n    \"⓯\": \"15\",\n    \"⓰\": \"16\",\n    \"⓱\": \"17\",\n    \"⓲\": \"18\",\n    \"⓳\": \"19\",\n    \"⓴\": \"20\",\n    \"Ⓐ\": \"A\",\n    \"Ⓑ\": \"B\",\n    \"Ⓒ\": \"C\",\n    \"Ⓓ\": \"D\",\n    \"Ⓔ\": \"E\",\n    \"Ⓕ\": \"F\",\n    \"Ⓖ\": \"G\",\n    \"Ⓗ\": \"H\",\n    \"Ⓘ\": \"I\",\n    \"Ⓙ\": \"J\",\n    \"Ⓚ\": \"K\",\n    \"Ⓛ\": \"L\",\n    \"Ⓜ\": \"M\",\n    \"Ⓝ\": \"N\",\n    \"Ⓞ\": \"O\",\n    \"Ⓟ\": \"P\",\n    \"Ⓠ\": \"Q\",\n    \"Ⓡ\": \"R\",\n    \"Ⓢ\": \"S\",\n    \"Ⓣ\": \"T\",\n    \"Ⓤ\": \"U\",\n    \"Ⓥ\": \"V\",\n    \"Ⓦ\": \"W\",\n    \"Ⓧ\": \"X\",\n    \"Ⓨ\": \"Y\",\n    \"Ⓩ\": \"Z\",\n    \"ⓐ\": \"a\",\n    \"ⓑ\": \"b\",\n    \"ⓒ\": \"c\",\n    \"ⓓ\": \"d\",\n    \"ⓔ\": \"e\",\n    \"ⓕ\": \"f\",\n    \"ⓖ\": \"g\",\n    \"ⓗ\": \"h\",\n    \"ⓘ\": \"i\",\n    \"ⓙ\": \"j\",\n    \"ⓚ\": \"k\",\n    \"ⓛ\": \"l\",\n    \"ⓜ\": \"m\",\n    \"ⓝ\": \"n\",\n    \"ⓞ\": \"o\",\n    \"ⓟ\": \"p\",\n    \"ⓠ\": \"q\",\n    \"ⓡ\": \"r\",\n    \"ⓢ\": \"s\",\n    \"ⓣ\": \"t\",\n    \"ⓤ\": \"u\",\n    \"ⓦ\": \"v\",\n    \"ⓥ\": \"w\",\n    \"ⓧ\": \"x\",\n    \"ⓨ\": \"y\",\n    \"ⓩ\": \"z\",\n    // symbols\n    '“': '\"',\n    '”': '\"',\n    '‘': \"'\",\n    '’': \"'\",\n    '∂': 'd',\n    'ƒ': 'f',\n    '™': '(TM)',\n    '©': '(C)',\n    'œ': 'oe',\n    'Œ': 'OE',\n    '®': '(R)',\n    '†': '+',\n    '℠': '(SM)',\n    '…': '...',\n    '˚': 'o',\n    'º': 'o',\n    'ª': 'a',\n    '•': '*',\n    '၊': ',',\n    '။': '.',\n    // currency\n    '$': 'USD',\n    '€': 'EUR',\n    '₢': 'BRN',\n    '₣': 'FRF',\n    '£': 'GBP',\n    '₤': 'ITL',\n    '₦': 'NGN',\n    '₧': 'ESP',\n    '₩': 'KRW',\n    '₪': 'ILS',\n    '₫': 'VND',\n    '₭': 'LAK',\n    '₮': 'MNT',\n    '₯': 'GRD',\n    '₱': 'ARS',\n    '₲': 'PYG',\n    '₳': 'ARA',\n    '₴': 'UAH',\n    '₵': 'GHS',\n    '¢': 'cent',\n    '¥': 'CNY',\n    '元': 'CNY',\n    '円': 'YEN',\n    '﷼': 'IRR',\n    '₠': 'EWE',\n    '฿': 'THB',\n    '₨': 'INR',\n    '₹': 'INR',\n    '₰': 'PF',\n    '₺': 'TRY',\n    '؋': 'AFN',\n    '₼': 'AZN',\n    'лв': 'BGN',\n    '៛': 'KHR',\n    '₡': 'CRC',\n    '₸': 'KZT',\n    'ден': 'MKD',\n    'zł': 'PLN',\n    '₽': 'RUB',\n    '₾': 'GEL'\n  };\n  /**\n   * special look ahead character array\n   * These characters form with consonants to become 'single'/consonant combo\n   * @type [Array]\n   */\n\n  var lookAheadCharArray = [// burmese\n  '်', // Dhivehi\n  'ް'];\n  /**\n   * diatricMap for languages where transliteration changes entirely as more diatrics are added\n   * @type {Object}\n   */\n\n  var diatricMap = {\n    // Burmese\n    // dependent vowels\n    'ာ': 'a',\n    'ါ': 'a',\n    'ေ': 'e',\n    'ဲ': 'e',\n    'ိ': 'i',\n    'ီ': 'i',\n    'ို': 'o',\n    'ု': 'u',\n    'ူ': 'u',\n    'ေါင်': 'aung',\n    'ော': 'aw',\n    'ော်': 'aw',\n    'ေါ': 'aw',\n    'ေါ်': 'aw',\n    '်': '်',\n    // this is special case but the character will be converted to latin in the code\n    'က်': 'et',\n    'ိုက်': 'aik',\n    'ောက်': 'auk',\n    'င်': 'in',\n    'ိုင်': 'aing',\n    'ောင်': 'aung',\n    'စ်': 'it',\n    'ည်': 'i',\n    'တ်': 'at',\n    'ိတ်': 'eik',\n    'ုတ်': 'ok',\n    'ွတ်': 'ut',\n    'ေတ်': 'it',\n    'ဒ်': 'd',\n    'ိုဒ်': 'ok',\n    'ုဒ်': 'ait',\n    'န်': 'an',\n    'ာန်': 'an',\n    'ိန်': 'ein',\n    'ုန်': 'on',\n    'ွန်': 'un',\n    'ပ်': 'at',\n    'ိပ်': 'eik',\n    'ုပ်': 'ok',\n    'ွပ်': 'ut',\n    'န်ုပ်': 'nub',\n    'မ်': 'an',\n    'ိမ်': 'ein',\n    'ုမ်': 'on',\n    'ွမ်': 'un',\n    'ယ်': 'e',\n    'ိုလ်': 'ol',\n    'ဉ်': 'in',\n    'ံ': 'an',\n    'ိံ': 'ein',\n    'ုံ': 'on',\n    // Dhivehi\n    'ައް': 'ah',\n    'ަށް': 'ah'\n  };\n  /**\n   * langCharMap language specific characters translations\n   * @type   {Object}\n   */\n\n  var langCharMap = {\n    'en': {},\n    // default language\n    'az': {\n      // Azerbaijani\n      'ç': 'c',\n      'ə': 'e',\n      'ğ': 'g',\n      'ı': 'i',\n      'ö': 'o',\n      'ş': 's',\n      'ü': 'u',\n      'Ç': 'C',\n      'Ə': 'E',\n      'Ğ': 'G',\n      'İ': 'I',\n      'Ö': 'O',\n      'Ş': 'S',\n      'Ü': 'U'\n    },\n    'cs': {\n      // Czech\n      'č': 'c',\n      'ď': 'd',\n      'ě': 'e',\n      'ň': 'n',\n      'ř': 'r',\n      'š': 's',\n      'ť': 't',\n      'ů': 'u',\n      'ž': 'z',\n      'Č': 'C',\n      'Ď': 'D',\n      'Ě': 'E',\n      'Ň': 'N',\n      'Ř': 'R',\n      'Š': 'S',\n      'Ť': 'T',\n      'Ů': 'U',\n      'Ž': 'Z'\n    },\n    'fi': {\n      // Finnish\n      // 'å': 'a', duplicate see charMap/latin\n      // 'Å': 'A', duplicate see charMap/latin\n      'ä': 'a',\n      // ok\n      'Ä': 'A',\n      // ok\n      'ö': 'o',\n      // ok\n      'Ö': 'O' // ok\n\n    },\n    'hu': {\n      // Hungarian\n      'ä': 'a',\n      // ok\n      'Ä': 'A',\n      // ok\n      // 'á': 'a', duplicate see charMap/latin\n      // 'Á': 'A', duplicate see charMap/latin\n      'ö': 'o',\n      // ok\n      'Ö': 'O',\n      // ok\n      // 'ő': 'o', duplicate see charMap/latin\n      // 'Ő': 'O', duplicate see charMap/latin\n      'ü': 'u',\n      'Ü': 'U',\n      'ű': 'u',\n      'Ű': 'U'\n    },\n    'lt': {\n      // Lithuanian\n      'ą': 'a',\n      'č': 'c',\n      'ę': 'e',\n      'ė': 'e',\n      'į': 'i',\n      'š': 's',\n      'ų': 'u',\n      'ū': 'u',\n      'ž': 'z',\n      'Ą': 'A',\n      'Č': 'C',\n      'Ę': 'E',\n      'Ė': 'E',\n      'Į': 'I',\n      'Š': 'S',\n      'Ų': 'U',\n      'Ū': 'U'\n    },\n    'lv': {\n      // Latvian\n      'ā': 'a',\n      'č': 'c',\n      'ē': 'e',\n      'ģ': 'g',\n      'ī': 'i',\n      'ķ': 'k',\n      'ļ': 'l',\n      'ņ': 'n',\n      'š': 's',\n      'ū': 'u',\n      'ž': 'z',\n      'Ā': 'A',\n      'Č': 'C',\n      'Ē': 'E',\n      'Ģ': 'G',\n      'Ī': 'i',\n      'Ķ': 'k',\n      'Ļ': 'L',\n      'Ņ': 'N',\n      'Š': 'S',\n      'Ū': 'u',\n      'Ž': 'Z'\n    },\n    'pl': {\n      // Polish\n      'ą': 'a',\n      'ć': 'c',\n      'ę': 'e',\n      'ł': 'l',\n      'ń': 'n',\n      'ó': 'o',\n      'ś': 's',\n      'ź': 'z',\n      'ż': 'z',\n      'Ą': 'A',\n      'Ć': 'C',\n      'Ę': 'e',\n      'Ł': 'L',\n      'Ń': 'N',\n      'Ó': 'O',\n      'Ś': 'S',\n      'Ź': 'Z',\n      'Ż': 'Z'\n    },\n    'sv': {\n      // Swedish\n      // 'å': 'a', duplicate see charMap/latin\n      // 'Å': 'A', duplicate see charMap/latin\n      'ä': 'a',\n      // ok\n      'Ä': 'A',\n      // ok\n      'ö': 'o',\n      // ok\n      'Ö': 'O' // ok\n\n    },\n    'sk': {\n      // Slovak\n      'ä': 'a',\n      'Ä': 'A'\n    },\n    'sr': {\n      // Serbian\n      'љ': 'lj',\n      'њ': 'nj',\n      'Љ': 'Lj',\n      'Њ': 'Nj',\n      'đ': 'dj',\n      'Đ': 'Dj'\n    },\n    'tr': {\n      // Turkish\n      'Ü': 'U',\n      'Ö': 'O',\n      'ü': 'u',\n      'ö': 'o'\n    }\n  };\n  /**\n   * symbolMap language specific symbol translations\n   * translations must be transliterated already\n   * @type   {Object}\n   */\n\n  var symbolMap = {\n    'ar': {\n      '∆': 'delta',\n      '∞': 'la-nihaya',\n      '♥': 'hob',\n      '&': 'wa',\n      '|': 'aw',\n      '<': 'aqal-men',\n      '>': 'akbar-men',\n      '∑': 'majmou',\n      '¤': 'omla'\n    },\n    'az': {},\n    'ca': {\n      '∆': 'delta',\n      '∞': 'infinit',\n      '♥': 'amor',\n      '&': 'i',\n      '|': 'o',\n      '<': 'menys que',\n      '>': 'mes que',\n      '∑': 'suma dels',\n      '¤': 'moneda'\n    },\n    'cs': {\n      '∆': 'delta',\n      '∞': 'nekonecno',\n      '♥': 'laska',\n      '&': 'a',\n      '|': 'nebo',\n      '<': 'mensi nez',\n      '>': 'vetsi nez',\n      '∑': 'soucet',\n      '¤': 'mena'\n    },\n    'de': {\n      '∆': 'delta',\n      '∞': 'unendlich',\n      '♥': 'Liebe',\n      '&': 'und',\n      '|': 'oder',\n      '<': 'kleiner als',\n      '>': 'groesser als',\n      '∑': 'Summe von',\n      '¤': 'Waehrung'\n    },\n    'dv': {\n      '∆': 'delta',\n      '∞': 'kolunulaa',\n      '♥': 'loabi',\n      '&': 'aai',\n      '|': 'noonee',\n      '<': 'ah vure kuda',\n      '>': 'ah vure bodu',\n      '∑': 'jumula',\n      '¤': 'faisaa'\n    },\n    'en': {\n      '∆': 'delta',\n      '∞': 'infinity',\n      '♥': 'love',\n      '&': 'and',\n      '|': 'or',\n      '<': 'less than',\n      '>': 'greater than',\n      '∑': 'sum',\n      '¤': 'currency'\n    },\n    'es': {\n      '∆': 'delta',\n      '∞': 'infinito',\n      '♥': 'amor',\n      '&': 'y',\n      '|': 'u',\n      '<': 'menos que',\n      '>': 'mas que',\n      '∑': 'suma de los',\n      '¤': 'moneda'\n    },\n    'fa': {\n      '∆': 'delta',\n      '∞': 'bi-nahayat',\n      '♥': 'eshgh',\n      '&': 'va',\n      '|': 'ya',\n      '<': 'kamtar-az',\n      '>': 'bishtar-az',\n      '∑': 'majmooe',\n      '¤': 'vahed'\n    },\n    'fi': {\n      '∆': 'delta',\n      '∞': 'aarettomyys',\n      '♥': 'rakkaus',\n      '&': 'ja',\n      '|': 'tai',\n      '<': 'pienempi kuin',\n      '>': 'suurempi kuin',\n      '∑': 'summa',\n      '¤': 'valuutta'\n    },\n    'fr': {\n      '∆': 'delta',\n      '∞': 'infiniment',\n      '♥': 'Amour',\n      '&': 'et',\n      '|': 'ou',\n      '<': 'moins que',\n      '>': 'superieure a',\n      '∑': 'somme des',\n      '¤': 'monnaie'\n    },\n    'ge': {\n      '∆': 'delta',\n      '∞': 'usasruloba',\n      '♥': 'siqvaruli',\n      '&': 'da',\n      '|': 'an',\n      '<': 'naklebi',\n      '>': 'meti',\n      '∑': 'jami',\n      '¤': 'valuta'\n    },\n    'gr': {},\n    'hu': {\n      '∆': 'delta',\n      '∞': 'vegtelen',\n      '♥': 'szerelem',\n      '&': 'es',\n      '|': 'vagy',\n      '<': 'kisebb mint',\n      '>': 'nagyobb mint',\n      '∑': 'szumma',\n      '¤': 'penznem'\n    },\n    'it': {\n      '∆': 'delta',\n      '∞': 'infinito',\n      '♥': 'amore',\n      '&': 'e',\n      '|': 'o',\n      '<': 'minore di',\n      '>': 'maggiore di',\n      '∑': 'somma',\n      '¤': 'moneta'\n    },\n    'lt': {\n      '∆': 'delta',\n      '∞': 'begalybe',\n      '♥': 'meile',\n      '&': 'ir',\n      '|': 'ar',\n      '<': 'maziau nei',\n      '>': 'daugiau nei',\n      '∑': 'suma',\n      '¤': 'valiuta'\n    },\n    'lv': {\n      '∆': 'delta',\n      '∞': 'bezgaliba',\n      '♥': 'milestiba',\n      '&': 'un',\n      '|': 'vai',\n      '<': 'mazak neka',\n      '>': 'lielaks neka',\n      '∑': 'summa',\n      '¤': 'valuta'\n    },\n    'my': {\n      '∆': 'kwahkhyaet',\n      '∞': 'asaonasme',\n      '♥': 'akhyait',\n      '&': 'nhin',\n      '|': 'tho',\n      '<': 'ngethaw',\n      '>': 'kyithaw',\n      '∑': 'paungld',\n      '¤': 'ngwekye'\n    },\n    'mk': {},\n    'nl': {\n      '∆': 'delta',\n      '∞': 'oneindig',\n      '♥': 'liefde',\n      '&': 'en',\n      '|': 'of',\n      '<': 'kleiner dan',\n      '>': 'groter dan',\n      '∑': 'som',\n      '¤': 'valuta'\n    },\n    'pl': {\n      '∆': 'delta',\n      '∞': 'nieskonczonosc',\n      '♥': 'milosc',\n      '&': 'i',\n      '|': 'lub',\n      '<': 'mniejsze niz',\n      '>': 'wieksze niz',\n      '∑': 'suma',\n      '¤': 'waluta'\n    },\n    'pt': {\n      '∆': 'delta',\n      '∞': 'infinito',\n      '♥': 'amor',\n      '&': 'e',\n      '|': 'ou',\n      '<': 'menor que',\n      '>': 'maior que',\n      '∑': 'soma',\n      '¤': 'moeda'\n    },\n    'ro': {\n      '∆': 'delta',\n      '∞': 'infinit',\n      '♥': 'dragoste',\n      '&': 'si',\n      '|': 'sau',\n      '<': 'mai mic ca',\n      '>': 'mai mare ca',\n      '∑': 'suma',\n      '¤': 'valuta'\n    },\n    'ru': {\n      '∆': 'delta',\n      '∞': 'beskonechno',\n      '♥': 'lubov',\n      '&': 'i',\n      '|': 'ili',\n      '<': 'menshe',\n      '>': 'bolshe',\n      '∑': 'summa',\n      '¤': 'valjuta'\n    },\n    'sk': {\n      '∆': 'delta',\n      '∞': 'nekonecno',\n      '♥': 'laska',\n      '&': 'a',\n      '|': 'alebo',\n      '<': 'menej ako',\n      '>': 'viac ako',\n      '∑': 'sucet',\n      '¤': 'mena'\n    },\n    'sr': {},\n    'tr': {\n      '∆': 'delta',\n      '∞': 'sonsuzluk',\n      '♥': 'ask',\n      '&': 've',\n      '|': 'veya',\n      '<': 'kucuktur',\n      '>': 'buyuktur',\n      '∑': 'toplam',\n      '¤': 'para birimi'\n    },\n    'uk': {\n      '∆': 'delta',\n      '∞': 'bezkinechnist',\n      '♥': 'lubov',\n      '&': 'i',\n      '|': 'abo',\n      '<': 'menshe',\n      '>': 'bilshe',\n      '∑': 'suma',\n      '¤': 'valjuta'\n    },\n    'vn': {\n      '∆': 'delta',\n      '∞': 'vo cuc',\n      '♥': 'yeu',\n      '&': 'va',\n      '|': 'hoac',\n      '<': 'nho hon',\n      '>': 'lon hon',\n      '∑': 'tong',\n      '¤': 'tien te'\n    }\n  };\n  var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\n  var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\n  var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\n  /**\n   * getSlug\n   * @param  {string} input input string\n   * @param  {object|string} opts config object or separator string/char\n   * @api    public\n   * @return {string}  sluggified string\n   */\n\n  var getSlug = function getSlug(input, opts) {\n    var separator = '-';\n    var result = '';\n    var diatricString = '';\n    var convertSymbols = true;\n    var customReplacements = {};\n    var maintainCase;\n    var titleCase;\n    var truncate;\n    var uricFlag;\n    var uricNoSlashFlag;\n    var markFlag;\n    var symbol;\n    var langChar;\n    var lucky;\n    var i;\n    var ch;\n    var l;\n    var lastCharWasSymbol;\n    var lastCharWasDiatric;\n    var allowedChars = '';\n\n    if (typeof input !== 'string') {\n      return '';\n    }\n\n    if (typeof opts === 'string') {\n      separator = opts;\n    }\n\n    symbol = symbolMap.en;\n    langChar = langCharMap.en;\n\n    if (typeof opts === 'object') {\n      maintainCase = opts.maintainCase || false;\n      customReplacements = opts.custom && typeof opts.custom === 'object' ? opts.custom : customReplacements;\n      truncate = +opts.truncate > 1 && opts.truncate || false;\n      uricFlag = opts.uric || false;\n      uricNoSlashFlag = opts.uricNoSlash || false;\n      markFlag = opts.mark || false;\n      convertSymbols = opts.symbols === false || opts.lang === false ? false : true;\n      separator = opts.separator || separator;\n\n      if (uricFlag) {\n        allowedChars += uricChars;\n      }\n\n      if (uricNoSlashFlag) {\n        allowedChars += uricNoSlashChars;\n      }\n\n      if (markFlag) {\n        allowedChars += markChars;\n      }\n\n      symbol = opts.lang && symbolMap[opts.lang] && convertSymbols ? symbolMap[opts.lang] : convertSymbols ? symbolMap.en : {};\n      langChar = opts.lang && langCharMap[opts.lang] ? langCharMap[opts.lang] : opts.lang === false || opts.lang === true ? {} : langCharMap.en; // if titleCase config is an Array, rewrite to object format\n\n      if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\n        opts.titleCase.forEach(function (v) {\n          customReplacements[v + ''] = v + '';\n        });\n        titleCase = true;\n      } else {\n        titleCase = !!opts.titleCase;\n      } // if custom config is an Array, rewrite to object format\n\n\n      if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\n        opts.custom.forEach(function (v) {\n          customReplacements[v + ''] = v + '';\n        });\n      } // custom replacements\n\n\n      Object.keys(customReplacements).forEach(function (v) {\n        var r;\n\n        if (v.length > 1) {\n          r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\n        } else {\n          r = new RegExp(escapeChars(v), 'gi');\n        }\n\n        input = input.replace(r, customReplacements[v]);\n      }); // add all custom replacement to allowed charlist\n\n      for (ch in customReplacements) {\n        allowedChars += ch;\n      }\n    }\n\n    allowedChars += separator; // escape all necessary chars\n\n    allowedChars = escapeChars(allowedChars); // trim whitespaces\n\n    input = input.replace(/(^\\s+|\\s+$)/g, '');\n    lastCharWasSymbol = false;\n    lastCharWasDiatric = false;\n\n    for (i = 0, l = input.length; i < l; i++) {\n      ch = input[i];\n\n      if (isReplacedCustomChar(ch, customReplacements)) {\n        // don't convert a already converted char\n        lastCharWasSymbol = false;\n      } else if (langChar[ch]) {\n        // process language specific diactrics chars conversion\n        ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\n        lastCharWasSymbol = false;\n      } else if (ch in charMap) {\n        // the transliteration changes entirely when some special characters are added\n        if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\n          diatricString += ch;\n          ch = '';\n        } else if (lastCharWasDiatric === true) {\n          ch = diatricMap[diatricString] + charMap[ch];\n          diatricString = '';\n        } else {\n          // process diactrics chars\n          ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\n        }\n\n        lastCharWasSymbol = false;\n        lastCharWasDiatric = false;\n      } else if (ch in diatricMap) {\n        diatricString += ch;\n        ch = ''; // end of string, put the whole meaningful word\n\n        if (i === l - 1) {\n          ch = diatricMap[diatricString];\n        }\n\n        lastCharWasDiatric = true;\n      } else if ( // process symbol chars\n      symbol[ch] && !(uricFlag && uricChars.indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars // .indexOf(ch) !== -1) && !(markFlag && markChars\n      .indexOf(ch) !== -1)) {\n        ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\n        ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\n        lastCharWasSymbol = true;\n      } else {\n        if (lastCharWasDiatric === true) {\n          ch = diatricMap[diatricString] + ch;\n          diatricString = '';\n          lastCharWasDiatric = false;\n        } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\n          // process latin chars\n          ch = ' ' + ch;\n        }\n\n        lastCharWasSymbol = false;\n      } // add allowed chars\n\n\n      result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\n    }\n\n    if (titleCase) {\n      result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\n        var j = i.toUpperCase() + (r !== null ? r : '');\n        return Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0 ? j : j.toLowerCase();\n      });\n    } // eliminate duplicate separators\n    // add separator\n    // trim separators from start and end\n\n\n    result = result.replace(/\\s+/g, separator).replace(new RegExp('\\\\' + separator + '+', 'g'), separator).replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\n\n    if (truncate && result.length > truncate) {\n      lucky = result.charAt(truncate) === separator;\n      result = result.slice(0, truncate);\n\n      if (!lucky) {\n        result = result.slice(0, result.lastIndexOf(separator));\n      }\n    }\n\n    if (!maintainCase && !titleCase) {\n      result = result.toLowerCase();\n    }\n\n    return result;\n  };\n  /**\n   * createSlug curried(opts)(input)\n   * @param   {object|string} opts config object or input string\n   * @return  {Function} function getSlugWithConfig()\n   **/\n\n\n  var createSlug = function createSlug(opts) {\n    /**\n     * getSlugWithConfig\n     * @param   {string} input string\n     * @return  {string} slug string\n     */\n    return function getSlugWithConfig(input) {\n      return getSlug(input, opts);\n    };\n  };\n  /**\n   * escape Chars\n   * @param   {string} input string\n   */\n\n\n  var escapeChars = function escapeChars(input) {\n    return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n  };\n  /**\n   * check if the char is an already converted char from custom list\n   * @param   {char} ch character to check\n   * @param   {object} customReplacements custom translation map\n   */\n\n\n  var isReplacedCustomChar = function isReplacedCustomChar(ch, customReplacements) {\n    for (var c in customReplacements) {\n      if (customReplacements[c] === ch) {\n        return true;\n      }\n    }\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    // export functions for use in Node\n    module.exports = getSlug;\n    module.exports.createSlug = createSlug;\n  } else if (typeof define !== 'undefined' && define.amd) {\n    // export function for use in AMD\n    define([], function () {\n      return getSlug;\n    });\n  } else {\n    // don't overwrite global if exists\n    try {\n      if (root.getSlug || root.createSlug) {\n        throw 'speakingurl: globals exists /(getSlug|createSlug)/';\n      } else {\n        root.getSlug = getSlug;\n        root.createSlug = createSlug;\n      }\n    } catch (e) {}\n  }\n})(this);","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/node_modules/speakingurl/lib/speakingurl.js"],"names":["root","charMap","lookAheadCharArray","diatricMap","langCharMap","symbolMap","uricChars","join","uricNoSlashChars","markChars","getSlug","input","opts","separator","result","diatricString","convertSymbols","customReplacements","maintainCase","titleCase","truncate","uricFlag","uricNoSlashFlag","markFlag","symbol","langChar","lucky","i","ch","l","lastCharWasSymbol","lastCharWasDiatric","allowedChars","en","custom","uric","uricNoSlash","mark","symbols","lang","length","Array","prototype","toString","call","forEach","v","Object","keys","r","RegExp","escapeChars","replace","isReplacedCustomChar","match","indexOf","substr","test","_","j","toUpperCase","toLowerCase","charAt","slice","lastIndexOf","createSlug","getSlugWithConfig","c","module","exports","define","amd","e"],"mappings":"AAAA,CAAC,UAAUA,IAAV,EAAgB;AACb;AAEA;AACJ;AACA;AACA;;AACI,MAAIC,OAAO,GAAG;AAEV;AACA,SAAK,GAHK;AAIV,SAAK,GAJK;AAKV,SAAK,GALK;AAMV,SAAK,GANK;AAOV,SAAK,IAPK;AAQV,SAAK,GARK;AASV,SAAK,IATK;AAUV,SAAK,GAVK;AAWV,SAAK,GAXK;AAYV,SAAK,GAZK;AAaV,SAAK,GAbK;AAcV,SAAK,GAdK;AAeV,SAAK,GAfK;AAgBV,SAAK,GAhBK;AAiBV,SAAK,GAjBK;AAkBV,SAAK,GAlBK;AAmBV,SAAK,GAnBK;AAoBV,SAAK,GApBK;AAqBV,SAAK,GArBK;AAsBV,SAAK,GAtBK;AAuBV,SAAK,GAvBK;AAwBV,SAAK,GAxBK;AAyBV,SAAK,IAzBK;AA0BV,SAAK,GA1BK;AA2BV,SAAK,GA3BK;AA4BV,SAAK,GA5BK;AA6BV,SAAK,GA7BK;AA8BV,SAAK,GA9BK;AA+BV,SAAK,IA/BK;AAgCV,SAAK,GAhCK;AAiCV,SAAK,GAjCK;AAkCV,SAAK,IAlCK;AAmCV,SAAK,IAnCK;AAoCV,SAAK,GApCK;AAqCV,SAAK,GArCK;AAsCV,SAAK,GAtCK;AAuCV,SAAK,GAvCK;AAwCV,SAAK,IAxCK;AAyCV,SAAK,GAzCK;AA0CV,SAAK,IA1CK;AA2CV,SAAK,GA3CK;AA4CV,SAAK,GA5CK;AA6CV,SAAK,GA7CK;AA8CV,SAAK,GA9CK;AA+CV,SAAK,GA/CK;AAgDV,SAAK,GAhDK;AAiDV,SAAK,GAjDK;AAkDV,SAAK,GAlDK;AAmDV,SAAK,GAnDK;AAoDV,SAAK,GApDK;AAqDV,SAAK,GArDK;AAsDV,SAAK,GAtDK;AAuDV,SAAK,GAvDK;AAwDV,SAAK,GAxDK;AAyDV,SAAK,GAzDK;AA0DV,SAAK,IA1DK;AA2DV,SAAK,GA3DK;AA4DV,SAAK,GA5DK;AA6DV,SAAK,GA7DK;AA8DV,SAAK,GA9DK;AA+DV,SAAK,GA/DK;AAgEV,SAAK,IAhEK;AAiEV,SAAK,GAjEK;AAkEV,SAAK,GAlEK;AAmEV,SAAK,IAnEK;AAoEV,SAAK,GApEK;AAqEV,SAAK,IArEK;AAuEV;AAEA;AACA,SAAK,GA1EK;AA2EV,SAAK,GA3EK;AA4EV,SAAK,GA5EK;AA6EV,SAAK,IA7EK;AA8EV,SAAK,GA9EK;AA+EV,SAAK,GA/EK;AAgFV,SAAK,GAhFK;AAiFV,SAAK,GAjFK;AAkFV,SAAK,GAlFK;AAmFV,SAAK,IAnFK;AAoFV,SAAK,GApFK;AAqFV,SAAK,GArFK;AAsFV,SAAK,IAtFK;AAuFV,SAAK,GAvFK;AAwFV,SAAK,IAxFK;AAyFV,SAAK,GAzFK;AA0FV,SAAK,GA1FK;AA2FV,SAAK,GA3FK;AA4FV,SAAK,IA5FK;AA6FV,SAAK,GA7FK;AA8FV,SAAK,IA9FK;AA+FV,SAAK,GA/FK;AAgGV,SAAK,GAhGK;AAiGV,SAAK,GAjGK;AAkGV,SAAK,IAlGK;AAmGV,SAAK,GAnGK;AAoGV,SAAK,GApGK;AAqGV,SAAK,GArGK;AAsGV,SAAK,GAtGK;AAuGV,SAAK,GAvGK;AAwGV,SAAK,GAxGK;AAyGV,SAAK,GAzGK;AA0GV,SAAK,GA1GK;AA2GV,SAAK,GA3GK;AA4GV,SAAK,GA5GK;AA6GV,SAAK,GA7GK;AA8GV,SAAK,IA9GK;AA+GV,SAAK,KA/GK;AAgHV,SAAK,KAhHK;AAiHV,SAAK,KAjHK;AAmHV;AACA,SAAK,GApHK;AAqHV,SAAK,IArHK;AAsHV,SAAK,GAtHK;AAuHV,SAAK,IAvHK;AAwHV,SAAK,GAxHK;AAyHV,SAAK,GAzHK;AA2HV;AACA,SAAK,GA5HK;AA6HV,SAAK,IA7HK;AA8HV,SAAK,GA9HK;AA+HV,SAAK,IA/HK;AAgIV,SAAK,GAhIK;AAiIV,SAAK,IAjIK;AAkIV,SAAK,EAlIK;AAoIV;AACA,SAAK,GArIK;AAsIV,SAAK,GAtIK;AAuIV,SAAK,GAvIK;AAwIV,SAAK,GAxIK;AAyIV,SAAK,GAzIK;AA0IV,SAAK,GA1IK;AA2IV,SAAK,GA3IK;AA4IV,SAAK,GA5IK;AA6IV,SAAK,GA7IK;AA8IV,SAAK,GA9IK;AAgJV;AACA,SAAK,GAjJK;AAkJV,SAAK,GAlJK;AAmJV,SAAK,GAnJK;AAoJV,SAAK,GApJK;AAqJV,SAAK,GArJK;AAsJV,SAAK,GAtJK;AAuJV,SAAK,GAvJK;AAwJV,SAAK,GAxJK;AAyJV,SAAK,GAzJK;AA0JV,SAAK,GA1JK;AA4JV;AACA,SAAK,GA7JK;AA8JV,SAAK,IA9JK;AA+JV,SAAK,GA/JK;AAgKV,SAAK,IAhKK;AAiKV,SAAK,IAjKK;AAkKV,SAAK,GAlKK;AAmKV,SAAK,IAnKK;AAoKV,SAAK,GApKK;AAqKV,UAAM,IArKI;AAsKV,SAAK,IAtKK;AAuKV,SAAK,GAvKK;AAwKV,SAAK,IAxKK;AAyKV,SAAK,GAzKK;AA0KV,SAAK,IA1KK;AA2KV,SAAK,IA3KK;AA4KV,SAAK,GA5KK;AA6KV,SAAK,IA7KK;AA8KV,SAAK,GA9KK;AA+KV,SAAK,IA/KK;AAgLV,SAAK,GAhLK;AAiLV,SAAK,GAjLK;AAkLV,SAAK,IAlLK;AAmLV,SAAK,GAnLK;AAoLV,SAAK,IApLK;AAqLV,SAAK,GArLK;AAsLV,SAAK,GAtLK;AAuLV,SAAK,IAvLK;AAwLV,SAAK,GAxLK;AAyLV,SAAK,GAzLK;AA0LV,SAAK,IA1LK;AA2LV,SAAK,GA3LK;AA4LV,SAAK,IA5LK;AA6LV,SAAK,GA7LK;AA8LV;AACA,SAAK,GA/LK;AAgMV,SAAK,IAhMK;AAiMV,SAAK,GAjMK;AAkMV,UAAM,IAlMI;AAmMV,UAAM,KAnMI;AAoMV,SAAK,GApMK;AAqMV;AACA,SAAK,GAtMK;AAuMV,SAAK,IAvMK;AAwMV,SAAK,GAxMK;AAyMV,SAAK,IAzMK;AA0MV,SAAK,GA1MK;AA2MV,SAAK,IA3MK;AA4MV,SAAK,IA5MK;AA6MV,YAAQ,IA7ME;AA8MV,SAAK,IA9MK;AA+MV;AACA,SAAK,GAhNK;AAiNV,SAAK,GAjNK;AAkNV,SAAK,GAlNK;AAmNV,SAAK,GAnNK;AAoNV,SAAK,GApNK;AAqNV,SAAK,GArNK;AAsNV,SAAK,GAtNK;AAuNV,SAAK,GAvNK;AAwNV,SAAK,GAxNK;AAyNV,SAAK,GAzNK;AA0NV;AACA,SAAK,EA3NK;AA4NV,SAAK,EA5NK;AA6NV,SAAK,EA7NK;AA+NV;AACA,SAAK,GAhOK;AAiOV,SAAK,GAjOK;AAkOV,SAAK,GAlOK;AAmOV,SAAK,GAnOK;AAoOV,SAAK,GApOK;AAqOV,SAAK,GArOK;AAsOV,SAAK,GAtOK;AAuOV,SAAK,GAvOK;AAwOV,SAAK,GAxOK;AAyOV,SAAK,GAzOK;AA0OV,SAAK,GA1OK;AA2OV,SAAK,GA3OK;AA4OV,SAAK,GA5OK;AA6OV,SAAK,GA7OK;AA8OV,SAAK,GA9OK;AA+OV,SAAK,GA/OK;AAgPV,SAAK,GAhPK;AAiPV,SAAK,GAjPK;AAmPV;AACA,SAAK,GApPK;AAqPV,SAAK,IArPK;AAsPV,SAAK,GAtPK;AAuPV,SAAK,GAvPK;AAwPV,SAAK,GAxPK;AAyPV,SAAK,IAzPK;AA0PV,SAAK,GA1PK;AA2PV,SAAK,GA3PK;AA4PV,SAAK,GA5PK;AA6PV,SAAK,GA7PK;AA8PV,SAAK,GA9PK;AA+PV,SAAK,IA/PK;AAgQV,SAAK,IAhQK;AAiQV,SAAK,GAjQK;AAkQV,SAAK,GAlQK;AAmQV,SAAK,IAnQK;AAoQV,SAAK,GApQK;AAqQV,SAAK,GArQK;AAsQV,SAAK,GAtQK;AAuQV,SAAK,GAvQK;AAwQV,SAAK,GAxQK;AAyQV,SAAK,GAzQK;AA0QV,SAAK,GA1QK;AA2QV,SAAK,IA3QK;AA4QV,SAAK,IA5QK;AA6QV,SAAK,IA7QK;AA8QV,SAAK,IA9QK;AA+QV,SAAK,IA/QK;AAgRV,SAAK,GAhRK;AAiRV,SAAK,IAjRK;AAkRV,SAAK,GAlRK;AAmRV,SAAK,GAnRK;AAoRV,SAAK,GApRK;AAqRV,SAAK,GArRK;AAsRV,SAAK,GAtRK;AAuRV,SAAK,IAvRK;AAwRV,SAAK,GAxRK;AAyRV,SAAK,GAzRK;AA0RV,SAAK,GA1RK;AA2RV,SAAK,IA3RK;AA4RV,SAAK,GA5RK;AA6RV,SAAK,IA7RK;AA8RV,SAAK,GA9RK;AA+RV,SAAK,IA/RK;AAgSV,SAAK,GAhSK;AAiSV,SAAK,IAjSK;AAkSV,SAAK,GAlSK;AAmSV,SAAK,IAnSK;AAoSV,SAAK,EApSK;AAsSV;AACA;AACA,SAAK,GAxSK;AAySV,SAAK,GAzSK;AA0SV,SAAK,GA1SK;AA2SV,SAAK,GA3SK;AA4SV,SAAK,GA5SK;AA6SV,SAAK,GA7SK;AA8SV,SAAK,GA9SK;AA+SV,SAAK,GA/SK;AAgTV,SAAK,GAhTK;AAiTV,SAAK,GAjTK;AAkTV,SAAK,GAlTK;AAmTV,SAAK,GAnTK;AAoTV,SAAK,GApTK;AAqTV,SAAK,GArTK;AAsTV,SAAK,GAtTK;AAuTV,SAAK,IAvTK;AAwTV,SAAK,GAxTK;AAyTV,SAAK,GAzTK;AA0TV,SAAK,GA1TK;AA2TV,SAAK,GA3TK;AA4TV,SAAK,GA5TK;AA6TV,SAAK,GA7TK;AA8TV,SAAK,IA9TK;AA+TV,SAAK,GA/TK;AAgUV,SAAK,IAhUK;AAiUV,SAAK,IAjUK;AAkUV,SAAK,IAlUK;AAmUV,SAAK,IAnUK;AAoUV,SAAK,IApUK;AAqUV,SAAK,IArUK;AAsUV,SAAK,IAtUK;AAuUV,SAAK,GAvUK;AAwUV,SAAK,GAxUK;AA0UV;AACA,SAAK,GA3UK;AA4UV,SAAK,GA5UK;AA6UV,SAAK,GA7UK;AA8UV,SAAK,GA9UK;AA+UV,SAAK,GA/UK;AAgVV,SAAK,GAhVK;AAiVV,SAAK,GAjVK;AAkVV,SAAK,IAlVK;AAmVV,SAAK,GAnVK;AAoVV,SAAK,GApVK;AAqVV,SAAK,GArVK;AAsVV,SAAK,GAtVK;AAuVV,SAAK,GAvVK;AAwVV,SAAK,IAxVK;AAyVV,SAAK,GAzVK;AA0VV,SAAK,GA1VK;AA2VV,SAAK,GA3VK;AA4VV,SAAK,GA5VK;AA6VV,SAAK,GA7VK;AA8VV,SAAK,GA9VK;AA+VV,SAAK,GA/VK;AAgWV,SAAK,GAhWK;AAiWV,SAAK,IAjWK;AAkWV,SAAK,GAlWK;AAmWV,SAAK,GAnWK;AAoWV,SAAK,GApWK;AAqWV,SAAK,GArWK;AAsWV,SAAK,GAtWK;AAuWV,SAAK,GAvWK;AAwWV,SAAK,GAxWK;AAyWV,SAAK,GAzWK;AA0WV,SAAK,GA1WK;AA2WV,SAAK,GA3WK;AA4WV,SAAK,GA5WK;AA6WV,SAAK,GA7WK;AA8WV,SAAK,GA9WK;AA+WV,SAAK,GA/WK;AAgXV,SAAK,GAhXK;AAiXV,SAAK,GAjXK;AAkXV,SAAK,GAlXK;AAmXV,SAAK,GAnXK;AAoXV,SAAK,GApXK;AAqXV,SAAK,GArXK;AAsXV,SAAK,IAtXK;AAuXV,SAAK,GAvXK;AAwXV,SAAK,GAxXK;AAyXV,SAAK,GAzXK;AA0XV,SAAK,GA1XK;AA2XV,SAAK,GA3XK;AA4XV,SAAK,IA5XK;AA6XV,SAAK,GA7XK;AA8XV,SAAK,GA9XK;AA+XV,SAAK,GA/XK;AAgYV,SAAK,GAhYK;AAiYV,SAAK,GAjYK;AAkYV,SAAK,GAlYK;AAmYV,SAAK,GAnYK;AAoYV,SAAK,GApYK;AAqYV,SAAK,IArYK;AAsYV,SAAK,GAtYK;AAuYV,SAAK,GAvYK;AAwYV,SAAK,GAxYK;AAyYV,SAAK,GAzYK;AA0YV,SAAK,GA1YK;AA2YV,SAAK,GA3YK;AA4YV,SAAK,GA5YK;AA6YV,SAAK,GA7YK;AA8YV,SAAK,GA9YK;AA+YV,SAAK,GA/YK;AAiZV;AACA,SAAK,GAlZK;AAmZV;AACA,SAAK,GApZK;AAqZV,SAAK,GArZK;AAsZV,SAAK,GAtZK;AAuZV,SAAK,GAvZK;AAwZV,SAAK,GAxZK;AAyZV,SAAK,GAzZK;AA0ZV;AACA,SAAK,GA3ZK;AA4ZV;AACA,SAAK,GA7ZK;AA8ZV;AACA,SAAK,GA/ZK;AAgaV,SAAK,GAhaK;AAiaV,SAAK,GAjaK;AAkaV,SAAK,GAlaK;AAmaV,SAAK,GAnaK;AAoaV,SAAK,GApaK;AAqaV;AACA,SAAK,GAtaK;AAuaV;AAEA;AACA,SAAK,IA1aK;AA2aV,SAAK,IA3aK;AA4aV,SAAK,IA5aK;AA6aV,SAAK,IA7aK;AA8aV,SAAK,IA9aK;AA+aV,SAAK,IA/aK;AAgbV,UAAM,IAhbI;AAibV,UAAM,IAjbI;AAmbV;AACA,SAAK,GApbK;AAqbV,SAAK,GArbK;AAsbV,SAAK,GAtbK;AAubV,SAAK,GAvbK;AAwbV,SAAK,GAxbK;AAybV;AACA,SAAK,GA1bK;AA2bV,SAAK,GA3bK;AA4bV,SAAK,GA5bK;AA6bV,SAAK,GA7bK;AA8bV,SAAK,GA9bK;AA+bV,SAAK,GA/bK;AAgcV,SAAK,GAhcK;AAicV,SAAK,GAjcK;AAkcV,SAAK,GAlcK;AAmcV,SAAK,GAncK;AAocV,SAAK,GApcK;AAscV;AACA,SAAK,IAvcK;AAwcV,SAAK,GAxcK;AAycV,SAAK,IAzcK;AA0cV,SAAK,GA1cK;AA2cV,SAAK,IA3cK;AA4cV,SAAK,GA5cK;AA6cV,SAAK,IA7cK;AA8cV,SAAK,GA9cK;AAgdV;AACA,SAAK,GAjdK;AAkdV,SAAK,GAldK;AAmdV,SAAK,GAndK;AAodV,SAAK,GApdK;AAqdV;AACA;AACA,SAAK,GAvdK;AAwdV,SAAK,GAxdK;AAydV,SAAK,GAzdK;AA0dV,SAAK,GA1dK;AA4dV;AACA;AAEA,SAAK,GA/dK;AAgeV,SAAK,GAheK;AAieV,SAAK,GAjeK;AAkeV,SAAK,GAleK;AAmeV,SAAK,GAneK;AAoeV,SAAK,GApeK;AAqeV,SAAK,IAreK;AAseV,SAAK,IAteK;AAueV,SAAK,GAveK;AAweV,SAAK,GAxeK;AAyeV,SAAK,GAzeK;AA0eV,SAAK,GA1eK;AA2eV,SAAK,GA3eK;AA4eV,SAAK,GA5eK;AA6eV,SAAK,GA7eK;AA8eV,SAAK,GA9eK;AA+eV,SAAK,GA/eK;AAgfV,SAAK,GAhfK;AAifV,SAAK,GAjfK;AAkfV,SAAK,GAlfK;AAmfV,SAAK,GAnfK;AAofV,SAAK,GApfK;AAqfV,SAAK,IArfK;AAsfV,SAAK,GAtfK;AAufV,SAAK,IAvfK;AAwfV,SAAK,IAxfK;AAyfV,SAAK,IAzfK;AA0fV,SAAK,EA1fK;AA2fV,SAAK,GA3fK;AA4fV,SAAK,EA5fK;AA6fV,SAAK,GA7fK;AA8fV,SAAK,IA9fK;AA+fV,SAAK,IA/fK;AAggBV,SAAK,GAhgBK;AAigBV,SAAK,GAjgBK;AAkgBV,SAAK,GAlgBK;AAmgBV,SAAK,GAngBK;AAogBV,SAAK,GApgBK;AAqgBV,SAAK,GArgBK;AAsgBV,SAAK,IAtgBK;AAugBV,SAAK,IAvgBK;AAwgBV,SAAK,GAxgBK;AAygBV,SAAK,GAzgBK;AA0gBV,SAAK,GA1gBK;AA2gBV,SAAK,GA3gBK;AA4gBV,SAAK,GA5gBK;AA6gBV,SAAK,GA7gBK;AA8gBV,SAAK,GA9gBK;AA+gBV,SAAK,GA/gBK;AAghBV,SAAK,GAhhBK;AAihBV,SAAK,GAjhBK;AAkhBV,SAAK,GAlhBK;AAmhBV,SAAK,GAnhBK;AAohBV,SAAK,GAphBK;AAqhBV,SAAK,GArhBK;AAshBV,SAAK,IAthBK;AAuhBV,SAAK,GAvhBK;AAwhBV,SAAK,IAxhBK;AAyhBV,SAAK,IAzhBK;AA0hBV,SAAK,IA1hBK;AA2hBV,SAAK,EA3hBK;AA4hBV,SAAK,GA5hBK;AA6hBV,SAAK,EA7hBK;AA8hBV,SAAK,GA9hBK;AA+hBV,SAAK,IA/hBK;AAgiBV,SAAK,IAhiBK;AAkiBV;AACA,SAAK,IAniBK;AAoiBV,SAAK,GApiBK;AAqiBV;AACA;AACA,SAAK,GAviBK;AAwiBV,SAAK,IAxiBK;AAyiBV,SAAK,IAziBK;AA0iBV,SAAK,GA1iBK;AA2iBV;AACA;AACA,SAAK,GA7iBK;AA8iBV,SAAK,IA9iBK;AAgjBV;AACA,SAAK,GAjjBK;AAkjBV,SAAK,GAljBK;AAmjBV,SAAK,GAnjBK;AAojBV,SAAK,GApjBK;AAqjBV,SAAK,GArjBK;AAsjBV,SAAK,GAtjBK;AAwjBV;AACA,SAAK,GAzjBK;AA0jBV,SAAK,GA1jBK;AA2jBV,SAAK,GA3jBK;AA4jBV,SAAK,GA5jBK;AA6jBV;AACA;AACA;AACA;AACA;AACA;AACA,SAAK,GAnkBK;AAokBV,SAAK,GApkBK;AAskBV;AACA,SAAK,GAvkBK;AAwkBV,SAAK,GAxkBK;AAykBV,SAAK,GAzkBK;AA0kBV,SAAK,GA1kBK;AA2kBV,SAAK,GA3kBK;AA4kBV,SAAK,GA5kBK;AA6kBV,SAAK,GA7kBK;AA8kBV,SAAK,GA9kBK;AA+kBV,SAAK,GA/kBK;AAglBV,SAAK,GAhlBK;AAilBV,SAAK,GAjlBK;AAklBV,SAAK,GAllBK;AAmlBV,SAAK,GAnlBK;AAolBV,SAAK,GAplBK;AAqlBV,SAAK,GArlBK;AAslBV,SAAK,GAtlBK;AAulBV,SAAK,GAvlBK;AAwlBV,SAAK,GAxlBK;AAylBV,SAAK,GAzlBK;AA0lBV,SAAK,GA1lBK;AA2lBV,SAAK,GA3lBK;AA4lBV,SAAK,GA5lBK;AA6lBV,SAAK,GA7lBK;AA8lBV,SAAK,GA9lBK;AA+lBV,SAAK,GA/lBK;AAgmBV,SAAK,GAhmBK;AAimBV,SAAK,GAjmBK;AAkmBV,SAAK,GAlmBK;AAmmBV,SAAK,GAnmBK;AAomBV,SAAK,GApmBK;AAqmBV,SAAK,GArmBK;AAsmBV,SAAK,GAtmBK;AAumBV,SAAK,GAvmBK;AAwmBV,SAAK,GAxmBK;AAymBV,SAAK,GAzmBK;AA0mBV,SAAK,GA1mBK;AA2mBV,SAAK,GA3mBK;AA4mBV,SAAK,GA5mBK;AA6mBV,SAAK,GA7mBK;AA8mBV,SAAK,GA9mBK;AA+mBV,SAAK,GA/mBK;AAgnBV,SAAK,GAhnBK;AAinBV,SAAK,GAjnBK;AAknBV,SAAK,GAlnBK;AAmnBV,SAAK,GAnnBK;AAonBV,SAAK,GApnBK;AAqnBV,SAAK,GArnBK;AAsnBV,SAAK,GAtnBK;AAunBV,SAAK,GAvnBK;AAwnBV,SAAK,GAxnBK;AAynBV,SAAK,GAznBK;AA0nBV,SAAK,GA1nBK;AA2nBV,SAAK,GA3nBK;AA4nBV,SAAK,GA5nBK;AA6nBV,SAAK,GA7nBK;AA8nBV,SAAK,GA9nBK;AA+nBV,SAAK,GA/nBK;AAgoBV,SAAK,GAhoBK;AAioBV,SAAK,GAjoBK;AAkoBV,SAAK,GAloBK;AAmoBV,SAAK,GAnoBK;AAooBV,SAAK,GApoBK;AAqoBV,SAAK,GAroBK;AAsoBV,SAAK,GAtoBK;AAuoBV,SAAK,GAvoBK;AAwoBV,SAAK,GAxoBK;AAyoBV,SAAK,GAzoBK;AA0oBV,SAAK,GA1oBK;AA2oBV,SAAK,GA3oBK;AA4oBV,SAAK,GA5oBK;AA6oBV,SAAK,GA7oBK;AA8oBV,SAAK,GA9oBK;AA+oBV,SAAK,GA/oBK;AAgpBV,SAAK,GAhpBK;AAipBV,SAAK,GAjpBK;AAkpBV,SAAK,GAlpBK;AAmpBV,SAAK,GAnpBK;AAopBV,SAAK,GAppBK;AAqpBV,SAAK,GArpBK;AAspBV,SAAK,GAtpBK;AAupBV,SAAK,GAvpBK;AAwpBV,SAAK,GAxpBK;AAypBV,SAAK,GAzpBK;AA0pBV,SAAK,GA1pBK;AA2pBV,SAAK,GA3pBK;AA4pBV,SAAK,GA5pBK;AA6pBV,SAAK,GA7pBK;AA8pBV,SAAK,GA9pBK;AA+pBV,SAAK,GA/pBK;AAgqBV,SAAK,GAhqBK;AAiqBV,SAAK,GAjqBK;AAkqBV;AACA;AACA,SAAK,GApqBK;AAqqBV,SAAK,GArqBK;AAsqBV,SAAK,GAtqBK;AAuqBV,SAAK,GAvqBK;AAwqBV,SAAK,GAxqBK;AAyqBV,SAAK,GAzqBK;AA0qBV,SAAK,GA1qBK;AA2qBV,SAAK,GA3qBK;AA4qBV,SAAK,GA5qBK;AA6qBV,SAAK,GA7qBK;AA8qBV,SAAK,GA9qBK;AA+qBV,SAAK,GA/qBK;AAgrBV,SAAK,GAhrBK;AAirBV,SAAK,GAjrBK;AAkrBV,SAAK,GAlrBK;AAmrBV,SAAK,GAnrBK;AAorBV,SAAK,GAprBK;AAqrBV,SAAK,GArrBK;AAsrBV,SAAK,IAtrBK;AAurBV,SAAK,IAvrBK;AAwrBV,SAAK,IAxrBK;AAyrBV,SAAK,IAzrBK;AA0rBV,SAAK,IA1rBK;AA2rBV,SAAK,IA3rBK;AA4rBV,SAAK,IA5rBK;AA6rBV,SAAK,IA7rBK;AA8rBV,SAAK,IA9rBK;AA+rBV,SAAK,IA/rBK;AAgsBV,SAAK,IAhsBK;AAksBV,SAAK,GAlsBK;AAmsBV,SAAK,GAnsBK;AAosBV,SAAK,GApsBK;AAqsBV,SAAK,GArsBK;AAssBV,SAAK,GAtsBK;AAusBV,SAAK,GAvsBK;AAwsBV,SAAK,GAxsBK;AAysBV,SAAK,GAzsBK;AA0sBV,SAAK,GA1sBK;AA2sBV,SAAK,IA3sBK;AA6sBV,SAAK,GA7sBK;AA8sBV,SAAK,IA9sBK;AA+sBV,SAAK,IA/sBK;AAgtBV,SAAK,IAhtBK;AAitBV,SAAK,IAjtBK;AAktBV,SAAK,IAltBK;AAmtBV,SAAK,IAntBK;AAotBV,SAAK,IAptBK;AAqtBV,SAAK,IArtBK;AAstBV,SAAK,IAttBK;AAutBV,SAAK,IAvtBK;AAytBV,SAAK,GAztBK;AA0tBV,SAAK,GA1tBK;AA2tBV,SAAK,GA3tBK;AA4tBV,SAAK,GA5tBK;AA6tBV,SAAK,GA7tBK;AA8tBV,SAAK,GA9tBK;AA+tBV,SAAK,GA/tBK;AAguBV,SAAK,GAhuBK;AAiuBV,SAAK,GAjuBK;AAkuBV,SAAK,GAluBK;AAmuBV,SAAK,GAnuBK;AAouBV,SAAK,GApuBK;AAquBV,SAAK,GAruBK;AAsuBV,SAAK,GAtuBK;AAuuBV,SAAK,GAvuBK;AAwuBV,SAAK,GAxuBK;AAyuBV,SAAK,GAzuBK;AA0uBV,SAAK,GA1uBK;AA2uBV,SAAK,GA3uBK;AA4uBV,SAAK,GA5uBK;AA6uBV,SAAK,GA7uBK;AA8uBV,SAAK,GA9uBK;AA+uBV,SAAK,GA/uBK;AAgvBV,SAAK,GAhvBK;AAivBV,SAAK,GAjvBK;AAkvBV,SAAK,GAlvBK;AAovBV,SAAK,GApvBK;AAqvBV,SAAK,GArvBK;AAsvBV,SAAK,GAtvBK;AAuvBV,SAAK,GAvvBK;AAwvBV,SAAK,GAxvBK;AAyvBV,SAAK,GAzvBK;AA0vBV,SAAK,GA1vBK;AA2vBV,SAAK,GA3vBK;AA4vBV,SAAK,GA5vBK;AA6vBV,SAAK,GA7vBK;AA8vBV,SAAK,GA9vBK;AA+vBV,SAAK,GA/vBK;AAgwBV,SAAK,GAhwBK;AAiwBV,SAAK,GAjwBK;AAkwBV,SAAK,GAlwBK;AAmwBV,SAAK,GAnwBK;AAowBV,SAAK,GApwBK;AAqwBV,SAAK,GArwBK;AAswBV,SAAK,GAtwBK;AAuwBV,SAAK,GAvwBK;AAwwBV,SAAK,GAxwBK;AAywBV,SAAK,GAzwBK;AA0wBV,SAAK,GA1wBK;AA2wBV,SAAK,GA3wBK;AA4wBV,SAAK,GA5wBK;AA6wBV,SAAK,GA7wBK;AA+wBV;AACA,SAAK,GAhxBK;AAixBV,SAAK,GAjxBK;AAkxBV,SAAK,GAlxBK;AAmxBV,SAAK,GAnxBK;AAoxBV,SAAK,GApxBK;AAqxBV,SAAK,GArxBK;AAsxBV,SAAK,MAtxBK;AAuxBV,SAAK,KAvxBK;AAwxBV,SAAK,IAxxBK;AAyxBV,SAAK,IAzxBK;AA0xBV,SAAK,KA1xBK;AA2xBV,SAAK,GA3xBK;AA4xBV,SAAK,MA5xBK;AA6xBV,SAAK,KA7xBK;AA8xBV,SAAK,GA9xBK;AA+xBV,SAAK,GA/xBK;AAgyBV,SAAK,GAhyBK;AAiyBV,SAAK,GAjyBK;AAkyBV,SAAK,GAlyBK;AAmyBV,SAAK,GAnyBK;AAqyBV;AACA,SAAK,KAtyBK;AAuyBV,SAAK,KAvyBK;AAwyBV,SAAK,KAxyBK;AAyyBV,SAAK,KAzyBK;AA0yBV,SAAK,KA1yBK;AA2yBV,SAAK,KA3yBK;AA4yBV,SAAK,KA5yBK;AA6yBV,SAAK,KA7yBK;AA8yBV,SAAK,KA9yBK;AA+yBV,SAAK,KA/yBK;AAgzBV,SAAK,KAhzBK;AAizBV,SAAK,KAjzBK;AAkzBV,SAAK,KAlzBK;AAmzBV,SAAK,KAnzBK;AAozBV,SAAK,KApzBK;AAqzBV,SAAK,KArzBK;AAszBV,SAAK,KAtzBK;AAuzBV,SAAK,KAvzBK;AAwzBV,SAAK,KAxzBK;AAyzBV,SAAK,MAzzBK;AA0zBV,SAAK,KA1zBK;AA2zBV,SAAK,KA3zBK;AA4zBV,SAAK,KA5zBK;AA6zBV,SAAK,KA7zBK;AA8zBV,SAAK,KA9zBK;AA+zBV,SAAK,KA/zBK;AAg0BV,SAAK,KAh0BK;AAi0BV,SAAK,KAj0BK;AAk0BV,SAAK,IAl0BK;AAm0BV,SAAK,KAn0BK;AAo0BV,SAAK,KAp0BK;AAq0BV,SAAK,KAr0BK;AAs0BV,UAAM,KAt0BI;AAu0BV,SAAK,KAv0BK;AAw0BV,SAAK,KAx0BK;AAy0BV,SAAK,KAz0BK;AA00BV,WAAO,KA10BG;AA20BV,UAAM,KA30BI;AA40BV,SAAK,KA50BK;AA60BV,SAAK;AA70BK,GAAd;AAi1BA;AACJ;AACA;AACA;AACA;;AACI,MAAIC,kBAAkB,GAAG,CACrB;AACA,KAFqB,EAIrB;AACA,KALqB,CAAzB;AAQA;AACJ;AACA;AACA;;AACI,MAAIC,UAAU,GAAG;AACb;AACA;AACA,SAAK,GAHQ;AAIb,SAAK,GAJQ;AAKb,SAAK,GALQ;AAMb,SAAK,GANQ;AAOb,SAAK,GAPQ;AAQb,SAAK,GARQ;AASb,UAAM,GATO;AAUb,SAAK,GAVQ;AAWb,SAAK,GAXQ;AAYb,YAAQ,MAZK;AAab,UAAM,IAbO;AAcb,WAAO,IAdM;AAeb,UAAM,IAfO;AAgBb,WAAO,IAhBM;AAiBb,SAAK,GAjBQ;AAiBH;AACV,UAAM,IAlBO;AAmBb,YAAQ,KAnBK;AAoBb,YAAQ,KApBK;AAqBb,UAAM,IArBO;AAsBb,YAAQ,MAtBK;AAuBb,YAAQ,MAvBK;AAwBb,UAAM,IAxBO;AAyBb,UAAM,GAzBO;AA0Bb,UAAM,IA1BO;AA2Bb,WAAO,KA3BM;AA4Bb,WAAO,IA5BM;AA6Bb,WAAO,IA7BM;AA8Bb,WAAO,IA9BM;AA+Bb,UAAM,GA/BO;AAgCb,YAAQ,IAhCK;AAiCb,WAAO,KAjCM;AAkCb,UAAM,IAlCO;AAmCb,WAAO,IAnCM;AAoCb,WAAO,KApCM;AAqCb,WAAO,IArCM;AAsCb,WAAO,IAtCM;AAuCb,UAAM,IAvCO;AAwCb,WAAO,KAxCM;AAyCb,WAAO,IAzCM;AA0Cb,WAAO,IA1CM;AA2Cb,aAAS,KA3CI;AA4Cb,UAAM,IA5CO;AA6Cb,WAAO,KA7CM;AA8Cb,WAAO,IA9CM;AA+Cb,WAAO,IA/CM;AAgDb,UAAM,GAhDO;AAiDb,YAAQ,IAjDK;AAkDb,UAAM,IAlDO;AAmDb,SAAK,IAnDQ;AAoDb,UAAM,KApDO;AAqDb,UAAM,IArDO;AAuDb;AACA,WAAO,IAxDM;AAyDb,WAAO;AAzDM,GAAjB;AA4DA;AACJ;AACA;AACA;;AACI,MAAIC,WAAW,GAAG;AACd,UAAM,EADQ;AACJ;AAEV,UAAM;AAAE;AACJ,WAAK,GADH;AAEF,WAAK,GAFH;AAGF,WAAK,GAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,GANH;AAOF,WAAK,GAPH;AAQF,WAAK,GARH;AASF,WAAK,GATH;AAUF,WAAK,GAVH;AAWF,WAAK,GAXH;AAYF,WAAK,GAZH;AAaF,WAAK,GAbH;AAcF,WAAK;AAdH,KAHQ;AAoBd,UAAM;AAAE;AACJ,WAAK,GADH;AAEF,WAAK,GAFH;AAGF,WAAK,GAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,GANH;AAOF,WAAK,GAPH;AAQF,WAAK,GARH;AASF,WAAK,GATH;AAUF,WAAK,GAVH;AAWF,WAAK,GAXH;AAYF,WAAK,GAZH;AAaF,WAAK,GAbH;AAcF,WAAK,GAdH;AAeF,WAAK,GAfH;AAgBF,WAAK,GAhBH;AAiBF,WAAK,GAjBH;AAkBF,WAAK;AAlBH,KApBQ;AAyCd,UAAM;AAAE;AACJ;AACA;AACA,WAAK,GAHH;AAGQ;AACV,WAAK,GAJH;AAIQ;AACV,WAAK,GALH;AAKQ;AACV,WAAK,GANH,CAMO;;AANP,KAzCQ;AAkDd,UAAM;AAAE;AACJ,WAAK,GADH;AACQ;AACV,WAAK,GAFH;AAEQ;AACV;AACA;AACA,WAAK,GALH;AAKQ;AACV,WAAK,GANH;AAMQ;AACV;AACA;AACA,WAAK,GATH;AAUF,WAAK,GAVH;AAWF,WAAK,GAXH;AAYF,WAAK;AAZH,KAlDQ;AAiEd,UAAM;AAAE;AACJ,WAAK,GADH;AAEF,WAAK,GAFH;AAGF,WAAK,GAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,GANH;AAOF,WAAK,GAPH;AAQF,WAAK,GARH;AASF,WAAK,GATH;AAUF,WAAK,GAVH;AAWF,WAAK,GAXH;AAYF,WAAK,GAZH;AAaF,WAAK,GAbH;AAcF,WAAK,GAdH;AAeF,WAAK,GAfH;AAgBF,WAAK,GAhBH;AAiBF,WAAK;AAjBH,KAjEQ;AAqFd,UAAM;AAAE;AACJ,WAAK,GADH;AAEF,WAAK,GAFH;AAGF,WAAK,GAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,GANH;AAOF,WAAK,GAPH;AAQF,WAAK,GARH;AASF,WAAK,GATH;AAUF,WAAK,GAVH;AAWF,WAAK,GAXH;AAYF,WAAK,GAZH;AAaF,WAAK,GAbH;AAcF,WAAK,GAdH;AAeF,WAAK,GAfH;AAgBF,WAAK,GAhBH;AAiBF,WAAK,GAjBH;AAkBF,WAAK,GAlBH;AAmBF,WAAK,GAnBH;AAoBF,WAAK,GApBH;AAqBF,WAAK,GArBH;AAsBF,WAAK;AAtBH,KArFQ;AA8Gd,UAAM;AAAE;AACJ,WAAK,GADH;AAEF,WAAK,GAFH;AAGF,WAAK,GAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,GANH;AAOF,WAAK,GAPH;AAQF,WAAK,GARH;AASF,WAAK,GATH;AAUF,WAAK,GAVH;AAWF,WAAK,GAXH;AAYF,WAAK,GAZH;AAaF,WAAK,GAbH;AAcF,WAAK,GAdH;AAeF,WAAK,GAfH;AAgBF,WAAK,GAhBH;AAiBF,WAAK,GAjBH;AAkBF,WAAK;AAlBH,KA9GQ;AAmId,UAAM;AAAE;AACJ;AACA;AACA,WAAK,GAHH;AAGQ;AACV,WAAK,GAJH;AAIQ;AACV,WAAK,GALH;AAKQ;AACV,WAAK,GANH,CAMO;;AANP,KAnIQ;AA4Id,UAAM;AAAE;AACJ,WAAK,GADH;AAEF,WAAK;AAFH,KA5IQ;AAiJd,UAAM;AAAE;AACJ,WAAK,IADH;AAEF,WAAK,IAFH;AAGF,WAAK,IAHH;AAIF,WAAK,IAJH;AAKF,WAAK,IALH;AAMF,WAAK;AANH,KAjJQ;AA0Jd,UAAM;AAAE;AACJ,WAAK,GADH;AAEF,WAAK,GAFH;AAGF,WAAK,GAHH;AAIF,WAAK;AAJH;AA1JQ,GAAlB;AAkKA;AACJ;AACA;AACA;AACA;;AACI,MAAIC,SAAS,GAAG;AACZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,WAFH;AAGF,WAAK,KAHH;AAIF,WAAK,IAJH;AAKF,WAAK,IALH;AAMF,WAAK,UANH;AAOF,WAAK,WAPH;AAQF,WAAK,QARH;AASF,WAAK;AATH,KADM;AAaZ,UAAM,EAbM;AAeZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,SAFH;AAGF,WAAK,MAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,WANH;AAOF,WAAK,SAPH;AAQF,WAAK,WARH;AASF,WAAK;AATH,KAfM;AA2BZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,WAFH;AAGF,WAAK,OAHH;AAIF,WAAK,GAJH;AAKF,WAAK,MALH;AAMF,WAAK,WANH;AAOF,WAAK,WAPH;AAQF,WAAK,QARH;AASF,WAAK;AATH,KA3BM;AAuCZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,WAFH;AAGF,WAAK,OAHH;AAIF,WAAK,KAJH;AAKF,WAAK,MALH;AAMF,WAAK,aANH;AAOF,WAAK,cAPH;AAQF,WAAK,WARH;AASF,WAAK;AATH,KAvCM;AAmDZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,WAFH;AAGF,WAAK,OAHH;AAIF,WAAK,KAJH;AAKF,WAAK,QALH;AAMF,WAAK,cANH;AAOF,WAAK,cAPH;AAQF,WAAK,QARH;AASF,WAAK;AATH,KAnDM;AA+DZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,UAFH;AAGF,WAAK,MAHH;AAIF,WAAK,KAJH;AAKF,WAAK,IALH;AAMF,WAAK,WANH;AAOF,WAAK,cAPH;AAQF,WAAK,KARH;AASF,WAAK;AATH,KA/DM;AA2EZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,UAFH;AAGF,WAAK,MAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,WANH;AAOF,WAAK,SAPH;AAQF,WAAK,aARH;AASF,WAAK;AATH,KA3EM;AAuFZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,YAFH;AAGF,WAAK,OAHH;AAIF,WAAK,IAJH;AAKF,WAAK,IALH;AAMF,WAAK,WANH;AAOF,WAAK,YAPH;AAQF,WAAK,SARH;AASF,WAAK;AATH,KAvFM;AAmGZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,aAFH;AAGF,WAAK,SAHH;AAIF,WAAK,IAJH;AAKF,WAAK,KALH;AAMF,WAAK,eANH;AAOF,WAAK,eAPH;AAQF,WAAK,OARH;AASF,WAAK;AATH,KAnGM;AA+GZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,YAFH;AAGF,WAAK,OAHH;AAIF,WAAK,IAJH;AAKF,WAAK,IALH;AAMF,WAAK,WANH;AAOF,WAAK,cAPH;AAQF,WAAK,WARH;AASF,WAAK;AATH,KA/GM;AA2HZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,YAFH;AAGF,WAAK,WAHH;AAIF,WAAK,IAJH;AAKF,WAAK,IALH;AAMF,WAAK,SANH;AAOF,WAAK,MAPH;AAQF,WAAK,MARH;AASF,WAAK;AATH,KA3HM;AAuIZ,UAAM,EAvIM;AAyIZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,UAFH;AAGF,WAAK,UAHH;AAIF,WAAK,IAJH;AAKF,WAAK,MALH;AAMF,WAAK,aANH;AAOF,WAAK,cAPH;AAQF,WAAK,QARH;AASF,WAAK;AATH,KAzIM;AAqJZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,UAFH;AAGF,WAAK,OAHH;AAIF,WAAK,GAJH;AAKF,WAAK,GALH;AAMF,WAAK,WANH;AAOF,WAAK,aAPH;AAQF,WAAK,OARH;AASF,WAAK;AATH,KArJM;AAiKZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,UAFH;AAGF,WAAK,OAHH;AAIF,WAAK,IAJH;AAKF,WAAK,IALH;AAMF,WAAK,YANH;AAOF,WAAK,aAPH;AAQF,WAAK,MARH;AASF,WAAK;AATH,KAjKM;AA6KZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,WAFH;AAGF,WAAK,WAHH;AAIF,WAAK,IAJH;AAKF,WAAK,KALH;AAMF,WAAK,YANH;AAOF,WAAK,cAPH;AAQF,WAAK,OARH;AASF,WAAK;AATH,KA7KM;AAyLZ,UAAM;AACF,WAAK,YADH;AAEF,WAAK,WAFH;AAGF,WAAK,SAHH;AAIF,WAAK,MAJH;AAKF,WAAK,KALH;AAMF,WAAK,SANH;AAOF,WAAK,SAPH;AAQF,WAAK,SARH;AASF,WAAK;AATH,KAzLM;AAqMZ,UAAM,EArMM;AAuMZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,UAFH;AAGF,WAAK,QAHH;AAIF,WAAK,IAJH;AAKF,WAAK,IALH;AAMF,WAAK,aANH;AAOF,WAAK,YAPH;AAQF,WAAK,KARH;AASF,WAAK;AATH,KAvMM;AAmNZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,gBAFH;AAGF,WAAK,QAHH;AAIF,WAAK,GAJH;AAKF,WAAK,KALH;AAMF,WAAK,cANH;AAOF,WAAK,aAPH;AAQF,WAAK,MARH;AASF,WAAK;AATH,KAnNM;AA+NZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,UAFH;AAGF,WAAK,MAHH;AAIF,WAAK,GAJH;AAKF,WAAK,IALH;AAMF,WAAK,WANH;AAOF,WAAK,WAPH;AAQF,WAAK,MARH;AASF,WAAK;AATH,KA/NM;AA2OZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,SAFH;AAGF,WAAK,UAHH;AAIF,WAAK,IAJH;AAKF,WAAK,KALH;AAMF,WAAK,YANH;AAOF,WAAK,aAPH;AAQF,WAAK,MARH;AASF,WAAK;AATH,KA3OM;AAuPZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,aAFH;AAGF,WAAK,OAHH;AAIF,WAAK,GAJH;AAKF,WAAK,KALH;AAMF,WAAK,QANH;AAOF,WAAK,QAPH;AAQF,WAAK,OARH;AASF,WAAK;AATH,KAvPM;AAmQZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,WAFH;AAGF,WAAK,OAHH;AAIF,WAAK,GAJH;AAKF,WAAK,OALH;AAMF,WAAK,WANH;AAOF,WAAK,UAPH;AAQF,WAAK,OARH;AASF,WAAK;AATH,KAnQM;AA+QZ,UAAM,EA/QM;AAiRZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,WAFH;AAGF,WAAK,KAHH;AAIF,WAAK,IAJH;AAKF,WAAK,MALH;AAMF,WAAK,UANH;AAOF,WAAK,UAPH;AAQF,WAAK,QARH;AASF,WAAK;AATH,KAjRM;AA6RZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,eAFH;AAGF,WAAK,OAHH;AAIF,WAAK,GAJH;AAKF,WAAK,KALH;AAMF,WAAK,QANH;AAOF,WAAK,QAPH;AAQF,WAAK,MARH;AASF,WAAK;AATH,KA7RM;AAySZ,UAAM;AACF,WAAK,OADH;AAEF,WAAK,QAFH;AAGF,WAAK,KAHH;AAIF,WAAK,IAJH;AAKF,WAAK,MALH;AAMF,WAAK,SANH;AAOF,WAAK,SAPH;AAQF,WAAK,MARH;AASF,WAAK;AATH;AAzSM,GAAhB;AAsTA,MAAIC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmDC,IAAnD,CAAwD,EAAxD,CAAhB;AAEA,MAAIC,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8CD,IAA9C,CAAmD,EAAnD,CAAvB;AAEA,MAAIE,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoCF,IAApC,CAAyC,EAAzC,CAAhB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;AACI,MAAIG,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;AACxC,QAAIC,SAAS,GAAG,GAAhB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,cAAc,GAAG,IAArB;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,YAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,eAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,CAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,CAAJ;AACA,QAAIC,iBAAJ;AACA,QAAIC,kBAAJ;AACA,QAAIC,YAAY,GAAG,EAAnB;;AAEA,QAAI,OAAOrB,KAAP,KAAiB,QAArB,EAA+B;AAC3B,aAAO,EAAP;AACH;;AAED,QAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC1BC,MAAAA,SAAS,GAAGD,IAAZ;AACH;;AAEDY,IAAAA,MAAM,GAAGnB,SAAS,CAAC4B,EAAnB;AACAR,IAAAA,QAAQ,GAAGrB,WAAW,CAAC6B,EAAvB;;AAEA,QAAI,OAAOrB,IAAP,KAAgB,QAApB,EAA8B;AAC1BM,MAAAA,YAAY,GAAGN,IAAI,CAACM,YAAL,IAAqB,KAApC;AACAD,MAAAA,kBAAkB,GAAIL,IAAI,CAACsB,MAAL,IAAe,OAAOtB,IAAI,CAACsB,MAAZ,KAAuB,QAAvC,GAAmDtB,IAAI,CAACsB,MAAxD,GAAiEjB,kBAAtF;AACAG,MAAAA,QAAQ,GAAI,CAACR,IAAI,CAACQ,QAAN,GAAiB,CAAjB,IAAsBR,IAAI,CAACQ,QAA5B,IAAyC,KAApD;AACAC,MAAAA,QAAQ,GAAGT,IAAI,CAACuB,IAAL,IAAa,KAAxB;AACAb,MAAAA,eAAe,GAAGV,IAAI,CAACwB,WAAL,IAAoB,KAAtC;AACAb,MAAAA,QAAQ,GAAGX,IAAI,CAACyB,IAAL,IAAa,KAAxB;AACArB,MAAAA,cAAc,GAAIJ,IAAI,CAAC0B,OAAL,KAAiB,KAAjB,IAA0B1B,IAAI,CAAC2B,IAAL,KAAc,KAAzC,GAAkD,KAAlD,GAA0D,IAA3E;AACA1B,MAAAA,SAAS,GAAGD,IAAI,CAACC,SAAL,IAAkBA,SAA9B;;AAEA,UAAIQ,QAAJ,EAAc;AACVW,QAAAA,YAAY,IAAI1B,SAAhB;AACH;;AAED,UAAIgB,eAAJ,EAAqB;AACjBU,QAAAA,YAAY,IAAIxB,gBAAhB;AACH;;AAED,UAAIe,QAAJ,EAAc;AACVS,QAAAA,YAAY,IAAIvB,SAAhB;AACH;;AAEDe,MAAAA,MAAM,GAAIZ,IAAI,CAAC2B,IAAL,IAAalC,SAAS,CAACO,IAAI,CAAC2B,IAAN,CAAtB,IAAqCvB,cAAtC,GACLX,SAAS,CAACO,IAAI,CAAC2B,IAAN,CADJ,GACmBvB,cAAc,GAAGX,SAAS,CAAC4B,EAAb,GAAkB,EAD5D;AAGAR,MAAAA,QAAQ,GAAIb,IAAI,CAAC2B,IAAL,IAAanC,WAAW,CAACQ,IAAI,CAAC2B,IAAN,CAAzB,GACPnC,WAAW,CAACQ,IAAI,CAAC2B,IAAN,CADJ,GAEP3B,IAAI,CAAC2B,IAAL,KAAc,KAAd,IAAuB3B,IAAI,CAAC2B,IAAL,KAAc,IAArC,GAA4C,EAA5C,GAAiDnC,WAAW,CAAC6B,EAFjE,CAzB0B,CA6B1B;;AACA,UAAIrB,IAAI,CAACO,SAAL,IAAkB,OAAOP,IAAI,CAACO,SAAL,CAAeqB,MAAtB,KAAiC,QAAnD,IAA+DC,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BhC,IAAI,CAACO,SAAnC,CAAnE,EAAkH;AAC9GP,QAAAA,IAAI,CAACO,SAAL,CAAe0B,OAAf,CAAuB,UAAUC,CAAV,EAAa;AAChC7B,UAAAA,kBAAkB,CAAC6B,CAAC,GAAG,EAAL,CAAlB,GAA6BA,CAAC,GAAG,EAAjC;AACH,SAFD;AAIA3B,QAAAA,SAAS,GAAG,IAAZ;AACH,OAND,MAMO;AACHA,QAAAA,SAAS,GAAG,CAAC,CAACP,IAAI,CAACO,SAAnB;AACH,OAtCyB,CAwC1B;;;AACA,UAAIP,IAAI,CAACsB,MAAL,IAAe,OAAOtB,IAAI,CAACsB,MAAL,CAAYM,MAAnB,KAA8B,QAA7C,IAAyDC,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BhC,IAAI,CAACsB,MAAnC,CAA7D,EAAyG;AACrGtB,QAAAA,IAAI,CAACsB,MAAL,CAAYW,OAAZ,CAAoB,UAAUC,CAAV,EAAa;AAC7B7B,UAAAA,kBAAkB,CAAC6B,CAAC,GAAG,EAAL,CAAlB,GAA6BA,CAAC,GAAG,EAAjC;AACH,SAFD;AAGH,OA7CyB,CA+C1B;;;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAY/B,kBAAZ,EAAgC4B,OAAhC,CAAwC,UAAUC,CAAV,EAAa;AACjD,YAAIG,CAAJ;;AAEA,YAAIH,CAAC,CAACN,MAAF,GAAW,CAAf,EAAkB;AACdS,UAAAA,CAAC,GAAG,IAAIC,MAAJ,CAAW,QAAQC,WAAW,CAACL,CAAD,CAAnB,GAAyB,KAApC,EAA2C,IAA3C,CAAJ;AACH,SAFD,MAEO;AACHG,UAAAA,CAAC,GAAG,IAAIC,MAAJ,CAAWC,WAAW,CAACL,CAAD,CAAtB,EAA2B,IAA3B,CAAJ;AACH;;AAEDnC,QAAAA,KAAK,GAAGA,KAAK,CAACyC,OAAN,CAAcH,CAAd,EAAiBhC,kBAAkB,CAAC6B,CAAD,CAAnC,CAAR;AACH,OAVD,EAhD0B,CA4D1B;;AACA,WAAKlB,EAAL,IAAWX,kBAAX,EAA+B;AAC3Be,QAAAA,YAAY,IAAIJ,EAAhB;AACH;AACJ;;AAEDI,IAAAA,YAAY,IAAInB,SAAhB,CAnGwC,CAqGxC;;AACAmB,IAAAA,YAAY,GAAGmB,WAAW,CAACnB,YAAD,CAA1B,CAtGwC,CAwGxC;;AACArB,IAAAA,KAAK,GAAGA,KAAK,CAACyC,OAAN,CAAc,cAAd,EAA8B,EAA9B,CAAR;AAEAtB,IAAAA,iBAAiB,GAAG,KAApB;AACAC,IAAAA,kBAAkB,GAAG,KAArB;;AAEA,SAAKJ,CAAC,GAAG,CAAJ,EAAOE,CAAC,GAAGlB,KAAK,CAAC6B,MAAtB,EAA8Bb,CAAC,GAAGE,CAAlC,EAAqCF,CAAC,EAAtC,EAA0C;AACtCC,MAAAA,EAAE,GAAGjB,KAAK,CAACgB,CAAD,CAAV;;AAEA,UAAI0B,oBAAoB,CAACzB,EAAD,EAAKX,kBAAL,CAAxB,EAAkD;AAC9C;AACAa,QAAAA,iBAAiB,GAAG,KAApB;AACH,OAHD,MAGO,IAAIL,QAAQ,CAACG,EAAD,CAAZ,EAAkB;AACrB;AACAA,QAAAA,EAAE,GAAGE,iBAAiB,IAAIL,QAAQ,CAACG,EAAD,CAAR,CAAa0B,KAAb,CAAmB,aAAnB,CAArB,GAAyD,MAAM7B,QAAQ,CAACG,EAAD,CAAvE,GAA8EH,QAAQ,CAACG,EAAD,CAA3F;AAEAE,QAAAA,iBAAiB,GAAG,KAApB;AACH,OALM,MAKA,IAAIF,EAAE,IAAI3B,OAAV,EAAmB;AACtB;AACA,YAAI0B,CAAC,GAAG,CAAJ,GAAQE,CAAR,IAAa3B,kBAAkB,CAACqD,OAAnB,CAA2B5C,KAAK,CAACgB,CAAC,GAAG,CAAL,CAAhC,KAA4C,CAA7D,EAAgE;AAC5DZ,UAAAA,aAAa,IAAIa,EAAjB;AACAA,UAAAA,EAAE,GAAG,EAAL;AACH,SAHD,MAGO,IAAIG,kBAAkB,KAAK,IAA3B,EAAiC;AACpCH,UAAAA,EAAE,GAAGzB,UAAU,CAACY,aAAD,CAAV,GAA4Bd,OAAO,CAAC2B,EAAD,CAAxC;AACAb,UAAAA,aAAa,GAAG,EAAhB;AACH,SAHM,MAGA;AACH;AACAa,UAAAA,EAAE,GAAGE,iBAAiB,IAAI7B,OAAO,CAAC2B,EAAD,CAAP,CAAY0B,KAAZ,CAAkB,aAAlB,CAArB,GAAwD,MAAMrD,OAAO,CAAC2B,EAAD,CAArE,GAA4E3B,OAAO,CAAC2B,EAAD,CAAxF;AACH;;AAEDE,QAAAA,iBAAiB,GAAG,KAApB;AACAC,QAAAA,kBAAkB,GAAG,KAArB;AACH,OAfM,MAeA,IAAIH,EAAE,IAAIzB,UAAV,EAAsB;AACzBY,QAAAA,aAAa,IAAIa,EAAjB;AACAA,QAAAA,EAAE,GAAG,EAAL,CAFyB,CAGzB;;AACA,YAAID,CAAC,KAAKE,CAAC,GAAG,CAAd,EAAiB;AACbD,UAAAA,EAAE,GAAGzB,UAAU,CAACY,aAAD,CAAf;AACH;;AACDgB,QAAAA,kBAAkB,GAAG,IAArB;AACH,OARM,MAQA,KACH;AACAP,MAAAA,MAAM,CAACI,EAAD,CAAN,IAAc,EAAEP,QAAQ,IAAIf,SAAS,CAChCiD,OADuB,CACf3B,EADe,MACP,CAAC,CADR,CAAd,IAC4B,EAAEN,eAAe,IAAId,gBAAgB,CAC7D;AAD6D,OAE5D+C,OAF4C,CAEpC3B,EAFoC,MAE5B,CAAC,CAFM,CAHzB,EAKuB;AAC1BA,QAAAA,EAAE,GAAGE,iBAAiB,IAAIhB,MAAM,CAAC0C,MAAP,CAAc,CAAC,CAAf,EAAkBF,KAAlB,CAAwB,aAAxB,CAArB,GAA8DzC,SAAS,GAAGW,MAAM,CAACI,EAAD,CAAhF,GAAuFJ,MAAM,CAACI,EAAD,CAAlG;AACAA,QAAAA,EAAE,IAAIjB,KAAK,CAACgB,CAAC,GAAG,CAAL,CAAL,KAAiB,KAAK,CAAtB,IAA2BhB,KAAK,CAACgB,CAAC,GAAG,CAAL,CAAL,CAAa2B,KAAb,CAAmB,aAAnB,CAA3B,GAA+DzC,SAA/D,GAA2E,EAAjF;AAEAiB,QAAAA,iBAAiB,GAAG,IAApB;AACH,OAVM,MAUA;AACH,YAAIC,kBAAkB,KAAK,IAA3B,EAAiC;AAC7BH,UAAAA,EAAE,GAAGzB,UAAU,CAACY,aAAD,CAAV,GAA4Ba,EAAjC;AACAb,UAAAA,aAAa,GAAG,EAAhB;AACAgB,UAAAA,kBAAkB,GAAG,KAArB;AACH,SAJD,MAIO,IAAID,iBAAiB,KAAK,cAAc2B,IAAd,CAAmB7B,EAAnB,KAA0Bd,MAAM,CAAC0C,MAAP,CAAc,CAAC,CAAf,EAAkBF,KAAlB,CAAwB,YAAxB,CAA/B,CAArB,EAA4F;AAC/F;AACA1B,UAAAA,EAAE,GAAG,MAAMA,EAAX;AACH;;AACDE,QAAAA,iBAAiB,GAAG,KAApB;AACH,OAtDqC,CAwDtC;;;AACAhB,MAAAA,MAAM,IAAIc,EAAE,CAACwB,OAAH,CAAW,IAAIF,MAAJ,CAAW,aAAalB,YAAb,GAA4B,KAAvC,EAA8C,GAA9C,CAAX,EAA+DnB,SAA/D,CAAV;AACH;;AAED,QAAIM,SAAJ,EAAe;AACXL,MAAAA,MAAM,GAAGA,MAAM,CAACsC,OAAP,CAAe,YAAf,EAA6B,UAAUM,CAAV,EAAa/B,CAAb,EAAgBsB,CAAhB,EAAmB;AACrD,YAAIU,CAAC,GAAGhC,CAAC,CAACiC,WAAF,MAAmBX,CAAC,KAAK,IAAN,GAAaA,CAAb,GAAiB,EAApC,CAAR;AACA,eAAQF,MAAM,CAACC,IAAP,CAAY/B,kBAAZ,EAAgCsC,OAAhC,CAAwCI,CAAC,CAACE,WAAF,EAAxC,IAA2D,CAA5D,GAAiEF,CAAjE,GAAqEA,CAAC,CAACE,WAAF,EAA5E;AACH,OAHQ,CAAT;AAIH,KA/KuC,CAiLxC;AACA;AACA;;;AACA/C,IAAAA,MAAM,GAAGA,MAAM,CAACsC,OAAP,CAAe,MAAf,EAAuBvC,SAAvB,EACJuC,OADI,CACI,IAAIF,MAAJ,CAAW,OAAOrC,SAAP,GAAmB,GAA9B,EAAmC,GAAnC,CADJ,EAC6CA,SAD7C,EAEJuC,OAFI,CAEI,IAAIF,MAAJ,CAAW,SAASrC,SAAT,GAAqB,MAArB,GAA8BA,SAA9B,GAA0C,KAArD,EAA4D,GAA5D,CAFJ,EAEsE,EAFtE,CAAT;;AAIA,QAAIO,QAAQ,IAAIN,MAAM,CAAC0B,MAAP,GAAgBpB,QAAhC,EAA0C;AACtCM,MAAAA,KAAK,GAAGZ,MAAM,CAACgD,MAAP,CAAc1C,QAAd,MAA4BP,SAApC;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACiD,KAAP,CAAa,CAAb,EAAgB3C,QAAhB,CAAT;;AAEA,UAAI,CAACM,KAAL,EAAY;AACRZ,QAAAA,MAAM,GAAGA,MAAM,CAACiD,KAAP,CAAa,CAAb,EAAgBjD,MAAM,CAACkD,WAAP,CAAmBnD,SAAnB,CAAhB,CAAT;AACH;AACJ;;AAED,QAAI,CAACK,YAAD,IAAiB,CAACC,SAAtB,EAAiC;AAC7BL,MAAAA,MAAM,GAAGA,MAAM,CAAC+C,WAAP,EAAT;AACH;;AAED,WAAO/C,MAAP;AACH,GAtMD;AAwMA;AACJ;AACA;AACA;AACA;;;AACI,MAAImD,UAAU,GAAG,SAASA,UAAT,CAAoBrD,IAApB,EAA0B;AAEvC;AACR;AACA;AACA;AACA;AACQ,WAAO,SAASsD,iBAAT,CAA2BvD,KAA3B,EAAkC;AACrC,aAAOD,OAAO,CAACC,KAAD,EAAQC,IAAR,CAAd;AACH,KAFD;AAGH,GAVD;AAYA;AACJ;AACA;AACA;;;AACI,MAAIuC,WAAW,GAAG,SAASA,WAAT,CAAqBxC,KAArB,EAA4B;AAC1C,WAAOA,KAAK,CAACyC,OAAN,CAAc,wBAAd,EAAwC,MAAxC,CAAP;AACH,GAFD;AAIA;AACJ;AACA;AACA;AACA;;;AACI,MAAIC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUzB,EAAV,EAAcX,kBAAd,EAAkC;AACzD,SAAK,IAAIkD,CAAT,IAAclD,kBAAd,EAAkC;AAC9B,UAAIA,kBAAkB,CAACkD,CAAD,CAAlB,KAA0BvC,EAA9B,EAAkC;AAC9B,eAAO,IAAP;AACH;AACJ;AACJ,GAND;;AAQA,MAAI,OAAOwC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;AAEjD;AACAD,IAAAA,MAAM,CAACC,OAAP,GAAiB3D,OAAjB;AACA0D,IAAAA,MAAM,CAACC,OAAP,CAAeJ,UAAf,GAA4BA,UAA5B;AACH,GALD,MAKO,IAAI,OAAOK,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,GAA5C,EAAiD;AAEpD;AACAD,IAAAA,MAAM,CAAC,EAAD,EAAK,YAAY;AACnB,aAAO5D,OAAP;AACH,KAFK,CAAN;AAGH,GANM,MAMA;AAEH;AACA,QAAI;AACA,UAAIV,IAAI,CAACU,OAAL,IAAgBV,IAAI,CAACiE,UAAzB,EAAqC;AACjC,cAAM,oDAAN;AACH,OAFD,MAEO;AACHjE,QAAAA,IAAI,CAACU,OAAL,GAAeA,OAAf;AACAV,QAAAA,IAAI,CAACiE,UAAL,GAAkBA,UAAlB;AACH;AACJ,KAPD,CAOE,OAAOO,CAAP,EAAU,CAAE;AACjB;AACJ,CAxpDD,EAwpDG,IAxpDH","sourcesContent":["(function (root) {\n    'use strict';\n\n    /**\n     * charMap\n     * @type {Object}\n     */\n    var charMap = {\n\n        // latin\n        'À': 'A',\n        'Á': 'A',\n        'Â': 'A',\n        'Ã': 'A',\n        'Ä': 'Ae',\n        'Å': 'A',\n        'Æ': 'AE',\n        'Ç': 'C',\n        'È': 'E',\n        'É': 'E',\n        'Ê': 'E',\n        'Ë': 'E',\n        'Ì': 'I',\n        'Í': 'I',\n        'Î': 'I',\n        'Ï': 'I',\n        'Ð': 'D',\n        'Ñ': 'N',\n        'Ò': 'O',\n        'Ó': 'O',\n        'Ô': 'O',\n        'Õ': 'O',\n        'Ö': 'Oe',\n        'Ő': 'O',\n        'Ø': 'O',\n        'Ù': 'U',\n        'Ú': 'U',\n        'Û': 'U',\n        'Ü': 'Ue',\n        'Ű': 'U',\n        'Ý': 'Y',\n        'Þ': 'TH',\n        'ß': 'ss',\n        'à': 'a',\n        'á': 'a',\n        'â': 'a',\n        'ã': 'a',\n        'ä': 'ae',\n        'å': 'a',\n        'æ': 'ae',\n        'ç': 'c',\n        'è': 'e',\n        'é': 'e',\n        'ê': 'e',\n        'ë': 'e',\n        'ì': 'i',\n        'í': 'i',\n        'î': 'i',\n        'ï': 'i',\n        'ð': 'd',\n        'ñ': 'n',\n        'ò': 'o',\n        'ó': 'o',\n        'ô': 'o',\n        'õ': 'o',\n        'ö': 'oe',\n        'ő': 'o',\n        'ø': 'o',\n        'ù': 'u',\n        'ú': 'u',\n        'û': 'u',\n        'ü': 'ue',\n        'ű': 'u',\n        'ý': 'y',\n        'þ': 'th',\n        'ÿ': 'y',\n        'ẞ': 'SS',\n\n        // language specific\n\n        // Arabic\n        'ا': 'a',\n        'أ': 'a',\n        'إ': 'i',\n        'آ': 'aa',\n        'ؤ': 'u',\n        'ئ': 'e',\n        'ء': 'a',\n        'ب': 'b',\n        'ت': 't',\n        'ث': 'th',\n        'ج': 'j',\n        'ح': 'h',\n        'خ': 'kh',\n        'د': 'd',\n        'ذ': 'th',\n        'ر': 'r',\n        'ز': 'z',\n        'س': 's',\n        'ش': 'sh',\n        'ص': 's',\n        'ض': 'dh',\n        'ط': 't',\n        'ظ': 'z',\n        'ع': 'a',\n        'غ': 'gh',\n        'ف': 'f',\n        'ق': 'q',\n        'ك': 'k',\n        'ل': 'l',\n        'م': 'm',\n        'ن': 'n',\n        'ه': 'h',\n        'و': 'w',\n        'ي': 'y',\n        'ى': 'a',\n        'ة': 'h',\n        'ﻻ': 'la',\n        'ﻷ': 'laa',\n        'ﻹ': 'lai',\n        'ﻵ': 'laa',\n\n        // Persian additional characters than Arabic\n        'گ': 'g',\n        'چ': 'ch',\n        'پ': 'p',\n        'ژ': 'zh',\n        'ک': 'k',\n        'ی': 'y',\n\n        // Arabic diactrics\n        'َ': 'a',\n        'ً': 'an',\n        'ِ': 'e',\n        'ٍ': 'en',\n        'ُ': 'u',\n        'ٌ': 'on',\n        'ْ': '',\n\n        // Arabic numbers\n        '٠': '0',\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n\n        // Persian numbers\n        '۰': '0',\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n\n        // Burmese consonants\n        'က': 'k',\n        'ခ': 'kh',\n        'ဂ': 'g',\n        'ဃ': 'ga',\n        'င': 'ng',\n        'စ': 's',\n        'ဆ': 'sa',\n        'ဇ': 'z',\n        'စျ': 'za',\n        'ည': 'ny',\n        'ဋ': 't',\n        'ဌ': 'ta',\n        'ဍ': 'd',\n        'ဎ': 'da',\n        'ဏ': 'na',\n        'တ': 't',\n        'ထ': 'ta',\n        'ဒ': 'd',\n        'ဓ': 'da',\n        'န': 'n',\n        'ပ': 'p',\n        'ဖ': 'pa',\n        'ဗ': 'b',\n        'ဘ': 'ba',\n        'မ': 'm',\n        'ယ': 'y',\n        'ရ': 'ya',\n        'လ': 'l',\n        'ဝ': 'w',\n        'သ': 'th',\n        'ဟ': 'h',\n        'ဠ': 'la',\n        'အ': 'a',\n        // consonant character combos\n        'ြ': 'y',\n        'ျ': 'ya',\n        'ွ': 'w',\n        'ြွ': 'yw',\n        'ျွ': 'ywa',\n        'ှ': 'h',\n        // independent vowels\n        'ဧ': 'e',\n        '၏': '-e',\n        'ဣ': 'i',\n        'ဤ': '-i',\n        'ဉ': 'u',\n        'ဦ': '-u',\n        'ဩ': 'aw',\n        'သြော': 'aw',\n        'ဪ': 'aw',\n        // numbers\n        '၀': '0',\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        // virama and tone marks which are silent in transliteration\n        '္': '',\n        '့': '',\n        'း': '',\n\n        // Czech\n        'č': 'c',\n        'ď': 'd',\n        'ě': 'e',\n        'ň': 'n',\n        'ř': 'r',\n        'š': 's',\n        'ť': 't',\n        'ů': 'u',\n        'ž': 'z',\n        'Č': 'C',\n        'Ď': 'D',\n        'Ě': 'E',\n        'Ň': 'N',\n        'Ř': 'R',\n        'Š': 'S',\n        'Ť': 'T',\n        'Ů': 'U',\n        'Ž': 'Z',\n\n        // Dhivehi\n        'ހ': 'h',\n        'ށ': 'sh',\n        'ނ': 'n',\n        'ރ': 'r',\n        'ބ': 'b',\n        'ޅ': 'lh',\n        'ކ': 'k',\n        'އ': 'a',\n        'ވ': 'v',\n        'މ': 'm',\n        'ފ': 'f',\n        'ދ': 'dh',\n        'ތ': 'th',\n        'ލ': 'l',\n        'ގ': 'g',\n        'ޏ': 'gn',\n        'ސ': 's',\n        'ޑ': 'd',\n        'ޒ': 'z',\n        'ޓ': 't',\n        'ޔ': 'y',\n        'ޕ': 'p',\n        'ޖ': 'j',\n        'ޗ': 'ch',\n        'ޘ': 'tt',\n        'ޙ': 'hh',\n        'ޚ': 'kh',\n        'ޛ': 'th',\n        'ޜ': 'z',\n        'ޝ': 'sh',\n        'ޞ': 's',\n        'ޟ': 'd',\n        'ޠ': 't',\n        'ޡ': 'z',\n        'ޢ': 'a',\n        'ޣ': 'gh',\n        'ޤ': 'q',\n        'ޥ': 'w',\n        'ަ': 'a',\n        'ާ': 'aa',\n        'ި': 'i',\n        'ީ': 'ee',\n        'ު': 'u',\n        'ޫ': 'oo',\n        'ެ': 'e',\n        'ޭ': 'ey',\n        'ޮ': 'o',\n        'ޯ': 'oa',\n        'ް': '',\n\n        // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\n        // National system (2002)\n        'ა': 'a',\n        'ბ': 'b',\n        'გ': 'g',\n        'დ': 'd',\n        'ე': 'e',\n        'ვ': 'v',\n        'ზ': 'z',\n        'თ': 't',\n        'ი': 'i',\n        'კ': 'k',\n        'ლ': 'l',\n        'მ': 'm',\n        'ნ': 'n',\n        'ო': 'o',\n        'პ': 'p',\n        'ჟ': 'zh',\n        'რ': 'r',\n        'ს': 's',\n        'ტ': 't',\n        'უ': 'u',\n        'ფ': 'p',\n        'ქ': 'k',\n        'ღ': 'gh',\n        'ყ': 'q',\n        'შ': 'sh',\n        'ჩ': 'ch',\n        'ც': 'ts',\n        'ძ': 'dz',\n        'წ': 'ts',\n        'ჭ': 'ch',\n        'ხ': 'kh',\n        'ჯ': 'j',\n        'ჰ': 'h',\n\n        // Greek\n        'α': 'a',\n        'β': 'v',\n        'γ': 'g',\n        'δ': 'd',\n        'ε': 'e',\n        'ζ': 'z',\n        'η': 'i',\n        'θ': 'th',\n        'ι': 'i',\n        'κ': 'k',\n        'λ': 'l',\n        'μ': 'm',\n        'ν': 'n',\n        'ξ': 'ks',\n        'ο': 'o',\n        'π': 'p',\n        'ρ': 'r',\n        'σ': 's',\n        'τ': 't',\n        'υ': 'y',\n        'φ': 'f',\n        'χ': 'x',\n        'ψ': 'ps',\n        'ω': 'o',\n        'ά': 'a',\n        'έ': 'e',\n        'ί': 'i',\n        'ό': 'o',\n        'ύ': 'y',\n        'ή': 'i',\n        'ώ': 'o',\n        'ς': 's',\n        'ϊ': 'i',\n        'ΰ': 'y',\n        'ϋ': 'y',\n        'ΐ': 'i',\n        'Α': 'A',\n        'Β': 'B',\n        'Γ': 'G',\n        'Δ': 'D',\n        'Ε': 'E',\n        'Ζ': 'Z',\n        'Η': 'I',\n        'Θ': 'TH',\n        'Ι': 'I',\n        'Κ': 'K',\n        'Λ': 'L',\n        'Μ': 'M',\n        'Ν': 'N',\n        'Ξ': 'KS',\n        'Ο': 'O',\n        'Π': 'P',\n        'Ρ': 'R',\n        'Σ': 'S',\n        'Τ': 'T',\n        'Υ': 'Y',\n        'Φ': 'F',\n        'Χ': 'X',\n        'Ψ': 'PS',\n        'Ω': 'O',\n        'Ά': 'A',\n        'Έ': 'E',\n        'Ί': 'I',\n        'Ό': 'O',\n        'Ύ': 'Y',\n        'Ή': 'I',\n        'Ώ': 'O',\n        'Ϊ': 'I',\n        'Ϋ': 'Y',\n\n        // Latvian\n        'ā': 'a',\n        // 'č': 'c', // duplicate\n        'ē': 'e',\n        'ģ': 'g',\n        'ī': 'i',\n        'ķ': 'k',\n        'ļ': 'l',\n        'ņ': 'n',\n        // 'š': 's', // duplicate\n        'ū': 'u',\n        // 'ž': 'z', // duplicate\n        'Ā': 'A',\n        // 'Č': 'C', // duplicate\n        'Ē': 'E',\n        'Ģ': 'G',\n        'Ī': 'I',\n        'Ķ': 'k',\n        'Ļ': 'L',\n        'Ņ': 'N',\n        // 'Š': 'S', // duplicate\n        'Ū': 'U',\n        // 'Ž': 'Z', // duplicate\n\n        // Macedonian\n        'Ќ': 'Kj',\n        'ќ': 'kj',\n        'Љ': 'Lj',\n        'љ': 'lj',\n        'Њ': 'Nj',\n        'њ': 'nj',\n        'Тс': 'Ts',\n        'тс': 'ts',\n\n        // Polish\n        'ą': 'a',\n        'ć': 'c',\n        'ę': 'e',\n        'ł': 'l',\n        'ń': 'n',\n        // 'ó': 'o', // duplicate\n        'ś': 's',\n        'ź': 'z',\n        'ż': 'z',\n        'Ą': 'A',\n        'Ć': 'C',\n        'Ę': 'E',\n        'Ł': 'L',\n        'Ń': 'N',\n        'Ś': 'S',\n        'Ź': 'Z',\n        'Ż': 'Z',\n\n        // Ukranian\n        'Є': 'Ye',\n        'І': 'I',\n        'Ї': 'Yi',\n        'Ґ': 'G',\n        'є': 'ye',\n        'і': 'i',\n        'ї': 'yi',\n        'ґ': 'g',\n\n        // Romanian\n        'ă': 'a',\n        'Ă': 'A',\n        'ș': 's',\n        'Ș': 'S',\n        // 'ş': 's', // duplicate\n        // 'Ş': 'S', // duplicate\n        'ț': 't',\n        'Ț': 'T',\n        'ţ': 't',\n        'Ţ': 'T',\n\n        // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\n        // ICAO\n\n        'а': 'a',\n        'б': 'b',\n        'в': 'v',\n        'г': 'g',\n        'д': 'd',\n        'е': 'e',\n        'ё': 'yo',\n        'ж': 'zh',\n        'з': 'z',\n        'и': 'i',\n        'й': 'i',\n        'к': 'k',\n        'л': 'l',\n        'м': 'm',\n        'н': 'n',\n        'о': 'o',\n        'п': 'p',\n        'р': 'r',\n        'с': 's',\n        'т': 't',\n        'у': 'u',\n        'ф': 'f',\n        'х': 'kh',\n        'ц': 'c',\n        'ч': 'ch',\n        'ш': 'sh',\n        'щ': 'sh',\n        'ъ': '',\n        'ы': 'y',\n        'ь': '',\n        'э': 'e',\n        'ю': 'yu',\n        'я': 'ya',\n        'А': 'A',\n        'Б': 'B',\n        'В': 'V',\n        'Г': 'G',\n        'Д': 'D',\n        'Е': 'E',\n        'Ё': 'Yo',\n        'Ж': 'Zh',\n        'З': 'Z',\n        'И': 'I',\n        'Й': 'I',\n        'К': 'K',\n        'Л': 'L',\n        'М': 'M',\n        'Н': 'N',\n        'О': 'O',\n        'П': 'P',\n        'Р': 'R',\n        'С': 'S',\n        'Т': 'T',\n        'У': 'U',\n        'Ф': 'F',\n        'Х': 'Kh',\n        'Ц': 'C',\n        'Ч': 'Ch',\n        'Ш': 'Sh',\n        'Щ': 'Sh',\n        'Ъ': '',\n        'Ы': 'Y',\n        'Ь': '',\n        'Э': 'E',\n        'Ю': 'Yu',\n        'Я': 'Ya',\n\n        // Serbian\n        'ђ': 'dj',\n        'ј': 'j',\n        // 'љ': 'lj',  // duplicate\n        // 'њ': 'nj', // duplicate\n        'ћ': 'c',\n        'џ': 'dz',\n        'Ђ': 'Dj',\n        'Ј': 'j',\n        // 'Љ': 'Lj', // duplicate\n        // 'Њ': 'Nj', // duplicate\n        'Ћ': 'C',\n        'Џ': 'Dz',\n\n        // Slovak\n        'ľ': 'l',\n        'ĺ': 'l',\n        'ŕ': 'r',\n        'Ľ': 'L',\n        'Ĺ': 'L',\n        'Ŕ': 'R',\n\n        // Turkish\n        'ş': 's',\n        'Ş': 'S',\n        'ı': 'i',\n        'İ': 'I',\n        // 'ç': 'c', // duplicate\n        // 'Ç': 'C', // duplicate\n        // 'ü': 'u', // duplicate, see langCharMap\n        // 'Ü': 'U', // duplicate, see langCharMap\n        // 'ö': 'o', // duplicate, see langCharMap\n        // 'Ö': 'O', // duplicate, see langCharMap\n        'ğ': 'g',\n        'Ğ': 'G',\n\n        // Vietnamese\n        'ả': 'a',\n        'Ả': 'A',\n        'ẳ': 'a',\n        'Ẳ': 'A',\n        'ẩ': 'a',\n        'Ẩ': 'A',\n        'đ': 'd',\n        'Đ': 'D',\n        'ẹ': 'e',\n        'Ẹ': 'E',\n        'ẽ': 'e',\n        'Ẽ': 'E',\n        'ẻ': 'e',\n        'Ẻ': 'E',\n        'ế': 'e',\n        'Ế': 'E',\n        'ề': 'e',\n        'Ề': 'E',\n        'ệ': 'e',\n        'Ệ': 'E',\n        'ễ': 'e',\n        'Ễ': 'E',\n        'ể': 'e',\n        'Ể': 'E',\n        'ỏ': 'o',\n        'ọ': 'o',\n        'Ọ': 'o',\n        'ố': 'o',\n        'Ố': 'O',\n        'ồ': 'o',\n        'Ồ': 'O',\n        'ổ': 'o',\n        'Ổ': 'O',\n        'ộ': 'o',\n        'Ộ': 'O',\n        'ỗ': 'o',\n        'Ỗ': 'O',\n        'ơ': 'o',\n        'Ơ': 'O',\n        'ớ': 'o',\n        'Ớ': 'O',\n        'ờ': 'o',\n        'Ờ': 'O',\n        'ợ': 'o',\n        'Ợ': 'O',\n        'ỡ': 'o',\n        'Ỡ': 'O',\n        'Ở': 'o',\n        'ở': 'o',\n        'ị': 'i',\n        'Ị': 'I',\n        'ĩ': 'i',\n        'Ĩ': 'I',\n        'ỉ': 'i',\n        'Ỉ': 'i',\n        'ủ': 'u',\n        'Ủ': 'U',\n        'ụ': 'u',\n        'Ụ': 'U',\n        'ũ': 'u',\n        'Ũ': 'U',\n        'ư': 'u',\n        'Ư': 'U',\n        'ứ': 'u',\n        'Ứ': 'U',\n        'ừ': 'u',\n        'Ừ': 'U',\n        'ự': 'u',\n        'Ự': 'U',\n        'ữ': 'u',\n        'Ữ': 'U',\n        'ử': 'u',\n        'Ử': 'ư',\n        'ỷ': 'y',\n        'Ỷ': 'y',\n        'ỳ': 'y',\n        'Ỳ': 'Y',\n        'ỵ': 'y',\n        'Ỵ': 'Y',\n        'ỹ': 'y',\n        'Ỹ': 'Y',\n        'ạ': 'a',\n        'Ạ': 'A',\n        'ấ': 'a',\n        'Ấ': 'A',\n        'ầ': 'a',\n        'Ầ': 'A',\n        'ậ': 'a',\n        'Ậ': 'A',\n        'ẫ': 'a',\n        'Ẫ': 'A',\n        // 'ă': 'a', // duplicate\n        // 'Ă': 'A', // duplicate\n        'ắ': 'a',\n        'Ắ': 'A',\n        'ằ': 'a',\n        'Ằ': 'A',\n        'ặ': 'a',\n        'Ặ': 'A',\n        'ẵ': 'a',\n        'Ẵ': 'A',\n        \"⓪\": \"0\",\n        \"①\": \"1\",\n        \"②\": \"2\",\n        \"③\": \"3\",\n        \"④\": \"4\",\n        \"⑤\": \"5\",\n        \"⑥\": \"6\",\n        \"⑦\": \"7\",\n        \"⑧\": \"8\",\n        \"⑨\": \"9\",\n        \"⑩\": \"10\",\n        \"⑪\": \"11\",\n        \"⑫\": \"12\",\n        \"⑬\": \"13\",\n        \"⑭\": \"14\",\n        \"⑮\": \"15\",\n        \"⑯\": \"16\",\n        \"⑰\": \"17\",\n        \"⑱\": \"18\",\n        \"⑲\": \"18\",\n        \"⑳\": \"18\",\n\n        \"⓵\": \"1\",\n        \"⓶\": \"2\",\n        \"⓷\": \"3\",\n        \"⓸\": \"4\",\n        \"⓹\": \"5\",\n        \"⓺\": \"6\",\n        \"⓻\": \"7\",\n        \"⓼\": \"8\",\n        \"⓽\": \"9\",\n        \"⓾\": \"10\",\n\n        \"⓿\": \"0\",\n        \"⓫\": \"11\",\n        \"⓬\": \"12\",\n        \"⓭\": \"13\",\n        \"⓮\": \"14\",\n        \"⓯\": \"15\",\n        \"⓰\": \"16\",\n        \"⓱\": \"17\",\n        \"⓲\": \"18\",\n        \"⓳\": \"19\",\n        \"⓴\": \"20\",\n\n        \"Ⓐ\": \"A\",\n        \"Ⓑ\": \"B\",\n        \"Ⓒ\": \"C\",\n        \"Ⓓ\": \"D\",\n        \"Ⓔ\": \"E\",\n        \"Ⓕ\": \"F\",\n        \"Ⓖ\": \"G\",\n        \"Ⓗ\": \"H\",\n        \"Ⓘ\": \"I\",\n        \"Ⓙ\": \"J\",\n        \"Ⓚ\": \"K\",\n        \"Ⓛ\": \"L\",\n        \"Ⓜ\": \"M\",\n        \"Ⓝ\": \"N\",\n        \"Ⓞ\": \"O\",\n        \"Ⓟ\": \"P\",\n        \"Ⓠ\": \"Q\",\n        \"Ⓡ\": \"R\",\n        \"Ⓢ\": \"S\",\n        \"Ⓣ\": \"T\",\n        \"Ⓤ\": \"U\",\n        \"Ⓥ\": \"V\",\n        \"Ⓦ\": \"W\",\n        \"Ⓧ\": \"X\",\n        \"Ⓨ\": \"Y\",\n        \"Ⓩ\": \"Z\",\n\n        \"ⓐ\": \"a\",\n        \"ⓑ\": \"b\",\n        \"ⓒ\": \"c\",\n        \"ⓓ\": \"d\",\n        \"ⓔ\": \"e\",\n        \"ⓕ\": \"f\",\n        \"ⓖ\": \"g\",\n        \"ⓗ\": \"h\",\n        \"ⓘ\": \"i\",\n        \"ⓙ\": \"j\",\n        \"ⓚ\": \"k\",\n        \"ⓛ\": \"l\",\n        \"ⓜ\": \"m\",\n        \"ⓝ\": \"n\",\n        \"ⓞ\": \"o\",\n        \"ⓟ\": \"p\",\n        \"ⓠ\": \"q\",\n        \"ⓡ\": \"r\",\n        \"ⓢ\": \"s\",\n        \"ⓣ\": \"t\",\n        \"ⓤ\": \"u\",\n        \"ⓦ\": \"v\",\n        \"ⓥ\": \"w\",\n        \"ⓧ\": \"x\",\n        \"ⓨ\": \"y\",\n        \"ⓩ\": \"z\",\n\n        // symbols\n        '“': '\"',\n        '”': '\"',\n        '‘': \"'\",\n        '’': \"'\",\n        '∂': 'd',\n        'ƒ': 'f',\n        '™': '(TM)',\n        '©': '(C)',\n        'œ': 'oe',\n        'Œ': 'OE',\n        '®': '(R)',\n        '†': '+',\n        '℠': '(SM)',\n        '…': '...',\n        '˚': 'o',\n        'º': 'o',\n        'ª': 'a',\n        '•': '*',\n        '၊': ',',\n        '။': '.',\n\n        // currency\n        '$': 'USD',\n        '€': 'EUR',\n        '₢': 'BRN',\n        '₣': 'FRF',\n        '£': 'GBP',\n        '₤': 'ITL',\n        '₦': 'NGN',\n        '₧': 'ESP',\n        '₩': 'KRW',\n        '₪': 'ILS',\n        '₫': 'VND',\n        '₭': 'LAK',\n        '₮': 'MNT',\n        '₯': 'GRD',\n        '₱': 'ARS',\n        '₲': 'PYG',\n        '₳': 'ARA',\n        '₴': 'UAH',\n        '₵': 'GHS',\n        '¢': 'cent',\n        '¥': 'CNY',\n        '元': 'CNY',\n        '円': 'YEN',\n        '﷼': 'IRR',\n        '₠': 'EWE',\n        '฿': 'THB',\n        '₨': 'INR',\n        '₹': 'INR',\n        '₰': 'PF',\n        '₺': 'TRY',\n        '؋': 'AFN',\n        '₼': 'AZN',\n        'лв': 'BGN',\n        '៛': 'KHR',\n        '₡': 'CRC',\n        '₸': 'KZT',\n        'ден': 'MKD',\n        'zł': 'PLN',\n        '₽': 'RUB',\n        '₾': 'GEL'\n\n    };\n\n    /**\n     * special look ahead character array\n     * These characters form with consonants to become 'single'/consonant combo\n     * @type [Array]\n     */\n    var lookAheadCharArray = [\n        // burmese\n        '်',\n\n        // Dhivehi\n        'ް'\n    ];\n\n    /**\n     * diatricMap for languages where transliteration changes entirely as more diatrics are added\n     * @type {Object}\n     */\n    var diatricMap = {\n        // Burmese\n        // dependent vowels\n        'ာ': 'a',\n        'ါ': 'a',\n        'ေ': 'e',\n        'ဲ': 'e',\n        'ိ': 'i',\n        'ီ': 'i',\n        'ို': 'o',\n        'ု': 'u',\n        'ူ': 'u',\n        'ေါင်': 'aung',\n        'ော': 'aw',\n        'ော်': 'aw',\n        'ေါ': 'aw',\n        'ေါ်': 'aw',\n        '်': '်', // this is special case but the character will be converted to latin in the code\n        'က်': 'et',\n        'ိုက်': 'aik',\n        'ောက်': 'auk',\n        'င်': 'in',\n        'ိုင်': 'aing',\n        'ောင်': 'aung',\n        'စ်': 'it',\n        'ည်': 'i',\n        'တ်': 'at',\n        'ိတ်': 'eik',\n        'ုတ်': 'ok',\n        'ွတ်': 'ut',\n        'ေတ်': 'it',\n        'ဒ်': 'd',\n        'ိုဒ်': 'ok',\n        'ုဒ်': 'ait',\n        'န်': 'an',\n        'ာန်': 'an',\n        'ိန်': 'ein',\n        'ုန်': 'on',\n        'ွန်': 'un',\n        'ပ်': 'at',\n        'ိပ်': 'eik',\n        'ုပ်': 'ok',\n        'ွပ်': 'ut',\n        'န်ုပ်': 'nub',\n        'မ်': 'an',\n        'ိမ်': 'ein',\n        'ုမ်': 'on',\n        'ွမ်': 'un',\n        'ယ်': 'e',\n        'ိုလ်': 'ol',\n        'ဉ်': 'in',\n        'ံ': 'an',\n        'ိံ': 'ein',\n        'ုံ': 'on',\n\n        // Dhivehi\n        'ައް': 'ah',\n        'ަށް': 'ah'\n    };\n\n    /**\n     * langCharMap language specific characters translations\n     * @type   {Object}\n     */\n    var langCharMap = {\n        'en': {}, // default language\n\n        'az': { // Azerbaijani\n            'ç': 'c',\n            'ə': 'e',\n            'ğ': 'g',\n            'ı': 'i',\n            'ö': 'o',\n            'ş': 's',\n            'ü': 'u',\n            'Ç': 'C',\n            'Ə': 'E',\n            'Ğ': 'G',\n            'İ': 'I',\n            'Ö': 'O',\n            'Ş': 'S',\n            'Ü': 'U'\n        },\n\n        'cs': { // Czech\n            'č': 'c',\n            'ď': 'd',\n            'ě': 'e',\n            'ň': 'n',\n            'ř': 'r',\n            'š': 's',\n            'ť': 't',\n            'ů': 'u',\n            'ž': 'z',\n            'Č': 'C',\n            'Ď': 'D',\n            'Ě': 'E',\n            'Ň': 'N',\n            'Ř': 'R',\n            'Š': 'S',\n            'Ť': 'T',\n            'Ů': 'U',\n            'Ž': 'Z'\n        },\n\n        'fi': { // Finnish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'hu': { // Hungarian\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            // 'á': 'a', duplicate see charMap/latin\n            // 'Á': 'A', duplicate see charMap/latin\n            'ö': 'o', // ok\n            'Ö': 'O', // ok\n            // 'ő': 'o', duplicate see charMap/latin\n            // 'Ő': 'O', duplicate see charMap/latin\n            'ü': 'u',\n            'Ü': 'U',\n            'ű': 'u',\n            'Ű': 'U'\n        },\n\n        'lt': { // Lithuanian\n            'ą': 'a',\n            'č': 'c',\n            'ę': 'e',\n            'ė': 'e',\n            'į': 'i',\n            'š': 's',\n            'ų': 'u',\n            'ū': 'u',\n            'ž': 'z',\n            'Ą': 'A',\n            'Č': 'C',\n            'Ę': 'E',\n            'Ė': 'E',\n            'Į': 'I',\n            'Š': 'S',\n            'Ų': 'U',\n            'Ū': 'U'\n        },\n\n        'lv': { // Latvian\n            'ā': 'a',\n            'č': 'c',\n            'ē': 'e',\n            'ģ': 'g',\n            'ī': 'i',\n            'ķ': 'k',\n            'ļ': 'l',\n            'ņ': 'n',\n            'š': 's',\n            'ū': 'u',\n            'ž': 'z',\n            'Ā': 'A',\n            'Č': 'C',\n            'Ē': 'E',\n            'Ģ': 'G',\n            'Ī': 'i',\n            'Ķ': 'k',\n            'Ļ': 'L',\n            'Ņ': 'N',\n            'Š': 'S',\n            'Ū': 'u',\n            'Ž': 'Z'\n        },\n\n        'pl': { // Polish\n            'ą': 'a',\n            'ć': 'c',\n            'ę': 'e',\n            'ł': 'l',\n            'ń': 'n',\n            'ó': 'o',\n            'ś': 's',\n            'ź': 'z',\n            'ż': 'z',\n            'Ą': 'A',\n            'Ć': 'C',\n            'Ę': 'e',\n            'Ł': 'L',\n            'Ń': 'N',\n            'Ó': 'O',\n            'Ś': 'S',\n            'Ź': 'Z',\n            'Ż': 'Z'\n        },\n\n        'sv': { // Swedish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'sk': { // Slovak\n            'ä': 'a',\n            'Ä': 'A'\n        },\n\n        'sr': { // Serbian\n            'љ': 'lj',\n            'њ': 'nj',\n            'Љ': 'Lj',\n            'Њ': 'Nj',\n            'đ': 'dj',\n            'Đ': 'Dj'\n        },\n\n        'tr': { // Turkish\n            'Ü': 'U',\n            'Ö': 'O',\n            'ü': 'u',\n            'ö': 'o'\n        }\n    };\n\n    /**\n     * symbolMap language specific symbol translations\n     * translations must be transliterated already\n     * @type   {Object}\n     */\n    var symbolMap = {\n        'ar': {\n            '∆': 'delta',\n            '∞': 'la-nihaya',\n            '♥': 'hob',\n            '&': 'wa',\n            '|': 'aw',\n            '<': 'aqal-men',\n            '>': 'akbar-men',\n            '∑': 'majmou',\n            '¤': 'omla'\n        },\n\n        'az': {},\n\n        'ca': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'amor',\n            '&': 'i',\n            '|': 'o',\n            '<': 'menys que',\n            '>': 'mes que',\n            '∑': 'suma dels',\n            '¤': 'moneda'\n        },\n\n        'cs': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'nebo',\n            '<': 'mensi nez',\n            '>': 'vetsi nez',\n            '∑': 'soucet',\n            '¤': 'mena'\n        },\n\n        'de': {\n            '∆': 'delta',\n            '∞': 'unendlich',\n            '♥': 'Liebe',\n            '&': 'und',\n            '|': 'oder',\n            '<': 'kleiner als',\n            '>': 'groesser als',\n            '∑': 'Summe von',\n            '¤': 'Waehrung'\n        },\n\n        'dv': {\n            '∆': 'delta',\n            '∞': 'kolunulaa',\n            '♥': 'loabi',\n            '&': 'aai',\n            '|': 'noonee',\n            '<': 'ah vure kuda',\n            '>': 'ah vure bodu',\n            '∑': 'jumula',\n            '¤': 'faisaa'\n        },\n\n        'en': {\n            '∆': 'delta',\n            '∞': 'infinity',\n            '♥': 'love',\n            '&': 'and',\n            '|': 'or',\n            '<': 'less than',\n            '>': 'greater than',\n            '∑': 'sum',\n            '¤': 'currency'\n        },\n\n        'es': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'y',\n            '|': 'u',\n            '<': 'menos que',\n            '>': 'mas que',\n            '∑': 'suma de los',\n            '¤': 'moneda'\n        },\n\n        'fa': {\n            '∆': 'delta',\n            '∞': 'bi-nahayat',\n            '♥': 'eshgh',\n            '&': 'va',\n            '|': 'ya',\n            '<': 'kamtar-az',\n            '>': 'bishtar-az',\n            '∑': 'majmooe',\n            '¤': 'vahed'\n        },\n\n        'fi': {\n            '∆': 'delta',\n            '∞': 'aarettomyys',\n            '♥': 'rakkaus',\n            '&': 'ja',\n            '|': 'tai',\n            '<': 'pienempi kuin',\n            '>': 'suurempi kuin',\n            '∑': 'summa',\n            '¤': 'valuutta'\n        },\n\n        'fr': {\n            '∆': 'delta',\n            '∞': 'infiniment',\n            '♥': 'Amour',\n            '&': 'et',\n            '|': 'ou',\n            '<': 'moins que',\n            '>': 'superieure a',\n            '∑': 'somme des',\n            '¤': 'monnaie'\n        },\n\n        'ge': {\n            '∆': 'delta',\n            '∞': 'usasruloba',\n            '♥': 'siqvaruli',\n            '&': 'da',\n            '|': 'an',\n            '<': 'naklebi',\n            '>': 'meti',\n            '∑': 'jami',\n            '¤': 'valuta'\n        },\n\n        'gr': {},\n\n        'hu': {\n            '∆': 'delta',\n            '∞': 'vegtelen',\n            '♥': 'szerelem',\n            '&': 'es',\n            '|': 'vagy',\n            '<': 'kisebb mint',\n            '>': 'nagyobb mint',\n            '∑': 'szumma',\n            '¤': 'penznem'\n        },\n\n        'it': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amore',\n            '&': 'e',\n            '|': 'o',\n            '<': 'minore di',\n            '>': 'maggiore di',\n            '∑': 'somma',\n            '¤': 'moneta'\n        },\n\n        'lt': {\n            '∆': 'delta',\n            '∞': 'begalybe',\n            '♥': 'meile',\n            '&': 'ir',\n            '|': 'ar',\n            '<': 'maziau nei',\n            '>': 'daugiau nei',\n            '∑': 'suma',\n            '¤': 'valiuta'\n        },\n\n        'lv': {\n            '∆': 'delta',\n            '∞': 'bezgaliba',\n            '♥': 'milestiba',\n            '&': 'un',\n            '|': 'vai',\n            '<': 'mazak neka',\n            '>': 'lielaks neka',\n            '∑': 'summa',\n            '¤': 'valuta'\n        },\n\n        'my': {\n            '∆': 'kwahkhyaet',\n            '∞': 'asaonasme',\n            '♥': 'akhyait',\n            '&': 'nhin',\n            '|': 'tho',\n            '<': 'ngethaw',\n            '>': 'kyithaw',\n            '∑': 'paungld',\n            '¤': 'ngwekye'\n        },\n\n        'mk': {},\n\n        'nl': {\n            '∆': 'delta',\n            '∞': 'oneindig',\n            '♥': 'liefde',\n            '&': 'en',\n            '|': 'of',\n            '<': 'kleiner dan',\n            '>': 'groter dan',\n            '∑': 'som',\n            '¤': 'valuta'\n        },\n\n        'pl': {\n            '∆': 'delta',\n            '∞': 'nieskonczonosc',\n            '♥': 'milosc',\n            '&': 'i',\n            '|': 'lub',\n            '<': 'mniejsze niz',\n            '>': 'wieksze niz',\n            '∑': 'suma',\n            '¤': 'waluta'\n        },\n\n        'pt': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'e',\n            '|': 'ou',\n            '<': 'menor que',\n            '>': 'maior que',\n            '∑': 'soma',\n            '¤': 'moeda'\n        },\n\n        'ro': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'dragoste',\n            '&': 'si',\n            '|': 'sau',\n            '<': 'mai mic ca',\n            '>': 'mai mare ca',\n            '∑': 'suma',\n            '¤': 'valuta'\n        },\n\n        'ru': {\n            '∆': 'delta',\n            '∞': 'beskonechno',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'ili',\n            '<': 'menshe',\n            '>': 'bolshe',\n            '∑': 'summa',\n            '¤': 'valjuta'\n        },\n\n        'sk': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'alebo',\n            '<': 'menej ako',\n            '>': 'viac ako',\n            '∑': 'sucet',\n            '¤': 'mena'\n        },\n\n        'sr': {},\n\n        'tr': {\n            '∆': 'delta',\n            '∞': 'sonsuzluk',\n            '♥': 'ask',\n            '&': 've',\n            '|': 'veya',\n            '<': 'kucuktur',\n            '>': 'buyuktur',\n            '∑': 'toplam',\n            '¤': 'para birimi'\n        },\n\n        'uk': {\n            '∆': 'delta',\n            '∞': 'bezkinechnist',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'abo',\n            '<': 'menshe',\n            '>': 'bilshe',\n            '∑': 'suma',\n            '¤': 'valjuta'\n        },\n\n        'vn': {\n            '∆': 'delta',\n            '∞': 'vo cuc',\n            '♥': 'yeu',\n            '&': 'va',\n            '|': 'hoac',\n            '<': 'nho hon',\n            '>': 'lon hon',\n            '∑': 'tong',\n            '¤': 'tien te'\n        }\n    };\n\n    var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\n\n    var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\n\n    var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\n\n    /**\n     * getSlug\n     * @param  {string} input input string\n     * @param  {object|string} opts config object or separator string/char\n     * @api    public\n     * @return {string}  sluggified string\n     */\n    var getSlug = function getSlug(input, opts) {\n        var separator = '-';\n        var result = '';\n        var diatricString = '';\n        var convertSymbols = true;\n        var customReplacements = {};\n        var maintainCase;\n        var titleCase;\n        var truncate;\n        var uricFlag;\n        var uricNoSlashFlag;\n        var markFlag;\n        var symbol;\n        var langChar;\n        var lucky;\n        var i;\n        var ch;\n        var l;\n        var lastCharWasSymbol;\n        var lastCharWasDiatric;\n        var allowedChars = '';\n\n        if (typeof input !== 'string') {\n            return '';\n        }\n\n        if (typeof opts === 'string') {\n            separator = opts;\n        }\n\n        symbol = symbolMap.en;\n        langChar = langCharMap.en;\n\n        if (typeof opts === 'object') {\n            maintainCase = opts.maintainCase || false;\n            customReplacements = (opts.custom && typeof opts.custom === 'object') ? opts.custom : customReplacements;\n            truncate = (+opts.truncate > 1 && opts.truncate) || false;\n            uricFlag = opts.uric || false;\n            uricNoSlashFlag = opts.uricNoSlash || false;\n            markFlag = opts.mark || false;\n            convertSymbols = (opts.symbols === false || opts.lang === false) ? false : true;\n            separator = opts.separator || separator;\n\n            if (uricFlag) {\n                allowedChars += uricChars;\n            }\n\n            if (uricNoSlashFlag) {\n                allowedChars += uricNoSlashChars;\n            }\n\n            if (markFlag) {\n                allowedChars += markChars;\n            }\n\n            symbol = (opts.lang && symbolMap[opts.lang] && convertSymbols) ?\n                symbolMap[opts.lang] : (convertSymbols ? symbolMap.en : {});\n\n            langChar = (opts.lang && langCharMap[opts.lang]) ?\n                langCharMap[opts.lang] :\n                opts.lang === false || opts.lang === true ? {} : langCharMap.en;\n\n            // if titleCase config is an Array, rewrite to object format\n            if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\n                opts.titleCase.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n\n                titleCase = true;\n            } else {\n                titleCase = !!opts.titleCase;\n            }\n\n            // if custom config is an Array, rewrite to object format\n            if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\n                opts.custom.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n            }\n\n            // custom replacements\n            Object.keys(customReplacements).forEach(function (v) {\n                var r;\n\n                if (v.length > 1) {\n                    r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\n                } else {\n                    r = new RegExp(escapeChars(v), 'gi');\n                }\n\n                input = input.replace(r, customReplacements[v]);\n            });\n\n            // add all custom replacement to allowed charlist\n            for (ch in customReplacements) {\n                allowedChars += ch;\n            }\n        }\n\n        allowedChars += separator;\n\n        // escape all necessary chars\n        allowedChars = escapeChars(allowedChars);\n\n        // trim whitespaces\n        input = input.replace(/(^\\s+|\\s+$)/g, '');\n\n        lastCharWasSymbol = false;\n        lastCharWasDiatric = false;\n\n        for (i = 0, l = input.length; i < l; i++) {\n            ch = input[i];\n\n            if (isReplacedCustomChar(ch, customReplacements)) {\n                // don't convert a already converted char\n                lastCharWasSymbol = false;\n            } else if (langChar[ch]) {\n                // process language specific diactrics chars conversion\n                ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\n\n                lastCharWasSymbol = false;\n            } else if (ch in charMap) {\n                // the transliteration changes entirely when some special characters are added\n                if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\n                    diatricString += ch;\n                    ch = '';\n                } else if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + charMap[ch];\n                    diatricString = '';\n                } else {\n                    // process diactrics chars\n                    ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\n                }\n\n                lastCharWasSymbol = false;\n                lastCharWasDiatric = false;\n            } else if (ch in diatricMap) {\n                diatricString += ch;\n                ch = '';\n                // end of string, put the whole meaningful word\n                if (i === l - 1) {\n                    ch = diatricMap[diatricString];\n                }\n                lastCharWasDiatric = true;\n            } else if (\n                // process symbol chars\n                symbol[ch] && !(uricFlag && uricChars\n                    .indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars\n                    // .indexOf(ch) !== -1) && !(markFlag && markChars\n                    .indexOf(ch) !== -1)) {\n                ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\n                ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\n\n                lastCharWasSymbol = true;\n            } else {\n                if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + ch;\n                    diatricString = '';\n                    lastCharWasDiatric = false;\n                } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\n                    // process latin chars\n                    ch = ' ' + ch;\n                }\n                lastCharWasSymbol = false;\n            }\n\n            // add allowed chars\n            result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\n        }\n\n        if (titleCase) {\n            result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\n                var j = i.toUpperCase() + (r !== null ? r : '');\n                return (Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0) ? j : j.toLowerCase();\n            });\n        }\n\n        // eliminate duplicate separators\n        // add separator\n        // trim separators from start and end\n        result = result.replace(/\\s+/g, separator)\n            .replace(new RegExp('\\\\' + separator + '+', 'g'), separator)\n            .replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\n\n        if (truncate && result.length > truncate) {\n            lucky = result.charAt(truncate) === separator;\n            result = result.slice(0, truncate);\n\n            if (!lucky) {\n                result = result.slice(0, result.lastIndexOf(separator));\n            }\n        }\n\n        if (!maintainCase && !titleCase) {\n            result = result.toLowerCase();\n        }\n\n        return result;\n    };\n\n    /**\n     * createSlug curried(opts)(input)\n     * @param   {object|string} opts config object or input string\n     * @return  {Function} function getSlugWithConfig()\n     **/\n    var createSlug = function createSlug(opts) {\n\n        /**\n         * getSlugWithConfig\n         * @param   {string} input string\n         * @return  {string} slug string\n         */\n        return function getSlugWithConfig(input) {\n            return getSlug(input, opts);\n        };\n    };\n\n    /**\n     * escape Chars\n     * @param   {string} input string\n     */\n    var escapeChars = function escapeChars(input) {\n        return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n    };\n\n    /**\n     * check if the char is an already converted char from custom list\n     * @param   {char} ch character to check\n     * @param   {object} customReplacements custom translation map\n     */\n    var isReplacedCustomChar = function (ch, customReplacements) {\n        for (var c in customReplacements) {\n            if (customReplacements[c] === ch) {\n                return true;\n            }\n        }\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n\n        // export functions for use in Node\n        module.exports = getSlug;\n        module.exports.createSlug = createSlug;\n    } else if (typeof define !== 'undefined' && define.amd) {\n\n        // export function for use in AMD\n        define([], function () {\n            return getSlug;\n        });\n    } else {\n\n        // don't overwrite global if exists\n        try {\n            if (root.getSlug || root.createSlug) {\n                throw 'speakingurl: globals exists /(getSlug|createSlug)/';\n            } else {\n                root.getSlug = getSlug;\n                root.createSlug = createSlug;\n            }\n        } catch (e) {}\n    }\n})(this);"]},"metadata":{},"sourceType":"script"}