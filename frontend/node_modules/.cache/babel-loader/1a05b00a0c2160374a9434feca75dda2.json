{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/pair/ReferenceQuickCreateInput.js\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-final-form\";\nimport { Button, SaveButton, useCreate, useNotify, useTranslate, FormWithRedirect, AutocompleteInput } from \"react-admin\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, makeStyles } from \"@material-ui/core\";\nimport IconContentAdd from \"@material-ui/icons/Add\";\nimport IconCancel from \"@material-ui/icons/Cancel\";\nimport { ReferenceInput } from \"@semapps/semantic-data-provider\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  dialogTitle: {\n    paddingBottom: 0\n  }\n});\n\nconst ReferenceQuickCreateInput = ({\n  children,\n  selectOptionText,\n  validate,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [showDialog, setShowDialog] = useState(false);\n  const [version, setVersion] = useState(0);\n  const [create, {\n    loading\n  }] = useCreate(rest.reference);\n  const notify = useNotify();\n  const translate = useTranslate();\n  const form = useForm();\n\n  const handleSubmit = async values => {\n    create({\n      payload: {\n        data: values\n      }\n    }, {\n      onSuccess: ({\n        data\n      }) => {\n        setShowDialog(false); // Update the comment form to target the newly created post\n\n        form.change(rest.source, data.id); // Increase the version so that ReferenceInput reload all the available values\n\n        setVersion(version + 1);\n      },\n      onFailure: ({\n        error\n      }) => {\n        notify(error.message, \"error\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReferenceInput, Object.assign({\n    key: version\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AutocompleteInput, {\n    optionText: selectOptionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowDialog(true),\n    label: \"ra.action.create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconContentAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    open: showDialog,\n    onClose: () => setShowDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    className: classes.dialogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, translate(\"ra.action.create\")), /*#__PURE__*/React.createElement(FormWithRedirect, {\n    validate: validate,\n    resource: rest.reference,\n    save: handleSubmit,\n    render: ({\n      handleSubmitWithRedirect,\n      pristine,\n      saving\n    }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, children), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"ra.action.cancel\",\n      onClick: () => setShowDialog(false),\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconCancel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(SaveButton, {\n      handleSubmitWithRedirect: handleSubmitWithRedirect,\n      pristine: pristine,\n      saving: saving,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ReferenceQuickCreateInput;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/pair/ReferenceQuickCreateInput.js"],"names":["React","useState","useForm","Button","SaveButton","useCreate","useNotify","useTranslate","FormWithRedirect","AutocompleteInput","Dialog","DialogTitle","DialogContent","DialogActions","makeStyles","IconContentAdd","IconCancel","ReferenceInput","useStyles","root","display","alignItems","dialogTitle","paddingBottom","ReferenceQuickCreateInput","children","selectOptionText","validate","rest","classes","showDialog","setShowDialog","version","setVersion","create","loading","reference","notify","translate","form","handleSubmit","values","payload","data","onSuccess","change","source","id","onFailure","error","message","handleSubmitWithRedirect","pristine","saving"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-final-form\";\nimport {\n  Button,\n  SaveButton,\n  useCreate,\n  useNotify,\n  useTranslate,\n  FormWithRedirect,\n  AutocompleteInput,\n} from \"react-admin\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  makeStyles,\n} from \"@material-ui/core\";\nimport IconContentAdd from \"@material-ui/icons/Add\";\nimport IconCancel from \"@material-ui/icons/Cancel\";\nimport { ReferenceInput } from \"@semapps/semantic-data-provider\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  dialogTitle: {\n    paddingBottom: 0,\n  },\n});\n\nconst ReferenceQuickCreateInput = ({\n  children,\n  selectOptionText,\n  validate,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [version, setVersion] = useState(0);\n  const [create, { loading }] = useCreate(rest.reference);\n  const notify = useNotify();\n  const translate = useTranslate();\n  const form = useForm();\n\n  const handleSubmit = async (values) => {\n    create(\n      { payload: { data: values } },\n      {\n        onSuccess: ({ data }) => {\n          setShowDialog(false);\n          // Update the comment form to target the newly created post\n          form.change(rest.source, data.id);\n          // Increase the version so that ReferenceInput reload all the available values\n          setVersion(version + 1);\n        },\n        onFailure: ({ error }) => {\n          notify(error.message, \"error\");\n        },\n      }\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* Updating the key will force ReferenceInput to reload the available values */}\n      <ReferenceInput key={version} {...rest}>\n        <AutocompleteInput optionText={selectOptionText} />\n      </ReferenceInput>\n      <Button onClick={() => setShowDialog(true)} label=\"ra.action.create\">\n        <IconContentAdd />\n      </Button>\n      <Dialog fullWidth open={showDialog} onClose={() => setShowDialog(false)}>\n        <DialogTitle className={classes.dialogTitle}>\n          {translate(\"ra.action.create\")}\n        </DialogTitle>\n        <FormWithRedirect\n          validate={validate}\n          resource={rest.reference}\n          save={handleSubmit}\n          render={({ handleSubmitWithRedirect, pristine, saving }) => (\n            <>\n              <DialogContent>{children}</DialogContent>\n              <DialogActions>\n                <Button\n                  label=\"ra.action.cancel\"\n                  onClick={() => setShowDialog(false)}\n                  disabled={loading}\n                >\n                  <IconCancel />\n                </Button>\n                <SaveButton\n                  handleSubmitWithRedirect={handleSubmitWithRedirect}\n                  pristine={pristine}\n                  saving={saving}\n                  disabled={loading}\n                />\n              </DialogActions>\n            </>\n          )}\n        />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ReferenceQuickCreateInput;\n"]},"metadata":{},"sourceType":"module"}