{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Person/specializedForm/EducationNationalForm.js\";\nimport React from \"react\";\nimport { SimpleForm, TextInput, SelectInput, AutocompleteInput, Toolbar, required } from \"react-admin\";\nimport MarkdownInput from \"ra-input-markdown\";\nimport { LargeLabel } from \"@semapps/archipelago-layout\";\nimport { teachingLevel, academies, schoolType } from \"../../../constants\";\nimport ReferenceQuickCreateInput from \"../../../pair/ReferenceQuickCreateInput\";\nimport PairLocationInput from \"../../../pair/PairLocationInput\"; // export const EducationNationalForm = ({ mode, ...rest }) => (\n//   <>\n//     <LargeLabel>Profil</LargeLabel>\n//     <TextInput\n//       {...rest}\n//       source=\"pair:label\"\n//       label=\"Prénom ou Nom\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <AutocompleteInput\n//       {...rest}\n//       source=\"TODO\"\n//       label=\"Académie\"\n//       validate={required()}\n//       choices={academies}\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"TODO\"\n//       label=\"Poste occupé\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <SelectInput\n//       {...rest}\n//       source=\"cd:teachingLevel\"\n//       validate={required()}\n//       choices={teachingLevel}\n//     />\n//     <SelectInput\n//       {...rest}\n//       source=\"cd:structureType\"\n//       label=\"Type d’école\"\n//       validate={required()}\n//       choices={schoolType}\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"cd:structureName\"\n//       label=\"Nom de l’école\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"cd:structureLocality\"\n//       label=\"Commune de l’école\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <LargeLabel>Pratique de la classe dehors</LargeLabel>\n//     <ReferenceQuickCreateInput\n//       {...rest}\n//       reference=\"Place\"\n//       source=\"pair:hasLocation\"\n//       selectOptionText=\"pair:label\"\n//       label=\"Où faite-vous classe dehors?\"\n//       perPage={1000}\n//       validate={required()}\n//       helperText=\"C’est ce lieu qui apparaîtra sur la carte\"\n//     >\n//       <PairLocationInput\n//         label=\"Adresse\"\n//         source=\"pair:hasPostalAddress\"\n//         fullWidth\n//       />\n//       <TextInput\n//         label=\"Nom\"\n//         source=\"pair:label\"\n//         validate={required()}\n//         fullWidth\n//       />\n//       <MarkdownInput\n//         label=\"Description\"\n//         source=\"pair:description\"\n//         multiline\n//         fullWidth\n//       />\n//     </ReferenceQuickCreateInput>\n//     <TextInput\n//       {...rest}\n//       source=\"cd:practiceTime\"\n//       label=\"Depuis quand pratiquez-vous la classe dehors ?\"\n//       fullWidth\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"cd:practiceFrequency\"\n//       label=\"A quelle fréquence ?\"\n//       fullWidth\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"pair:webPage\"\n//       label=\"Avez-vous un site internet, un blog et/ou un compte sur un réseau social ?\"\n//       fullWidth\n//     />\n//     {mode === \"create\" && (\n//       <>\n//         <LargeLabel>Contact</LargeLabel>\n//         <TextInput\n//           {...rest}\n//           source=\"pair:e-mail\"\n//           label=\"Adresse mail\"\n//           helperText=\"Votre adresse mail n'apparaîtra pas publiquement. On pourra vous écrire via un formulaire de contact.\"\n//           fullWidth\n//         />\n//       </>\n//     )}\n//   </>\n// );\n\nconst EducationNationalForm = [/*#__PURE__*/React.createElement(LargeLabel, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 3\n  }\n}, \"Profil\"), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"pair:label\",\n  label: \"Pr\\xE9nom ou Nom\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(AutocompleteInput, Object.assign({}, rest, {\n  source: \"TODO\",\n  label: \"Acad\\xE9mie\",\n  validate: required(),\n  choices: academies,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"TODO\",\n  label: \"Poste occup\\xE9\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(SelectInput, Object.assign({}, rest, {\n  source: \"cd:teachingLevel\",\n  validate: required(),\n  choices: teachingLevel,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(SelectInput, Object.assign({}, rest, {\n  source: \"cd:structureType\",\n  label: \"Type d\\u2019\\xE9cole\",\n  validate: required(),\n  choices: schoolType,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"cd:structureName\",\n  label: \"Nom de l\\u2019\\xE9cole\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"cd:structureLocality\",\n  label: \"Commune de l\\u2019\\xE9cole\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(LargeLabel, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 26\n  }\n}, \"Pratique de la classe dehors\"), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(ReferenceQuickCreateInput, Object.assign({}, rest, {\n  reference: \"Place\",\n  source: \"pair:hasLocation\",\n  selectOptionText: \"pair:label\",\n  label: \"O\\xF9 faite-vous classe dehors?\",\n  perPage: 1000,\n  validate: required(),\n  helperText: \"C\\u2019est ce lieu qui appara\\xEEtra sur la carte\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(PairLocationInput, {\n  label: \"Adresse\",\n  source: \"pair:hasPostalAddress\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  label: \"Nom\",\n  source: \"pair:label\",\n  validate: required(),\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(MarkdownInput, {\n  label: \"Description\",\n  source: \"pair:description\",\n  multiline: true,\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 7\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"cd:practiceTime\",\n  label: \"Depuis quand pratiquez-vous la classe dehors ?\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"cd:practiceFrequency\",\n  label: \"A quelle fr\\xE9quence ?\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"pair:webPage\",\n  label: \"Avez-vous un site internet, un blog et/ou un compte sur un r\\xE9seau social ?\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }\n})), ({\n  mode,\n  ...rest\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LargeLabel, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 7\n  }\n}, \"Contact\"), /*#__PURE__*/React.createElement(TextInput, Object.assign({}, rest, {\n  source: \"pair:e-mail\",\n  label: \"Adresse mail\",\n  helperText: \"Votre adresse mail n'appara\\xEEtra pas publiquement. On pourra vous \\xE9crire via un formulaire de contact.\",\n  fullWidth: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 7\n  }\n})))];\nexport default EducationNationalForm;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Person/specializedForm/EducationNationalForm.js"],"names":["React","SimpleForm","TextInput","SelectInput","AutocompleteInput","Toolbar","required","MarkdownInput","LargeLabel","teachingLevel","academies","schoolType","ReferenceQuickCreateInput","PairLocationInput","EducationNationalForm","mode","rest"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  SimpleForm,\n  TextInput,\n  SelectInput,\n  AutocompleteInput,\n  Toolbar,\n  required,\n} from \"react-admin\";\nimport MarkdownInput from \"ra-input-markdown\";\nimport { LargeLabel } from \"@semapps/archipelago-layout\";\n\nimport { teachingLevel, academies, schoolType } from \"../../../constants\";\nimport ReferenceQuickCreateInput from \"../../../pair/ReferenceQuickCreateInput\";\nimport PairLocationInput from \"../../../pair/PairLocationInput\";\n\n// export const EducationNationalForm = ({ mode, ...rest }) => (\n//   <>\n//     <LargeLabel>Profil</LargeLabel>\n//     <TextInput\n//       {...rest}\n//       source=\"pair:label\"\n//       label=\"Prénom ou Nom\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <AutocompleteInput\n//       {...rest}\n//       source=\"TODO\"\n//       label=\"Académie\"\n//       validate={required()}\n//       choices={academies}\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"TODO\"\n//       label=\"Poste occupé\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <SelectInput\n//       {...rest}\n//       source=\"cd:teachingLevel\"\n//       validate={required()}\n//       choices={teachingLevel}\n//     />\n//     <SelectInput\n//       {...rest}\n//       source=\"cd:structureType\"\n//       label=\"Type d’école\"\n//       validate={required()}\n//       choices={schoolType}\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"cd:structureName\"\n//       label=\"Nom de l’école\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"cd:structureLocality\"\n//       label=\"Commune de l’école\"\n//       validate={required()}\n//       fullWidth\n//     />\n//     <LargeLabel>Pratique de la classe dehors</LargeLabel>\n//     <ReferenceQuickCreateInput\n//       {...rest}\n//       reference=\"Place\"\n//       source=\"pair:hasLocation\"\n//       selectOptionText=\"pair:label\"\n//       label=\"Où faite-vous classe dehors?\"\n//       perPage={1000}\n//       validate={required()}\n//       helperText=\"C’est ce lieu qui apparaîtra sur la carte\"\n//     >\n//       <PairLocationInput\n//         label=\"Adresse\"\n//         source=\"pair:hasPostalAddress\"\n//         fullWidth\n//       />\n//       <TextInput\n//         label=\"Nom\"\n//         source=\"pair:label\"\n//         validate={required()}\n//         fullWidth\n//       />\n//       <MarkdownInput\n//         label=\"Description\"\n//         source=\"pair:description\"\n//         multiline\n//         fullWidth\n//       />\n//     </ReferenceQuickCreateInput>\n//     <TextInput\n//       {...rest}\n//       source=\"cd:practiceTime\"\n//       label=\"Depuis quand pratiquez-vous la classe dehors ?\"\n//       fullWidth\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"cd:practiceFrequency\"\n//       label=\"A quelle fréquence ?\"\n//       fullWidth\n//     />\n//     <TextInput\n//       {...rest}\n//       source=\"pair:webPage\"\n//       label=\"Avez-vous un site internet, un blog et/ou un compte sur un réseau social ?\"\n//       fullWidth\n//     />\n//     {mode === \"create\" && (\n//       <>\n//         <LargeLabel>Contact</LargeLabel>\n//         <TextInput\n//           {...rest}\n//           source=\"pair:e-mail\"\n//           label=\"Adresse mail\"\n//           helperText=\"Votre adresse mail n'apparaîtra pas publiquement. On pourra vous écrire via un formulaire de contact.\"\n//           fullWidth\n//         />\n//       </>\n//     )}\n//   </>\n// );\n\nconst EducationNationalForm = [\n  <LargeLabel>Profil</LargeLabel>,\n  ({ mode, ...rest }) => (\n    <TextInput\n      {...rest}\n      source=\"pair:label\"\n      label=\"Prénom ou Nom\"\n      validate={required()}\n      fullWidth\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <AutocompleteInput\n      {...rest}\n      source=\"TODO\"\n      label=\"Académie\"\n      validate={required()}\n      choices={academies}\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <TextInput\n      {...rest}\n      source=\"TODO\"\n      label=\"Poste occupé\"\n      validate={required()}\n      fullWidth\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <SelectInput\n      {...rest}\n      source=\"cd:teachingLevel\"\n      validate={required()}\n      choices={teachingLevel}\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <SelectInput\n      {...rest}\n      source=\"cd:structureType\"\n      label=\"Type d’école\"\n      validate={required()}\n      choices={schoolType}\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <TextInput\n      {...rest}\n      source=\"cd:structureName\"\n      label=\"Nom de l’école\"\n      validate={required()}\n      fullWidth\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <TextInput\n      {...rest}\n      source=\"cd:structureLocality\"\n      label=\"Commune de l’école\"\n      validate={required()}\n      fullWidth\n    />\n  ),\n  ({ mode, ...rest }) => <LargeLabel>Pratique de la classe dehors</LargeLabel>,\n  ({ mode, ...rest }) => (\n    <ReferenceQuickCreateInput\n      {...rest}\n      reference=\"Place\"\n      source=\"pair:hasLocation\"\n      selectOptionText=\"pair:label\"\n      label=\"Où faite-vous classe dehors?\"\n      perPage={1000}\n      validate={required()}\n      helperText=\"C’est ce lieu qui apparaîtra sur la carte\"\n    >\n      <PairLocationInput\n        label=\"Adresse\"\n        source=\"pair:hasPostalAddress\"\n        fullWidth\n      />\n      <TextInput\n        label=\"Nom\"\n        source=\"pair:label\"\n        validate={required()}\n        fullWidth\n      />\n      <MarkdownInput\n        label=\"Description\"\n        source=\"pair:description\"\n        multiline\n        fullWidth\n      />\n    </ReferenceQuickCreateInput>\n  ),\n  ({ mode, ...rest }) => (\n    <TextInput\n      {...rest}\n      source=\"cd:practiceTime\"\n      label=\"Depuis quand pratiquez-vous la classe dehors ?\"\n      fullWidth\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <TextInput\n      {...rest}\n      source=\"cd:practiceFrequency\"\n      label=\"A quelle fréquence ?\"\n      fullWidth\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <TextInput\n      {...rest}\n      source=\"pair:webPage\"\n      label=\"Avez-vous un site internet, un blog et/ou un compte sur un réseau social ?\"\n      fullWidth\n    />\n  ),\n  ({ mode, ...rest }) => (\n    <>\n      <LargeLabel>Contact</LargeLabel>\n      <TextInput\n        {...rest}\n        source=\"pair:e-mail\"\n        label=\"Adresse mail\"\n        helperText=\"Votre adresse mail n'apparaîtra pas publiquement. On pourra vous écrire via un formulaire de contact.\"\n        fullWidth\n      />\n    </>\n  ),\n];\nexport default EducationNationalForm;\n"]},"metadata":{},"sourceType":"module"}