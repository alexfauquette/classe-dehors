{"ast":null,"code":"import React from'react';import{MultiViewsList,SimpleList}from'@semapps/archipelago-layout';import{MapList}from'@semapps/geo-components';import{Avatar}from\"@material-ui/core\";import MapIcon from'@material-ui/icons/Map';import ListIcon from'@material-ui/icons/List';import PlaceIcon from'@material-ui/icons/Place';import MarkdownIntroduction from\"../../markdown/MarkdownIntroduction\";var PlaceList=function PlaceList(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MarkdownIntroduction,{pageId:\"place-introduction\"}),/*#__PURE__*/React.createElement(MultiViewsList,Object.assign({views:{map:{label:'Carte',icon:MapIcon,perPage:500,pagination:false,list:/*#__PURE__*/React.createElement(MapList,{latitude:function latitude(record){var _record$pairHasPosta;return record===null||record===void 0?void 0:(_record$pairHasPosta=record['pair:hasPostalAddress'])===null||_record$pairHasPosta===void 0?void 0:_record$pairHasPosta['pair:latitude'];},longitude:function longitude(record){var _record$pairHasPosta2;return record===null||record===void 0?void 0:(_record$pairHasPosta2=record['pair:hasPostalAddress'])===null||_record$pairHasPosta2===void 0?void 0:_record$pairHasPosta2['pair:longitude'];},label:function label(record){return record===null||record===void 0?void 0:record['pair:label'];},description:function description(record){var _record$pairHasPosta3;return record===null||record===void 0?void 0:(_record$pairHasPosta3=record['pair:hasPostalAddress'])===null||_record$pairHasPosta3===void 0?void 0:_record$pairHasPosta3['pair:label'];},scrollWheelZoom:true})},list:{label:'Liste',icon:ListIcon,sort:{field:'pair:label',order:'DESC'},perPage:25,list:/*#__PURE__*/React.createElement(SimpleList,{primaryText:function primaryText(record){return record['pair:label'];},secondaryText:function secondaryText(record){var _record$pairHasPosta4;return(_record$pairHasPosta4=record['pair:hasPostalAddress'])===null||_record$pairHasPosta4===void 0?void 0:_record$pairHasPosta4['pair:label'];},leftAvatar:function leftAvatar(){return/*#__PURE__*/React.createElement(Avatar,{width:\"100%\"},/*#__PURE__*/React.createElement(PlaceIcon,null));},linkType:\"show\"})}}},props)));};export default PlaceList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceList.js"],"names":["React","MultiViewsList","SimpleList","MapList","Avatar","MapIcon","ListIcon","PlaceIcon","MarkdownIntroduction","PlaceList","props","map","label","icon","perPage","pagination","list","record","sort","field","order"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,CAAyBC,UAAzB,KAA2C,6BAA3C,CACA,OAASC,OAAT,KAAwB,yBAAxB,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,qCAAjC,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,qBACrB,qDACE,oBAAC,oBAAD,EAAsB,MAAM,CAAC,oBAA7B,EADF,cAEE,oBAAC,cAAD,gBACE,KAAK,CAAE,CACLC,GAAG,CAAE,CACHC,KAAK,CAAE,OADJ,CAEHC,IAAI,CAAER,OAFH,CAGHS,OAAO,CAAE,GAHN,CAIHC,UAAU,CAAE,KAJT,CAKHC,IAAI,cACF,oBAAC,OAAD,EACE,QAAQ,CAAE,kBAAAC,MAAM,iCAAIA,CAAAA,MAAJ,SAAIA,MAAJ,uCAAIA,MAAM,CAAG,uBAAH,CAAV,+CAAI,qBAAoC,eAApC,CAAJ,EADlB,CAEE,SAAS,CAAE,mBAAAA,MAAM,kCAAIA,CAAAA,MAAJ,SAAIA,MAAJ,wCAAIA,MAAM,CAAG,uBAAH,CAAV,gDAAI,sBAAoC,gBAApC,CAAJ,EAFnB,CAGE,KAAK,CAAE,eAAAA,MAAM,QAAIA,CAAAA,MAAJ,SAAIA,MAAJ,iBAAIA,MAAM,CAAG,YAAH,CAAV,EAHf,CAIE,WAAW,CAAE,qBAAAA,MAAM,kCAAIA,CAAAA,MAAJ,SAAIA,MAAJ,wCAAIA,MAAM,CAAG,uBAAH,CAAV,gDAAI,sBAAoC,YAApC,CAAJ,EAJrB,CAKE,eAAe,KALjB,EANC,CADA,CAgBLD,IAAI,CAAE,CACJJ,KAAK,CAAE,OADH,CAEJC,IAAI,CAAEP,QAFF,CAGJY,IAAI,CAAE,CAAEC,KAAK,CAAE,YAAT,CAAuBC,KAAK,CAAE,MAA9B,CAHF,CAIJN,OAAO,CAAE,EAJL,CAKJE,IAAI,cACF,oBAAC,UAAD,EACE,WAAW,CAAE,qBAAAC,MAAM,QAAIA,CAAAA,MAAM,CAAC,YAAD,CAAV,EADrB,CAEE,aAAa,CAAE,uBAAAA,MAAM,yDAAIA,MAAM,CAAC,uBAAD,CAAV,gDAAI,sBAAkC,YAAlC,CAAJ,EAFvB,CAGE,UAAU,CAAE,yCACV,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,eACE,oBAAC,SAAD,MADF,CADU,EAHd,CAQE,QAAQ,CAAC,MARX,EANE,CAhBD,CADT,EAoCMP,KApCN,EAFF,CADqB,EAAvB,CA4CA,cAAeD,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { MultiViewsList, SimpleList } from '@semapps/archipelago-layout';\nimport { MapList } from '@semapps/geo-components';\nimport { Avatar } from \"@material-ui/core\";\nimport MapIcon from '@material-ui/icons/Map';\nimport ListIcon from '@material-ui/icons/List';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\n\nconst PlaceList = props => (\n  <>\n    <MarkdownIntroduction pageId=\"place-introduction\" />\n    <MultiViewsList\n      views={{\n        map: {\n          label: 'Carte',\n          icon: MapIcon,\n          perPage: 500,\n          pagination: false,\n          list: (\n            <MapList\n              latitude={record => record?.['pair:hasPostalAddress']?.['pair:latitude']}\n              longitude={record => record?.['pair:hasPostalAddress']?.['pair:longitude']}\n              label={record => record?.['pair:label']}\n              description={record => record?.['pair:hasPostalAddress']?.['pair:label']}\n              scrollWheelZoom\n            />\n          )\n        },\n        list: {\n          label: 'Liste',\n          icon: ListIcon,\n          sort: { field: 'pair:label', order: 'DESC' },\n          perPage: 25,\n          list: (\n            <SimpleList\n              primaryText={record => record['pair:label']}\n              secondaryText={record => record['pair:hasPostalAddress']?.['pair:label']}\n              leftAvatar={() => (\n                <Avatar width=\"100%\">\n                  <PlaceIcon />\n                </Avatar>\n              )}\n              linkType=\"show\"\n            />\n          )\n        }\n      }}\n      {...props}\n      />\n    </>\n);\n\nexport default PlaceList;\n"]},"metadata":{},"sourceType":"module"}