{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceList.js\";\nimport React from \"react\";\nimport { MapList } from \"@semapps/geo-components\";\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\nimport { List } from \"react-admin\";\nimport { ShowButton, EditButton, useResourceDefinition } from \"react-admin\";\nimport { Typography } from \"@material-ui/core\";\n{\n  /* <ReferenceArrayField reference=\"Person\" source=\"pair:locationOf\">\n          <SimpleList\n            primaryText={record => record?.['pair:label']}\n            leftAvatar={() => (\n              <Avatar width=\"100%\">\n                <PersonIcon />\n              </Avatar>\n            )}\n            linkType=\"show\"\n          />\n        </ReferenceArrayField> */\n}\n\nconst PopupContent = ({\n  record,\n  basePath\n}) => {\n  const resourceDefinition = useResourceDefinition({});\n  return /*#__PURE__*/React.createElement(React.Fragment, null, record.label && /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }\n  }, record.label), record.description && /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, record.description.length > 150 ? record.description.substring(0, 150) + \"...\" : record.description), resourceDefinition.hasShow && /*#__PURE__*/React.createElement(ShowButton, {\n    basePath: basePath,\n    record: record,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), resourceDefinition.hasEdit && /*#__PURE__*/React.createElement(EditButton, {\n    basePath: basePath,\n    record: record,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst PlaceList = props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MarkdownIntroduction, {\n  pageId: \"place-introduction\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n  perPage: 1000,\n  pagination: false,\n  label: \"Carte\",\n  exporter: false,\n  actions: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(MapList, {\n  latitude: record => {\n    var _record$pairHasPosta;\n\n    return record === null || record === void 0 ? void 0 : (_record$pairHasPosta = record[\"pair:hasPostalAddress\"]) === null || _record$pairHasPosta === void 0 ? void 0 : _record$pairHasPosta[\"pair:latitude\"];\n  },\n  longitude: record => {\n    var _record$pairHasPosta2;\n\n    return record === null || record === void 0 ? void 0 : (_record$pairHasPosta2 = record[\"pair:hasPostalAddress\"]) === null || _record$pairHasPosta2 === void 0 ? void 0 : _record$pairHasPosta2[\"pair:longitude\"];\n  },\n  label: record => record === null || record === void 0 ? void 0 : record[\"pair:label\"],\n  description: record => {\n    var _record$pairHasPosta3;\n\n    return record === null || record === void 0 ? void 0 : (_record$pairHasPosta3 = record[\"pair:hasPostalAddress\"]) === null || _record$pairHasPosta3 === void 0 ? void 0 : _record$pairHasPosta3[\"pair:label\"];\n  },\n  scrollWheelZoom: true,\n  popupContent: /*#__PURE__*/React.createElement(PopupContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }\n})));\n\nexport default PlaceList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceList.js"],"names":["React","MapList","MarkdownIntroduction","List","ShowButton","EditButton","useResourceDefinition","Typography","PopupContent","record","basePath","resourceDefinition","label","description","length","substring","hasShow","hasEdit","PlaceList","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,qBAAjC,QAA8D,aAA9D;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AAED,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AAC7C,QAAMC,kBAAkB,GAAGL,qBAAqB,CAAC,EAAD,CAAhD;AACA,sBACE,0CACGG,MAAM,CAACG,KAAP,iBAAgB,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,MAAM,CAACG,KAAjC,CADnB,EAEGH,MAAM,CAACI,WAAP,iBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACI,WAAP,CAAmBC,MAAnB,GAA4B,GAA5B,GACGL,MAAM,CAACI,WAAP,CAAmBE,SAAnB,CAA6B,CAA7B,EAAgC,GAAhC,IAAuC,KAD1C,GAEGN,MAAM,CAACI,WAHb,CAHJ,EASGF,kBAAkB,CAACK,OAAnB,iBACC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEN,QAAtB;AAAgC,IAAA,MAAM,EAAED,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAYGE,kBAAkB,CAACM,OAAnB,iBACC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEP,QAAtB;AAAgC,IAAA,MAAM,EAAED,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAkBD,CApBD;;AAsBA,MAAMS,SAAS,GAAIC,KAAD,iBAChB,uDACE,oBAAC,oBAAD;AAAsB,EAAA,MAAM,EAAC,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,IAAD,oBACMA,KADN;AAEE,EAAA,OAAO,EAAE,IAFX;AAGE,EAAA,UAAU,EAAE,KAHd;AAIE,EAAA,KAAK,EAAC,OAJR;AAKE,EAAA,QAAQ,EAAE,KALZ;AAME,EAAA,OAAO,EAAE,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAQE,oBAAC,OAAD;AACE,EAAA,QAAQ,EAAGV,MAAD;AAAA;;AAAA,WACRA,MADQ,aACRA,MADQ,+CACRA,MAAM,CAAG,uBAAH,CADE,yDACR,qBAAoC,eAApC,CADQ;AAAA,GADZ;AAIE,EAAA,SAAS,EAAGA,MAAD;AAAA;;AAAA,WACTA,MADS,aACTA,MADS,gDACTA,MAAM,CAAG,uBAAH,CADG,0DACT,sBAAoC,gBAApC,CADS;AAAA,GAJb;AAOE,EAAA,KAAK,EAAGA,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAG,YAAH,CAP3B;AAQE,EAAA,WAAW,EAAGA,MAAD;AAAA;;AAAA,WACXA,MADW,aACXA,MADW,gDACXA,MAAM,CAAG,uBAAH,CADK,0DACX,sBAAoC,YAApC,CADW;AAAA,GARf;AAWE,EAAA,eAAe,MAXjB;AAYE,EAAA,YAAY,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,CAFF,CADF;;AA6BA,eAAeS,SAAf","sourcesContent":["import React from \"react\";\nimport { MapList } from \"@semapps/geo-components\";\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\nimport { List } from \"react-admin\";\nimport { ShowButton, EditButton, useResourceDefinition } from \"react-admin\";\nimport { Typography } from \"@material-ui/core\";\n{\n  /* <ReferenceArrayField reference=\"Person\" source=\"pair:locationOf\">\n          <SimpleList\n            primaryText={record => record?.['pair:label']}\n            leftAvatar={() => (\n              <Avatar width=\"100%\">\n                <PersonIcon />\n              </Avatar>\n            )}\n            linkType=\"show\"\n          />\n        </ReferenceArrayField> */\n}\n\nconst PopupContent = ({ record, basePath }) => {\n  const resourceDefinition = useResourceDefinition({});\n  return (\n    <>\n      {record.label && <Typography variant=\"h5\">{record.label}</Typography>}\n      {record.description && (\n        <Typography>\n          {record.description.length > 150\n            ? record.description.substring(0, 150) + \"...\"\n            : record.description}\n        </Typography>\n      )}\n      {resourceDefinition.hasShow && (\n        <ShowButton basePath={basePath} record={record} />\n      )}\n      {resourceDefinition.hasEdit && (\n        <EditButton basePath={basePath} record={record} />\n      )}\n    </>\n  );\n};\n\nconst PlaceList = (props) => (\n  <>\n    <MarkdownIntroduction pageId=\"place-introduction\" />\n    <List\n      {...props}\n      perPage={1000}\n      pagination={false}\n      label=\"Carte\"\n      exporter={false}\n      actions={false}\n    >\n      <MapList\n        latitude={(record) =>\n          record?.[\"pair:hasPostalAddress\"]?.[\"pair:latitude\"]\n        }\n        longitude={(record) =>\n          record?.[\"pair:hasPostalAddress\"]?.[\"pair:longitude\"]\n        }\n        label={(record) => record?.[\"pair:label\"]}\n        description={(record) =>\n          record?.[\"pair:hasPostalAddress\"]?.[\"pair:label\"]\n        }\n        scrollWheelZoom\n        popupContent={<PopupContent />}\n      />\n    </List>\n  </>\n);\n\nexport default PlaceList;\n"]},"metadata":{},"sourceType":"module"}