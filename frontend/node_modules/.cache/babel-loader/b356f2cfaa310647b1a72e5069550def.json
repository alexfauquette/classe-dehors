{"ast":null,"code":"import React from\"react\";import{MultiViewsList,SimpleList}from\"@semapps/archipelago-layout\";import{MapList}from\"@semapps/geo-components\";import{Avatar}from\"@material-ui/core\";import MapIcon from\"@material-ui/icons/Map\";import ListIcon from\"@material-ui/icons/List\";import PlaceIcon from\"@material-ui/icons/Place\";import MarkdownIntroduction from\"../../markdown/MarkdownIntroduction\";var PlaceList=function PlaceList(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MarkdownIntroduction,{pageId:\"place-introduction\"}),/*#__PURE__*/React.createElement(MultiViewsList,Object.assign({views:{map:{label:\"Carte\",icon:MapIcon,perPage:500,pagination:false,list:/*#__PURE__*/React.createElement(MapList,{latitude:function latitude(record){var _record$pairHasPosta;console.log(record);return record===null||record===void 0?void 0:(_record$pairHasPosta=record[\"pair:hasPostalAddress\"])===null||_record$pairHasPosta===void 0?void 0:_record$pairHasPosta[\"pair:latitude\"];},longitude:function longitude(record){var _record$pairHasPosta2;return record===null||record===void 0?void 0:(_record$pairHasPosta2=record[\"pair:hasPostalAddress\"])===null||_record$pairHasPosta2===void 0?void 0:_record$pairHasPosta2[\"pair:longitude\"];},label:function label(record){return record===null||record===void 0?void 0:record[\"pair:label\"];},description:function description(record){var _record$pairHasPosta3;return record===null||record===void 0?void 0:(_record$pairHasPosta3=record[\"pair:hasPostalAddress\"])===null||_record$pairHasPosta3===void 0?void 0:_record$pairHasPosta3[\"pair:label\"];},scrollWheelZoom:true})},list:{label:\"Liste\",icon:ListIcon,sort:{field:\"pair:label\",order:\"DESC\"},perPage:25,list:/*#__PURE__*/React.createElement(SimpleList,{primaryText:function primaryText(record){return record[\"pair:label\"];},secondaryText:function secondaryText(record){var _record$pairHasPosta4;return(_record$pairHasPosta4=record[\"pair:hasPostalAddress\"])===null||_record$pairHasPosta4===void 0?void 0:_record$pairHasPosta4[\"pair:label\"];},leftAvatar:function leftAvatar(){return/*#__PURE__*/React.createElement(Avatar,{width:\"100%\"},/*#__PURE__*/React.createElement(PlaceIcon,null));},linkType:\"show\"})}}},props)));};export default PlaceList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Place/PlaceList.js"],"names":["React","MultiViewsList","SimpleList","MapList","Avatar","MapIcon","ListIcon","PlaceIcon","MarkdownIntroduction","PlaceList","props","map","label","icon","perPage","pagination","list","record","console","log","sort","field","order"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,CAAyBC,UAAzB,KAA2C,6BAA3C,CACA,OAASC,OAAT,KAAwB,yBAAxB,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,qCAAjC,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,qBAChB,qDACE,oBAAC,oBAAD,EAAsB,MAAM,CAAC,oBAA7B,EADF,cAEE,oBAAC,cAAD,gBACE,KAAK,CAAE,CACLC,GAAG,CAAE,CACHC,KAAK,CAAE,OADJ,CAEHC,IAAI,CAAER,OAFH,CAGHS,OAAO,CAAE,GAHN,CAIHC,UAAU,CAAE,KAJT,CAKHC,IAAI,cACF,oBAAC,OAAD,EACE,QAAQ,CAAE,kBAACC,MAAD,CAAY,0BACpBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACA,MAAOA,CAAAA,MAAP,SAAOA,MAAP,uCAAOA,MAAM,CAAG,uBAAH,CAAb,+CAAO,qBAAoC,eAApC,CAAP,CACD,CAJH,CAKE,SAAS,CAAE,mBAACA,MAAD,kCACTA,CAAAA,MADS,SACTA,MADS,wCACTA,MAAM,CAAG,uBAAH,CADG,gDACT,sBAAoC,gBAApC,CADS,EALb,CAQE,KAAK,CAAE,eAACA,MAAD,QAAYA,CAAAA,MAAZ,SAAYA,MAAZ,iBAAYA,MAAM,CAAG,YAAH,CAAlB,EART,CASE,WAAW,CAAE,qBAACA,MAAD,kCACXA,CAAAA,MADW,SACXA,MADW,wCACXA,MAAM,CAAG,uBAAH,CADK,gDACX,sBAAoC,YAApC,CADW,EATf,CAYE,eAAe,KAZjB,EANC,CADA,CAuBLD,IAAI,CAAE,CACJJ,KAAK,CAAE,OADH,CAEJC,IAAI,CAAEP,QAFF,CAGJc,IAAI,CAAE,CAAEC,KAAK,CAAE,YAAT,CAAuBC,KAAK,CAAE,MAA9B,CAHF,CAIJR,OAAO,CAAE,EAJL,CAKJE,IAAI,cACF,oBAAC,UAAD,EACE,WAAW,CAAE,qBAACC,MAAD,QAAYA,CAAAA,MAAM,CAAC,YAAD,CAAlB,EADf,CAEE,aAAa,CAAE,uBAACA,MAAD,yDACbA,MAAM,CAAC,uBAAD,CADO,gDACb,sBAAkC,YAAlC,CADa,EAFjB,CAKE,UAAU,CAAE,yCACV,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,eACE,oBAAC,SAAD,MADF,CADU,EALd,CAUE,QAAQ,CAAC,MAVX,EANE,CAvBD,CADT,EA6CMP,KA7CN,EAFF,CADgB,EAAlB,CAqDA,cAAeD,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { MultiViewsList, SimpleList } from \"@semapps/archipelago-layout\";\nimport { MapList } from \"@semapps/geo-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\n\nconst PlaceList = (props) => (\n  <>\n    <MarkdownIntroduction pageId=\"place-introduction\" />\n    <MultiViewsList\n      views={{\n        map: {\n          label: \"Carte\",\n          icon: MapIcon,\n          perPage: 500,\n          pagination: false,\n          list: (\n            <MapList\n              latitude={(record) => {\n                console.log(record);\n                return record?.[\"pair:hasPostalAddress\"]?.[\"pair:latitude\"];\n              }}\n              longitude={(record) =>\n                record?.[\"pair:hasPostalAddress\"]?.[\"pair:longitude\"]\n              }\n              label={(record) => record?.[\"pair:label\"]}\n              description={(record) =>\n                record?.[\"pair:hasPostalAddress\"]?.[\"pair:label\"]\n              }\n              scrollWheelZoom\n            />\n          ),\n        },\n        list: {\n          label: \"Liste\",\n          icon: ListIcon,\n          sort: { field: \"pair:label\", order: \"DESC\" },\n          perPage: 25,\n          list: (\n            <SimpleList\n              primaryText={(record) => record[\"pair:label\"]}\n              secondaryText={(record) =>\n                record[\"pair:hasPostalAddress\"]?.[\"pair:label\"]\n              }\n              leftAvatar={() => (\n                <Avatar width=\"100%\">\n                  <PlaceIcon />\n                </Avatar>\n              )}\n              linkType=\"show\"\n            />\n          ),\n        },\n      }}\n      {...props}\n    />\n  </>\n);\n\nexport default PlaceList;\n"]},"metadata":{},"sourceType":"module"}