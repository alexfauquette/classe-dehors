{"ast":null,"code":"import React from\"react\";import{ReferenceField,TextField}from\"react-admin\";import{Avatar}from\"@material-ui/core\";import{List,SimpleList,ListActions}from\"@semapps/archipelago-layout\";import EventIcon from\"@material-ui/icons/Event\";import MarkdownIntroduction from\"../../markdown/MarkdownIntroduction\";import isSameDay from\"date-fns/isSameDay\";import isBefore from\"date-fns/isBefore\";import format from\"date-fns/format\";import{eventType}from\"../../constants.js\";var postRowStyle=function postRowStyle(record,index){var pastEvent=isBefore(new Date(record[\"pair:endDate\"]),new Date());return{backgroundColor:pastEvent?\"lightgray\":\"white\"};};var EventList=function EventList(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MarkdownIntroduction,{pageId:\"agenda-introduction\"}),/*#__PURE__*/React.createElement(List,Object.assign({},props,{title:\"Calendrier\",sort:{field:\"pair:startDate\",order:\"ASC\"},actions:/*#__PURE__*/React.createElement(ListActions,{exporter:false})}),/*#__PURE__*/React.createElement(SimpleList,{primaryText:function primaryText(record){return record[\"pair:label\"];},secondaryText:function secondaryText(record){var pastEvent=record[\"pair:endDate\"]&&isBefore(new Date(record[\"pair:endDate\"]),new Date())||!record[\"pair:endDate\"]&&isBefore(new Date(record[\"pair:startDate\"]),new Date());if(pastEvent){return\"Pass\\xE9:\\xA0le\\xA0\".concat(format(new Date(record[\"pair:startDate\"]),\"dd/MM/yyyy\"));}if(record[\"pair:startDate\"]&&record[\"pair:endDate\"]){if(isSameDay(new Date(record[\"pair:startDate\"]),new Date(record[\"pair:endDate\"]))){// Same day : Le xx/xx/xxxx de tt:tt à tt:tt\nreturn\"Le\\xA0\".concat(format(new Date(record[\"pair:startDate\"]),\"dd/MM/yyyy\"),\" de\\xA0\").concat(format(new Date(record[\"pair:startDate\"]),\"kk:mm\"),\"\\xA0\\xE0\\xA0\").concat(format(new Date(record[\"pair:endDate\"]),\"kk:mm\"));}else{// Different days : Du xx/xx/xxxx tt:tt au xx/xx/xxxx tt:tt\nreturn\"Du\\xA0\".concat(format(new Date(record[\"pair:startDate\"]),\"dd/MM/yyyy\\xa0kk:mm\"),\" au\\xA0\").concat(format(new Date(record[\"pair:endDate\"]),\"dd/MM/yyyy\\xa0kk:mm\"));}}if(record[\"pair:startDate\"]){// Only start day indicated : La xx/xx/xxxx à tt:tt\nreturn\"Le\\xA0\".concat(format(new Date(record[\"pair:startDate\"]),\"dd/MM/yyyy\"),\"\\xA0\\xE0\\xA0\").concat(format(new Date(record[\"pair:startDate\"]),\"kk:mm\"));}return\"\";},tertiaryText:function tertiaryText(record){var _eventType$find;if(record[\"pair:operatedBy\"]){return/*#__PURE__*/React.createElement(ReferenceField,{record:record,reference:\"Organization\",basePath:\"Organization\"// Hack to get access to to Organization data\n,source:\"pair:operatedBy\",linkType:\"show\"},/*#__PURE__*/React.createElement(TextField,{source:\"pair:label\"}));}return record[\"pair:hasType\"]?(_eventType$find=eventType.find(function(_ref){var id=_ref.id;return id===record[\"pair:hasType\"];}))===null||_eventType$find===void 0?void 0:_eventType$find.name:\"\";},leftAvatar:function leftAvatar(){return/*#__PURE__*/React.createElement(Avatar,{width:\"100%\"},/*#__PURE__*/React.createElement(EventIcon,null));},linkType:\"show\",rowStyle:postRowStyle})));};export default EventList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventList.js"],"names":["React","ReferenceField","TextField","Avatar","List","SimpleList","ListActions","EventIcon","MarkdownIntroduction","isSameDay","isBefore","format","eventType","postRowStyle","record","index","pastEvent","Date","backgroundColor","EventList","props","field","order","find","id","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ReferenceField, TextField } from \"react-admin\";\nimport { Avatar } from \"@material-ui/core\";\nimport { List, SimpleList, ListActions } from \"@semapps/archipelago-layout\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\n\nimport isSameDay from \"date-fns/isSameDay\";\nimport isBefore from \"date-fns/isBefore\";\nimport format from \"date-fns/format\";\n\nimport { eventType } from \"../../constants.js\";\n\nconst postRowStyle = (record, index) => {\n  const pastEvent = isBefore(new Date(record[\"pair:endDate\"]), new Date());\n  return {\n    backgroundColor: pastEvent ? \"lightgray\" : \"white\",\n  };\n};\n\nconst EventList = (props) => (\n  <>\n    <MarkdownIntroduction pageId=\"agenda-introduction\" />\n    <List\n      {...props}\n      title=\"Calendrier\"\n      sort={{ field: \"pair:startDate\", order: \"ASC\" }}\n      actions={<ListActions exporter={false} />}\n    >\n      <SimpleList\n        primaryText={(record) => record[\"pair:label\"]}\n        secondaryText={(record) => {\n          const pastEvent =\n            (record[\"pair:endDate\"] &&\n              isBefore(new Date(record[\"pair:endDate\"]), new Date())) ||\n            (!record[\"pair:endDate\"] &&\n              isBefore(new Date(record[\"pair:startDate\"]), new Date()));\n\n          if (pastEvent) {\n            return `Passé:\\xa0le\\xa0${format(\n              new Date(record[\"pair:startDate\"]),\n              \"dd/MM/yyyy\"\n            )}`;\n          }\n          if (record[\"pair:startDate\"] && record[\"pair:endDate\"]) {\n            if (\n              isSameDay(\n                new Date(record[\"pair:startDate\"]),\n                new Date(record[\"pair:endDate\"])\n              )\n            ) {\n              // Same day : Le xx/xx/xxxx de tt:tt à tt:tt\n              return `Le\\xa0${format(\n                new Date(record[\"pair:startDate\"]),\n                \"dd/MM/yyyy\"\n              )} de\\xa0${format(\n                new Date(record[\"pair:startDate\"]),\n                \"kk:mm\"\n              )}\\xa0à\\xa0${format(new Date(record[\"pair:endDate\"]), \"kk:mm\")}`;\n            } else {\n              // Different days : Du xx/xx/xxxx tt:tt au xx/xx/xxxx tt:tt\n              return `Du\\xa0${format(\n                new Date(record[\"pair:startDate\"]),\n                \"dd/MM/yyyy\\xa0kk:mm\"\n              )} au\\xa0${format(\n                new Date(record[\"pair:endDate\"]),\n                \"dd/MM/yyyy\\xa0kk:mm\"\n              )}`;\n            }\n          }\n          if (record[\"pair:startDate\"]) {\n            // Only start day indicated : La xx/xx/xxxx à tt:tt\n            return `Le\\xa0${format(\n              new Date(record[\"pair:startDate\"]),\n              \"dd/MM/yyyy\"\n            )}\\xa0à\\xa0${format(new Date(record[\"pair:startDate\"]), \"kk:mm\")}`;\n          }\n          return \"\";\n        }}\n        tertiaryText={(record) => {\n          if (record[\"pair:operatedBy\"]) {\n            return (\n              <ReferenceField\n                record={record}\n                reference=\"Organization\"\n                basePath=\"Organization\" // Hack to get access to to Organization data\n                source=\"pair:operatedBy\"\n                linkType=\"show\"\n              >\n                <TextField source=\"pair:label\" />\n              </ReferenceField>\n            );\n          }\n          return record[\"pair:hasType\"]\n            ? eventType.find(({ id }) => id === record[\"pair:hasType\"])?.name\n            : \"\";\n        }}\n        leftAvatar={() => (\n          <Avatar width=\"100%\">\n            <EventIcon />\n          </Avatar>\n        )}\n        linkType=\"show\"\n        rowStyle={postRowStyle}\n      />\n    </List>\n  </>\n);\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}