{"ast":null,"code":"import _regeneratorRuntime from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/alexandre/dev/classe-dehors/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import ReactMde from'react-mde';import Markdown from'markdown-to-jsx';import{useInput}from'react-admin';import FormControl from'@material-ui/core/FormControl';import FormHelperText from'@material-ui/core/FormHelperText';var MarkdownInput=function MarkdownInput(_ref){var helperText=_ref.helperText,props=_objectWithoutProperties(_ref,[\"helperText\"]);var _useState=useState('write'),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var _useInput=useInput(props),_useInput$input=_useInput.input,value=_useInput$input.value,onChange=_useInput$input.onChange,onBlur=_useInput$input.onBlur,onFocus=_useInput$input.onFocus,_useInput$meta=_useInput.meta,error=_useInput$meta.error,submitError=_useInput$meta.submitError,touched=_useInput$meta.touched,isRequired=_useInput.isRequired;return/*#__PURE__*/React.createElement(FormControl,{fullWidth:true,className:\"ra-input-mde\",error:!!(touched&&(error||submitError)),required:isRequired},/*#__PURE__*/React.createElement(ReactMde,Object.assign({value:value,onChange:onChange,onTabChange:setTab,generateMarkdownPreview:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(markdown){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",/*#__PURE__*/React.createElement(Markdown,null,markdown));case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),selectedTab:tab,childProps:{textArea:{onBlur:onBlur,onFocus:onFocus}}},props)),/*#__PURE__*/React.createElement(FormHelperText,{variant:\"outlined\"},touched&&error?error:typeof helperText===\"string\"?helperText:null));};MarkdownInput.defaultProps={addLabel:true};export default MarkdownInput;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/markdown/MarkdownInput.js"],"names":["React","useState","ReactMde","Markdown","useInput","FormControl","FormHelperText","MarkdownInput","helperText","props","tab","setTab","input","value","onChange","onBlur","onFocus","meta","error","submitError","touched","isRequired","markdown","textArea","defaultProps","addLabel"],"mappings":"qpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA8B,IAA3BC,CAAAA,UAA2B,MAA3BA,UAA2B,CAAZC,KAAY,6DAC5BR,QAAQ,CAAC,OAAD,CADoB,wCAC3CS,GAD2C,eACtCC,MADsC,6BAM9CP,QAAQ,CAACK,KAAD,CANsC,2BAGhDG,KAHgD,CAGvCC,KAHuC,iBAGvCA,KAHuC,CAGhCC,QAHgC,iBAGhCA,QAHgC,CAGtBC,MAHsB,iBAGtBA,MAHsB,CAGdC,OAHc,iBAGdA,OAHc,0BAIhDC,IAJgD,CAIxCC,KAJwC,gBAIxCA,KAJwC,CAIjCC,WAJiC,gBAIjCA,WAJiC,CAIpBC,OAJoB,gBAIpBA,OAJoB,CAKhDC,UALgD,WAKhDA,UALgD,CAQlD,mBACE,oBAAC,WAAD,EACE,SAAS,KADX,CAEE,SAAS,CAAC,cAFZ,CAGE,KAAK,CAAE,CAAC,EAAED,OAAO,GAAKF,KAAK,EAAIC,WAAd,CAAT,CAHV,CAIE,QAAQ,CAAEE,UAJZ,eAME,oBAAC,QAAD,gBACE,KAAK,CAAER,KADT,CAEE,QAAQ,CAAEC,QAFZ,CAGE,WAAW,CAAEH,MAHf,CAIE,uBAAuB,2FAAE,iBAAOW,QAAP,+JACvB,oBAAC,QAAD,MAAWA,QAAX,CADuB,wDAAF,+DAJzB,CAOE,WAAW,CAAEZ,GAPf,CAQE,UAAU,CAAE,CACVa,QAAQ,CAAE,CACRR,MAAM,CAAEA,MADA,CAERC,OAAO,CAAEA,OAFD,CADA,CARd,EAcMP,KAdN,EANF,cAsBE,oBAAC,cAAD,EAAgB,OAAO,CAAC,UAAxB,EACGW,OAAO,EAAIF,KAAX,CACGA,KADH,CAEG,MAAOV,CAAAA,UAAP,GAAsB,QAAtB,CACAA,UADA,CAEA,IALN,CAtBF,CADF,CAgCD,CAxCD,CA0CAD,aAAa,CAACiB,YAAd,CAA6B,CAC3BC,QAAQ,CAAE,IADiB,CAA7B,CAIA,cAAelB,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactMde from 'react-mde';\nimport Markdown from 'markdown-to-jsx';\nimport { useInput } from 'react-admin';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst MarkdownInput = ({ helperText, ...props }) => {\n  const [tab, setTab] = useState('write');\n  const {\n    input: { value, onChange, onBlur, onFocus },\n    meta: { error, submitError, touched },\n    isRequired,\n  } = useInput(props);\n\n  return (\n    <FormControl\n      fullWidth\n      className=\"ra-input-mde\"\n      error={!!(touched && (error || submitError))}\n      required={isRequired}\n    >\n      <ReactMde\n        value={value}\n        onChange={onChange}\n        onTabChange={setTab}\n        generateMarkdownPreview={async (markdown) => (\n          <Markdown>{markdown}</Markdown>\n        )}\n        selectedTab={tab}\n        childProps={{\n          textArea: {\n            onBlur: onBlur,\n            onFocus: onFocus,\n          },\n        }}\n        {...props}\n      />\n      <FormHelperText variant=\"outlined\">\n        {touched && error\n          ? error\n          : typeof helperText === \"string\"\n          ? helperText\n          : null}\n      </FormHelperText>\n    </FormControl>\n  );\n};\n\nMarkdownInput.defaultProps = {\n  addLabel: true,\n};\n\nexport default MarkdownInput;\n"]},"metadata":{},"sourceType":"module"}