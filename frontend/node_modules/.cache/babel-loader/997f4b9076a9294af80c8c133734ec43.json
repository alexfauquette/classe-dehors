{"ast":null,"code":"import React from\"react\";import{DateField}from\"react-admin\";import{Avatar}from\"@material-ui/core\";import{List,SimpleList}from\"@semapps/archipelago-layout\";import EventIcon from\"@material-ui/icons/Event\";import MarkdownIntroduction from\"../../markdown/MarkdownIntroduction\";import{isBefore}from\"date-fns\";var postRowStyle=function postRowStyle(record,index){var pastEvent=isBefore(new Date(record[\"pair:endDate\"]),new Date());return{backgroundColor:pastEvent?\"lightgray\":\"white\"};};var EventList=function EventList(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MarkdownIntroduction,{pageId:\"agenda-introduction\"}),/*#__PURE__*/React.createElement(List,Object.assign({},props,{title:\"Calendrier\",sort:{field:\"pair:startDate\",order:\"DESC\"},actions:false}),/*#__PURE__*/React.createElement(SimpleList,{primaryText:function primaryText(record){return record[\"pair:label\"];},secondaryText:function secondaryText(record){var pastEvent=isBefore(new Date(record[\"pair:endDate\"]),new Date());if(pastEvent){return/*#__PURE__*/React.createElement(React.Fragment,null,\"Pass\\xE9 (\\xE0 eu lieu le \\xA0\",/*#__PURE__*/React.createElement(DateField,{record:record,source:\"pair:startDate\",showTime:true}),\")\");}return/*#__PURE__*/React.createElement(React.Fragment,null,\"Du\\xA0\",/*#__PURE__*/React.createElement(DateField,{record:record,source:\"pair:startDate\",showTime:true}),\"\\xA0au\\xA0\",/*#__PURE__*/React.createElement(DateField,{record:record,source:\"pair:endDate\",showTime:true}));},leftAvatar:function leftAvatar(){return/*#__PURE__*/React.createElement(Avatar,{width:\"100%\"},/*#__PURE__*/React.createElement(EventIcon,null));},linkType:\"show\",rowStyle:postRowStyle})));};export default EventList;","map":{"version":3,"sources":["/home/alexandre/dev/classe-dehors/frontend/src/resources/Event/EventList.js"],"names":["React","DateField","Avatar","List","SimpleList","EventIcon","MarkdownIntroduction","isBefore","postRowStyle","record","index","pastEvent","Date","backgroundColor","EventList","props","field","order"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,6BAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,qCAAjC,CACA,OAASC,QAAT,KAAyB,UAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAASC,KAAT,CAAmB,CACtC,GAAMC,CAAAA,SAAS,CAAGJ,QAAQ,CAAC,GAAIK,CAAAA,IAAJ,CAASH,MAAM,CAAC,cAAD,CAAf,CAAD,CAAmC,GAAIG,CAAAA,IAAJ,EAAnC,CAA1B,CACA,MAAO,CACLC,eAAe,CAAEF,SAAS,CAAG,WAAH,CAAiB,OADtC,CAAP,CAGD,CALD,CAOA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,qBAChB,qDACE,oBAAC,oBAAD,EAAsB,MAAM,CAAC,qBAA7B,EADF,cAEE,oBAAC,IAAD,kBACMA,KADN,EAEE,KAAK,CAAC,YAFR,CAGE,IAAI,CAAE,CAAEC,KAAK,CAAE,gBAAT,CAA2BC,KAAK,CAAE,MAAlC,CAHR,CAIE,OAAO,CAAE,KAJX,gBAME,oBAAC,UAAD,EACE,WAAW,CAAE,qBAACR,MAAD,QAAYA,CAAAA,MAAM,CAAC,YAAD,CAAlB,EADf,CAEE,aAAa,CAAE,uBAACA,MAAD,CAAY,CACzB,GAAME,CAAAA,SAAS,CAAGJ,QAAQ,CACxB,GAAIK,CAAAA,IAAJ,CAASH,MAAM,CAAC,cAAD,CAAf,CADwB,CAExB,GAAIG,CAAAA,IAAJ,EAFwB,CAA1B,CAIA,GAAID,SAAJ,CAAe,CACb,mBACE,sFAEE,oBAAC,SAAD,EAAW,MAAM,CAAEF,MAAnB,CAA2B,MAAM,CAAC,gBAAlC,CAAmD,QAAQ,KAA3D,EAFF,KADF,CAMD,CACD,mBACE,8DAEE,oBAAC,SAAD,EAAW,MAAM,CAAEA,MAAnB,CAA2B,MAAM,CAAC,gBAAlC,CAAmD,QAAQ,KAA3D,EAFF,2BAIE,oBAAC,SAAD,EAAW,MAAM,CAAEA,MAAnB,CAA2B,MAAM,CAAC,cAAlC,CAAiD,QAAQ,KAAzD,EAJF,CADF,CAQD,CAvBH,CAwBE,UAAU,CAAE,yCACV,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,eACE,oBAAC,SAAD,MADF,CADU,EAxBd,CA6BE,QAAQ,CAAC,MA7BX,CA8BE,QAAQ,CAAED,YA9BZ,EANF,CAFF,CADgB,EAAlB,CA6CA,cAAeM,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { DateField } from \"react-admin\";\nimport { Avatar } from \"@material-ui/core\";\nimport { List, SimpleList } from \"@semapps/archipelago-layout\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport MarkdownIntroduction from \"../../markdown/MarkdownIntroduction\";\nimport { isBefore } from \"date-fns\";\n\nconst postRowStyle = (record, index) => {\n  const pastEvent = isBefore(new Date(record[\"pair:endDate\"]), new Date());\n  return {\n    backgroundColor: pastEvent ? \"lightgray\" : \"white\",\n  };\n};\n\nconst EventList = (props) => (\n  <>\n    <MarkdownIntroduction pageId=\"agenda-introduction\" />\n    <List\n      {...props}\n      title=\"Calendrier\"\n      sort={{ field: \"pair:startDate\", order: \"DESC\" }}\n      actions={false}\n    >\n      <SimpleList\n        primaryText={(record) => record[\"pair:label\"]}\n        secondaryText={(record) => {\n          const pastEvent = isBefore(\n            new Date(record[\"pair:endDate\"]),\n            new Date()\n          );\n          if (pastEvent) {\n            return (\n              <>\n                Passé (à eu lieu le &nbsp;\n                <DateField record={record} source=\"pair:startDate\" showTime />)\n              </>\n            );\n          }\n          return (\n            <>\n              Du&nbsp;\n              <DateField record={record} source=\"pair:startDate\" showTime />\n              &nbsp;au&nbsp;\n              <DateField record={record} source=\"pair:endDate\" showTime />\n            </>\n          );\n        }}\n        leftAvatar={() => (\n          <Avatar width=\"100%\">\n            <EventIcon />\n          </Avatar>\n        )}\n        linkType=\"show\"\n        rowStyle={postRowStyle}\n      />\n    </List>\n  </>\n);\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}